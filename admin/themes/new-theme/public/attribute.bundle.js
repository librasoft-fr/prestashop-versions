/*! For license information please see attribute.bundle.js.LICENSE.txt */
(()=>{var t={4110:(t,e)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0});var n=window.$;e.default=function(t,e){n.post(t).then((function(){return window.location.assign(e)}))}},61353:(t,e,n)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=i(n(99663)),o=i(n(22600));function i(t){return t&&t.__esModule?t:{default:t}}var a=window.$,s=function(){function t(e){(0,r.default)(this,t),this.selector=".ps-sortable-column",this.columns=a(e).find(this.selector)}return(0,o.default)(t,[{key:"attach",value:function(){var t=this;this.columns.on("click",(function(e){var n=a(e.delegateTarget);t.sortByColumn(n,t.getToggledSortDirection(n))}))}},{key:"sortBy",value:function(t,e){var n=this.columns.is('[data-sort-col-name="'+t+'"]');if(!n)throw new Error('Cannot sort by "'+t+'": invalid column');this.sortByColumn(n,e)}},{key:"sortByColumn",value:function(t,e){window.location=this.getUrl(t.data("sortColName"),"desc"===e?"desc":"asc",t.data("sortPrefix"))}},{key:"getToggledSortDirection",value:function(t){return"asc"===t.data("sortDirection")?"desc":"asc"}},{key:"getUrl",value:function(t,e,n){var r=new URL(window.location.href),o=r.searchParams;return n?(o.set(n+"[orderBy]",t),o.set(n+"[sortOrder]",e)):(o.set("orderBy",t),o.set("sortOrder",e)),r.toString()}}]),t}();e.default=s},91781:(t,e,n)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=a(n(99663)),o=a(n(22600)),i=a(n(68840));function a(t){return t&&t.__esModule?t:{default:t}}var s=window.$,l=function(){function t(){(0,r.default)(this,t)}return(0,o.default)(t,[{key:"extend",value:function(t){var e=this;t.getContainer().on("click",".js-submit-row-action",(function(n){n.preventDefault();var r=s(n.currentTarget),o=r.data("confirmMessage"),i=r.data("title"),a=r.data("method");if(i)e.showConfirmModal(r,t,o,i,a);else{if(o.length&&!window.confirm(o))return;e.postForm(r,a)}}))}},{key:"postForm",value:function(t,e){var n=["GET","POST"].includes(e),r=s("<form>",{action:t.data("url"),method:n?e:"POST"}).appendTo("body");n||r.append(s("<input>",{type:"_hidden",name:"_method",value:e})),r.submit()}},{key:"showConfirmModal",value:function(t,e,n,r,o){var a=this,s=t.data("confirmButtonLabel"),l=t.data("closeButtonLabel"),u=t.data("confirmButtonClass");new i.default({id:e.getId()+"-grid-confirm-modal",confirmTitle:r,confirmMessage:n,confirmButtonLabel:s,closeButtonLabel:l,confirmButtonClass:u},(function(){return a.postForm(t,o)})).show()}}]),t}();e.default=l},5595:(t,e,n)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=i(n(99663)),o=i(n(22600));function i(t){return t&&t.__esModule?t:{default:t}}var a=window.$,s=function(){function t(){(0,r.default)(this,t)}return(0,o.default)(t,[{key:"extend",value:function(t){this.handleBulkActionCheckboxSelect(t),this.handleBulkActionSelectAllCheckbox(t)}},{key:"handleBulkActionSelectAllCheckbox",value:function(t){var e=this;t.getContainer().on("change",".js-bulk-action-select-all",(function(n){var r=a(n.currentTarget).is(":checked");r?e.enableBulkActionsBtn(t):e.disableBulkActionsBtn(t),t.getContainer().find(".js-bulk-action-checkbox").prop("checked",r)}))}},{key:"handleBulkActionCheckboxSelect",value:function(t){var e=this;t.getContainer().on("change",".js-bulk-action-checkbox",(function(){t.getContainer().find(".js-bulk-action-checkbox:checked").length>0?e.enableBulkActionsBtn(t):e.disableBulkActionsBtn(t)}))}},{key:"enableBulkActionsBtn",value:function(t){t.getContainer().find(".js-bulk-actions-btn").prop("disabled",!1)}},{key:"disableBulkActionsBtn",value:function(t){t.getContainer().find(".js-bulk-actions-btn").prop("disabled",!0)}}]),t}();e.default=s},2573:(t,e,n)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=i(n(99663)),o=i(n(22600));function i(t){return t&&t.__esModule?t:{default:t}}var a=window.$,s=function(){function t(){(0,r.default)(this,t)}return(0,o.default)(t,[{key:"extend",value:function(t){var e=this;t.getHeaderContainer().on("click",".js-common_show_query-grid-action",(function(){return e.onShowSqlQueryClick(t)})),t.getHeaderContainer().on("click",".js-common_export_sql_manager-grid-action",(function(){return e.onExportSqlManagerClick(t)}))}},{key:"onShowSqlQueryClick",value:function(t){var e=a("#"+t.getId()+"_common_show_query_modal_form");this.fillExportForm(e,t);var n=a("#"+t.getId()+"_grid_common_show_query_modal");n.modal("show"),n.on("click",".btn-sql-submit",(function(){return e.submit()}))}},{key:"onExportSqlManagerClick",value:function(t){var e=a("#"+t.getId()+"_common_show_query_modal_form");this.fillExportForm(e,t),e.submit()}},{key:"fillExportForm",value:function(t,e){var n=e.getContainer().find(".js-grid-table").data("query");t.find('textarea[name="sql"]').val(n),t.find('input[name="name"]').val(this.getNameFromBreadcrumb())}},{key:"getNameFromBreadcrumb",value:function(){var t=a(".header-toolbar").find(".breadcrumb-item"),e="";return t.each((function(t,n){var r=a(n),o=r.find("a").length>0?r.find("a").text():r.text();e.length>0&&(e=e.concat(" > ")),e=e.concat(o)})),e}}]),t}();e.default=s},96803:(t,e,n)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=a(n(99663)),o=a(n(22600)),i=a(n(4110));function a(t){return t&&t.__esModule?t:{default:t}}var s=window.$,l=function(){function t(){(0,r.default)(this,t)}return(0,o.default)(t,[{key:"extend",value:function(t){t.getContainer().on("click",".js-reset-search",(function(t){(0,i.default)(s(t.currentTarget).data("url"),s(t.currentTarget).data("redirect"))}))}}]),t}();e.default=l},91137:(t,e,n)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=i(n(99663)),o=i(n(22600));function i(t){return t&&t.__esModule?t:{default:t}}var a=function(){function t(){(0,r.default)(this,t)}return(0,o.default)(t,[{key:"extend",value:function(t){var e=t.getContainer().find(".column-filters");e.find(".grid-search-button").prop("disabled",!0),e.find("input:not(.js-bulk-action-select-all), select").on("input dp.change",(function(){e.find(".grid-search-button").prop("disabled",!1),e.find(".js-grid-reset-button").prop("hidden",!1)}))}}]),t}();e.default=a},92448:(t,e,n)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=a(n(12424)),o=a(n(99663)),i=a(n(22600));function a(t){return t&&t.__esModule?t:{default:t}}n(73867);var s=window.$,l=function(){function t(){var e=this;return(0,o.default)(this,t),{extend:function(t){return e.extend(t)}}}return(0,i.default)(t,[{key:"extend",value:function(t){var e=this;this.grid=t,this.addIdsToGridTableRows(),t.getContainer().find(".js-grid-table").tableDnD({onDragClass:"position-row-while-drag",dragHandle:".js-drag-handle",onDrop:function(t,n){return e.handlePositionChange(n)}}),t.getContainer().find(".js-drag-handle").hover((function(){s(this).closest("tr").addClass("hover")}),(function(){s(this).closest("tr").removeClass("hover")}))}},{key:"handlePositionChange",value:function(t){var e=s(t).find(".js-"+this.grid.getId()+"-position:first"),n=e.data("update-url"),r=e.data("update-method"),o={positions:this.getRowsPositions()};this.updatePosition(n,o,r)}},{key:"getRowsPositions",value:function(){for(var t=JSON.parse(s.tableDnD.jsonize())[this.grid.getId()+"_grid_table"],e=[],n=void 0,r=0;r<t.length;r+=1)n=this.grid.getContainer().find("#"+t[r]),e.push({rowMarker:t[r],offset:n.data("dragAndDropOffset")});return this.computeMappingBetweenOldAndNewPositions(e)}},{key:"addIdsToGridTableRows",value:function(){var t=0;this.grid.getContainer().find(".js-grid-table .js-"+this.grid.getId()+"-position").each((function(e,n){var r=s(n),o="row_"+r.data("id")+"_"+r.data("position");r.closest("tr").attr("id",o),r.closest("td").addClass("js-drag-handle"),r.closest("tr").data("dragAndDropOffset",t),t+=1}))}},{key:"updatePosition",value:function(t,e,n){for(var r=["GET","POST"].includes(n),o=s("<form>",{action:t,method:r?n:"POST"}).appendTo("body"),i=e.positions.length,a=void 0,l=0;l<i;l+=1)a=e.positions[l],o.append(s("<input>",{type:"hidden",name:"positions["+l+"][rowId]",value:a.rowId}),s("<input>",{type:"hidden",name:"positions["+l+"][oldPosition]",value:a.oldPosition}),s("<input>",{type:"hidden",name:"positions["+l+"][newPosition]",value:a.newPosition}));r||o.append(s("<input>",{type:"hidden",name:"_method",value:n})),o.submit()}},{key:"computeMappingBetweenOldAndNewPositions",value:function(t){for(var e=/^row_(\d+)_(\d+)$/,n=Array(t.length).fill().map(Object),o=0;o<t.length;o+=1){var i=e.exec(t[o].rowMarker),a=(0,r.default)(i,3),s=a[1],l=a[2];n[o].rowId=s,n[o].oldPosition=parseInt(l,10),n[t[o].offset].newPosition=n[o].oldPosition}return n}}]),t}();e.default=l},37758:(t,e,n)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=i(n(99663)),o=i(n(22600));function i(t){return t&&t.__esModule?t:{default:t}}var a=function(){function t(){(0,r.default)(this,t)}return(0,o.default)(t,[{key:"extend",value:function(t){t.getHeaderContainer().on("click",".js-common_refresh_list-grid-action",(function(){window.location.reload()}))}}]),t}();e.default=a},58630:(t,e,n)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=a(n(99663)),o=a(n(22600)),i=a(n(61353));function a(t){return t&&t.__esModule?t:{default:t}}var s=function(){function t(){(0,r.default)(this,t)}return(0,o.default)(t,[{key:"extend",value:function(t){var e=t.getContainer().find("table.table");new i.default(e).attach()}}]),t}();e.default=s},17868:(t,e,n)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=a(n(99663)),o=a(n(22600)),i=a(n(68840));function a(t){return t&&t.__esModule?t:{default:t}}var s=window.$,l=function(){function t(){var e=this;return(0,r.default)(this,t),{extend:function(t){return e.extend(t)}}}return(0,o.default)(t,[{key:"extend",value:function(t){var e=this;t.getContainer().on("click",".js-bulk-action-submit-btn",(function(n){e.submit(n,t)}))}},{key:"submit",value:function(t,e){var n=s(t.currentTarget),r=n.data("confirm-message"),o=n.data("confirmTitle");void 0!==r&&r.length>0?void 0!==o?this.showConfirmModal(n,e,r,o):window.confirm(r)&&this.postForm(n,e):this.postForm(n,e)}},{key:"showConfirmModal",value:function(t,e,n,r){var o=this,a=t.data("confirmButtonLabel"),s=t.data("closeButtonLabel"),l=t.data("confirmButtonClass");new i.default({id:e.getId()+"-grid-confirm-modal",confirmTitle:r,confirmMessage:n,confirmButtonLabel:a,closeButtonLabel:s,confirmButtonClass:l},(function(){return o.postForm(t,e)})).show()}},{key:"postForm",value:function(t,e){var n=s("#"+e.getId()+"_filter_form");n.attr("action",t.data("form-url")),n.attr("method",t.data("form-method")),n.submit()}}]),t}();e.default=l},53277:(t,e,n)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r=i(n(99663)),o=i(n(22600));function i(t){return t&&t.__esModule?t:{default:t}}var a=window.$,s=function(){function t(e){(0,r.default)(this,t),this.id=e,this.$container=a("#"+this.id+"_grid")}return(0,o.default)(t,[{key:"getId",value:function(){return this.id}},{key:"getContainer",value:function(){return this.$container}},{key:"getHeaderContainer",value:function(){return this.$container.closest(".js-grid-panel").find(".js-grid-header")}},{key:"addExtension",value:function(t){t.extend(this)}}]),t}();e.default=s},68840:(t,e,n)=>{"use strict";Object.defineProperty(e,"__esModule",{value:!0});var r,o=(r=n(85315))&&r.__esModule?r:{default:r};e.default=function(t,e,n){var r=this,a=t.id,s=t.closable;this.modal=function(t){var e,n=t.id,r=void 0===n?"confirm-modal":n,i=t.confirmTitle,a=t.confirmMessage,s=void 0===a?"":a,l=t.closeButtonLabel,u=void 0===l?"Close":l,d=t.confirmButtonLabel,c=void 0===d?"Accept":d,f=t.confirmButtonClass,h=void 0===f?"btn-primary":f,p=t.customButtons,v=void 0===p?[]:p,g={};return g.container=document.createElement("div"),g.container.classList.add("modal","fade"),g.container.id=r,g.dialog=document.createElement("div"),g.dialog.classList.add("modal-dialog"),g.content=document.createElement("div"),g.content.classList.add("modal-content"),g.header=document.createElement("div"),g.header.classList.add("modal-header"),i&&(g.title=document.createElement("h4"),g.title.classList.add("modal-title"),g.title.innerHTML=i),g.closeIcon=document.createElement("button"),g.closeIcon.classList.add("close"),g.closeIcon.setAttribute("type","button"),g.closeIcon.dataset.dismiss="modal",g.closeIcon.innerHTML="×",g.body=document.createElement("div"),g.body.classList.add("modal-body","text-left","font-weight-normal"),g.message=document.createElement("p"),g.message.classList.add("confirm-message"),g.message.innerHTML=s,g.footer=document.createElement("div"),g.footer.classList.add("modal-footer"),g.closeButton=document.createElement("button"),g.closeButton.setAttribute("type","button"),g.closeButton.classList.add("btn","btn-outline-secondary","btn-lg"),g.closeButton.dataset.dismiss="modal",g.closeButton.innerHTML=u,g.confirmButton=document.createElement("button"),g.confirmButton.setAttribute("type","button"),g.confirmButton.classList.add("btn",h,"btn-lg","btn-confirm-submit"),g.confirmButton.dataset.dismiss="modal",g.confirmButton.innerHTML=c,i?g.header.append(g.title,g.closeIcon):g.header.appendChild(g.closeIcon),g.body.appendChild(g.message),(e=g.footer).append.apply(e,[g.closeButton].concat((0,o.default)(v),[g.confirmButton])),g.content.append(g.header,g.body,g.footer),g.dialog.appendChild(g.content),g.container.appendChild(g.dialog),g}(t),this.$modal=i(this.modal.container),this.show=function(){r.$modal.modal()},this.modal.confirmButton.addEventListener("click",e),this.$modal.modal({backdrop:!!s||"static",keyboard:void 0===s||s,closable:void 0===s||s,show:!1}),this.$modal.on("hidden.bs.modal",(function(){document.querySelector("#"+a).remove(),n&&n()})),document.body.appendChild(this.modal.container)};var i=window.$},24043:(t,e,n)=>{t.exports={default:n(47185),__esModule:!0}},26378:(t,e,n)=>{t.exports={default:n(3597),__esModule:!0}},40863:(t,e,n)=>{t.exports={default:n(21035),__esModule:!0}},32242:(t,e,n)=>{t.exports={default:n(33391),__esModule:!0}},99663:(t,e)=>{"use strict";e.__esModule=!0,e.default=function(t,e){if(!(t instanceof e))throw new TypeError("Cannot call a class as a function")}},22600:(t,e,n)=>{"use strict";e.__esModule=!0;var r,o=(r=n(32242))&&r.__esModule?r:{default:r};e.default=function(){function t(t,e){for(var n=0;n<e.length;n++){var r=e[n];r.enumerable=r.enumerable||!1,r.configurable=!0,"value"in r&&(r.writable=!0),(0,o.default)(t,r.key,r)}}return function(e,n,r){return n&&t(e.prototype,n),r&&t(e,r),e}}()},12424:(t,e,n)=>{"use strict";e.__esModule=!0;var r=i(n(40863)),o=i(n(26378));function i(t){return t&&t.__esModule?t:{default:t}}e.default=function(t,e){if(Array.isArray(t))return t;if((0,r.default)(Object(t)))return function(t,e){var n=[],r=!0,i=!1,a=void 0;try{for(var s,l=(0,o.default)(t);!(r=(s=l.next()).done)&&(n.push(s.value),!e||n.length!==e);r=!0);}catch(t){i=!0,a=t}finally{try{!r&&l.return&&l.return()}finally{if(i)throw a}}return n}(t,e);throw new TypeError("Invalid attempt to destructure non-iterable instance")}},85315:(t,e,n)=>{"use strict";e.__esModule=!0;var r,o=(r=n(24043))&&r.__esModule?r:{default:r};e.default=function(t){if(Array.isArray(t)){for(var e=0,n=Array(t.length);e<t.length;e++)n[e]=t[e];return n}return(0,o.default)(t)}},47185:(t,e,n)=>{n(91867),n(2586),t.exports=n(34579).Array.from},3597:(t,e,n)=>{n(73871),n(91867),t.exports=n(46459)},21035:(t,e,n)=>{n(73871),n(91867),t.exports=n(89553)},33391:(t,e,n)=>{n(31477);var r=n(34579).Object;t.exports=function(t,e,n){return r.defineProperty(t,e,n)}},85663:t=>{t.exports=function(t){if("function"!=typeof t)throw TypeError(t+" is not a function!");return t}},79003:t=>{t.exports=function(){}},12159:(t,e,n)=>{var r=n(36727);t.exports=function(t){if(!r(t))throw TypeError(t+" is not an object!");return t}},57428:(t,e,n)=>{var r=n(7932),o=n(78728),i=n(16531);t.exports=function(t){return function(e,n,a){var s,l=r(e),u=o(l.length),d=i(a,u);if(t&&n!=n){for(;u>d;)if((s=l[d++])!=s)return!0}else for(;u>d;d++)if((t||d in l)&&l[d]===n)return t||d||0;return!t&&-1}}},14677:(t,e,n)=>{var r=n(32894),o=n(22939)("toStringTag"),i="Arguments"==r(function(){return arguments}());t.exports=function(t){var e,n,a;return void 0===t?"Undefined":null===t?"Null":"string"==typeof(n=function(t,e){try{return t[e]}catch(t){}}(e=Object(t),o))?n:i?r(e):"Object"==(a=r(e))&&"function"==typeof e.callee?"Arguments":a}},32894:t=>{var e={}.toString;t.exports=function(t){return e.call(t).slice(8,-1)}},34579:t=>{var e=t.exports={version:"2.6.11"};"number"==typeof __e&&(__e=e)},52445:(t,e,n)=>{"use strict";var r=n(4743),o=n(83101);t.exports=function(t,e,n){e in t?r.f(t,e,o(0,n)):t[e]=n}},19216:(t,e,n)=>{var r=n(85663);t.exports=function(t,e,n){if(r(t),void 0===e)return t;switch(n){case 1:return function(n){return t.call(e,n)};case 2:return function(n,r){return t.call(e,n,r)};case 3:return function(n,r,o){return t.call(e,n,r,o)}}return function(){return t.apply(e,arguments)}}},8333:t=>{t.exports=function(t){if(null==t)throw TypeError("Can't call method on  "+t);return t}},89666:(t,e,n)=>{t.exports=!n(7929)((function(){return 7!=Object.defineProperty({},"a",{get:function(){return 7}}).a}))},97467:(t,e,n)=>{var r=n(36727),o=n(33938).document,i=r(o)&&r(o.createElement);t.exports=function(t){return i?o.createElement(t):{}}},73338:t=>{t.exports="constructor,hasOwnProperty,isPrototypeOf,propertyIsEnumerable,toLocaleString,toString,valueOf".split(",")},83856:(t,e,n)=>{var r=n(33938),o=n(34579),i=n(19216),a=n(41818),s=n(27069),l=function(t,e,n){var u,d,c,f=t&l.F,h=t&l.G,p=t&l.S,v=t&l.P,g=t&l.B,m=t&l.W,b=h?o:o[e]||(o[e]={}),y=b.prototype,D=h?r:p?r[e]:(r[e]||{}).prototype;for(u in h&&(n=e),n)(d=!f&&D&&void 0!==D[u])&&s(b,u)||(c=d?D[u]:n[u],b[u]=h&&"function"!=typeof D[u]?n[u]:g&&d?i(c,r):m&&D[u]==c?function(t){var e=function(e,n,r){if(this instanceof t){switch(arguments.length){case 0:return new t;case 1:return new t(e);case 2:return new t(e,n)}return new t(e,n,r)}return t.apply(this,arguments)};return e.prototype=t.prototype,e}(c):v&&"function"==typeof c?i(Function.call,c):c,v&&((b.virtual||(b.virtual={}))[u]=c,t&l.R&&y&&!y[u]&&a(y,u,c)))};l.F=1,l.G=2,l.S=4,l.P=8,l.B=16,l.W=32,l.U=64,l.R=128,t.exports=l},7929:t=>{t.exports=function(t){try{return!!t()}catch(t){return!0}}},33938:t=>{var e=t.exports="undefined"!=typeof window&&window.Math==Math?window:"undefined"!=typeof self&&self.Math==Math?self:Function("return this")();"number"==typeof __g&&(__g=e)},27069:t=>{var e={}.hasOwnProperty;t.exports=function(t,n){return e.call(t,n)}},41818:(t,e,n)=>{var r=n(4743),o=n(83101);t.exports=n(89666)?function(t,e,n){return r.f(t,e,o(1,n))}:function(t,e,n){return t[e]=n,t}},54881:(t,e,n)=>{var r=n(33938).document;t.exports=r&&r.documentElement},33758:(t,e,n)=>{t.exports=!n(89666)&&!n(7929)((function(){return 7!=Object.defineProperty(n(97467)("div"),"a",{get:function(){return 7}}).a}))},50799:(t,e,n)=>{var r=n(32894);t.exports=Object("z").propertyIsEnumerable(0)?Object:function(t){return"String"==r(t)?t.split(""):Object(t)}},45991:(t,e,n)=>{var r=n(15449),o=n(22939)("iterator"),i=Array.prototype;t.exports=function(t){return void 0!==t&&(r.Array===t||i[o]===t)}},36727:t=>{t.exports=function(t){return"object"==typeof t?null!==t:"function"==typeof t}},95602:(t,e,n)=>{var r=n(12159);t.exports=function(t,e,n,o){try{return o?e(r(n)[0],n[1]):e(n)}catch(e){var i=t.return;throw void 0!==i&&r(i.call(t)),e}}},33945:(t,e,n)=>{"use strict";var r=n(98989),o=n(83101),i=n(25378),a={};n(41818)(a,n(22939)("iterator"),(function(){return this})),t.exports=function(t,e,n){t.prototype=r(a,{next:o(1,n)}),i(t,e+" Iterator")}},45700:(t,e,n)=>{"use strict";var r=n(16227),o=n(83856),i=n(57470),a=n(41818),s=n(15449),l=n(33945),u=n(25378),d=n(95089),c=n(22939)("iterator"),f=!([].keys&&"next"in[].keys()),h="keys",p="values",v=function(){return this};t.exports=function(t,e,n,g,m,b,y){l(n,e,g);var D,w,x,_=function(t){if(!f&&t in j)return j[t];switch(t){case h:case p:return function(){return new n(this,t)}}return function(){return new n(this,t)}},C=e+" Iterator",k=m==p,T=!1,j=t.prototype,O=j[c]||j["@@iterator"]||m&&j[m],S=O||_(m),M=m?k?_("entries"):S:void 0,L="Array"==e&&j.entries||O;if(L&&(x=d(L.call(new t)))!==Object.prototype&&x.next&&(u(x,C,!0),r||"function"==typeof x[c]||a(x,c,v)),k&&O&&O.name!==p&&(T=!0,S=function(){return O.call(this)}),r&&!y||!f&&!T&&j[c]||a(j,c,S),s[e]=S,s[C]=v,m)if(D={values:k?S:_(p),keys:b?S:_(h),entries:M},y)for(w in D)w in j||i(j,w,D[w]);else o(o.P+o.F*(f||T),e,D);return D}},96630:(t,e,n)=>{var r=n(22939)("iterator"),o=!1;try{var i=[7][r]();i.return=function(){o=!0},Array.from(i,(function(){throw 2}))}catch(t){}t.exports=function(t,e){if(!e&&!o)return!1;var n=!1;try{var i=[7],a=i[r]();a.next=function(){return{done:n=!0}},i[r]=function(){return a},t(i)}catch(t){}return n}},85084:t=>{t.exports=function(t,e){return{value:e,done:!!t}}},15449:t=>{t.exports={}},16227:t=>{t.exports=!0},98989:(t,e,n)=>{var r=n(12159),o=n(57856),i=n(73338),a=n(58989)("IE_PROTO"),s=function(){},l=function(){var t,e=n(97467)("iframe"),r=i.length;for(e.style.display="none",n(54881).appendChild(e),e.src="javascript:",(t=e.contentWindow.document).open(),t.write("<script>document.F=Object<\/script>"),t.close(),l=t.F;r--;)delete l.prototype[i[r]];return l()};t.exports=Object.create||function(t,e){var n;return null!==t?(s.prototype=r(t),n=new s,s.prototype=null,n[a]=t):n=l(),void 0===e?n:o(n,e)}},4743:(t,e,n)=>{var r=n(12159),o=n(33758),i=n(33206),a=Object.defineProperty;e.f=n(89666)?Object.defineProperty:function(t,e,n){if(r(t),e=i(e,!0),r(n),o)try{return a(t,e,n)}catch(t){}if("get"in n||"set"in n)throw TypeError("Accessors not supported!");return"value"in n&&(t[e]=n.value),t}},57856:(t,e,n)=>{var r=n(4743),o=n(12159),i=n(46162);t.exports=n(89666)?Object.defineProperties:function(t,e){o(t);for(var n,a=i(e),s=a.length,l=0;s>l;)r.f(t,n=a[l++],e[n]);return t}},95089:(t,e,n)=>{var r=n(27069),o=n(66530),i=n(58989)("IE_PROTO"),a=Object.prototype;t.exports=Object.getPrototypeOf||function(t){return t=o(t),r(t,i)?t[i]:"function"==typeof t.constructor&&t instanceof t.constructor?t.constructor.prototype:t instanceof Object?a:null}},12963:(t,e,n)=>{var r=n(27069),o=n(7932),i=n(57428)(!1),a=n(58989)("IE_PROTO");t.exports=function(t,e){var n,s=o(t),l=0,u=[];for(n in s)n!=a&&r(s,n)&&u.push(n);for(;e.length>l;)r(s,n=e[l++])&&(~i(u,n)||u.push(n));return u}},46162:(t,e,n)=>{var r=n(12963),o=n(73338);t.exports=Object.keys||function(t){return r(t,o)}},83101:t=>{t.exports=function(t,e){return{enumerable:!(1&t),configurable:!(2&t),writable:!(4&t),value:e}}},57470:(t,e,n)=>{t.exports=n(41818)},25378:(t,e,n)=>{var r=n(4743).f,o=n(27069),i=n(22939)("toStringTag");t.exports=function(t,e,n){t&&!o(t=n?t:t.prototype,i)&&r(t,i,{configurable:!0,value:e})}},58989:(t,e,n)=>{var r=n(20250)("keys"),o=n(65730);t.exports=function(t){return r[t]||(r[t]=o(t))}},20250:(t,e,n)=>{var r=n(34579),o=n(33938),i="__core-js_shared__",a=o[i]||(o[i]={});(t.exports=function(t,e){return a[t]||(a[t]=void 0!==e?e:{})})("versions",[]).push({version:r.version,mode:n(16227)?"pure":"global",copyright:"© 2019 Denis Pushkarev (zloirock.ru)"})},90510:(t,e,n)=>{var r=n(11052),o=n(8333);t.exports=function(t){return function(e,n){var i,a,s=String(o(e)),l=r(n),u=s.length;return l<0||l>=u?t?"":void 0:(i=s.charCodeAt(l))<55296||i>56319||l+1===u||(a=s.charCodeAt(l+1))<56320||a>57343?t?s.charAt(l):i:t?s.slice(l,l+2):a-56320+(i-55296<<10)+65536}}},16531:(t,e,n)=>{var r=n(11052),o=Math.max,i=Math.min;t.exports=function(t,e){return(t=r(t))<0?o(t+e,0):i(t,e)}},11052:t=>{var e=Math.ceil,n=Math.floor;t.exports=function(t){return isNaN(t=+t)?0:(t>0?n:e)(t)}},7932:(t,e,n)=>{var r=n(50799),o=n(8333);t.exports=function(t){return r(o(t))}},78728:(t,e,n)=>{var r=n(11052),o=Math.min;t.exports=function(t){return t>0?o(r(t),9007199254740991):0}},66530:(t,e,n)=>{var r=n(8333);t.exports=function(t){return Object(r(t))}},33206:(t,e,n)=>{var r=n(36727);t.exports=function(t,e){if(!r(t))return t;var n,o;if(e&&"function"==typeof(n=t.toString)&&!r(o=n.call(t)))return o;if("function"==typeof(n=t.valueOf)&&!r(o=n.call(t)))return o;if(!e&&"function"==typeof(n=t.toString)&&!r(o=n.call(t)))return o;throw TypeError("Can't convert object to primitive value")}},65730:t=>{var e=0,n=Math.random();t.exports=function(t){return"Symbol(".concat(void 0===t?"":t,")_",(++e+n).toString(36))}},22939:(t,e,n)=>{var r=n(20250)("wks"),o=n(65730),i=n(33938).Symbol,a="function"==typeof i;(t.exports=function(t){return r[t]||(r[t]=a&&i[t]||(a?i:o)("Symbol."+t))}).store=r},83728:(t,e,n)=>{var r=n(14677),o=n(22939)("iterator"),i=n(15449);t.exports=n(34579).getIteratorMethod=function(t){if(null!=t)return t[o]||t["@@iterator"]||i[r(t)]}},46459:(t,e,n)=>{var r=n(12159),o=n(83728);t.exports=n(34579).getIterator=function(t){var e=o(t);if("function"!=typeof e)throw TypeError(t+" is not iterable!");return r(e.call(t))}},89553:(t,e,n)=>{var r=n(14677),o=n(22939)("iterator"),i=n(15449);t.exports=n(34579).isIterable=function(t){var e=Object(t);return void 0!==e[o]||"@@iterator"in e||i.hasOwnProperty(r(e))}},2586:(t,e,n)=>{"use strict";var r=n(19216),o=n(83856),i=n(66530),a=n(95602),s=n(45991),l=n(78728),u=n(52445),d=n(83728);o(o.S+o.F*!n(96630)((function(t){Array.from(t)})),"Array",{from:function(t){var e,n,o,c,f=i(t),h="function"==typeof this?this:Array,p=arguments.length,v=p>1?arguments[1]:void 0,g=void 0!==v,m=0,b=d(f);if(g&&(v=r(v,p>2?arguments[2]:void 0,2)),null==b||h==Array&&s(b))for(n=new h(e=l(f.length));e>m;m++)u(n,m,g?v(f[m],m):f[m]);else for(c=b.call(f),n=new h;!(o=c.next()).done;m++)u(n,m,g?a(c,v,[o.value,m],!0):o.value);return n.length=m,n}})},3882:(t,e,n)=>{"use strict";var r=n(79003),o=n(85084),i=n(15449),a=n(7932);t.exports=n(45700)(Array,"Array",(function(t,e){this._t=a(t),this._i=0,this._k=e}),(function(){var t=this._t,e=this._k,n=this._i++;return!t||n>=t.length?(this._t=void 0,o(1)):o(0,"keys"==e?n:"values"==e?t[n]:[n,t[n]])}),"values"),i.Arguments=i.Array,r("keys"),r("values"),r("entries")},31477:(t,e,n)=>{var r=n(83856);r(r.S+r.F*!n(89666),"Object",{defineProperty:n(4743).f})},91867:(t,e,n)=>{"use strict";var r=n(90510)(!0);n(45700)(String,"String",(function(t){this._t=String(t),this._i=0}),(function(){var t,e=this._t,n=this._i;return n>=e.length?{value:void 0,done:!0}:(t=r(e,n),this._i+=t.length,{value:t,done:!1})}))},73871:(t,e,n)=>{n(3882);for(var r=n(33938),o=n(41818),i=n(15449),a=n(22939)("toStringTag"),s="CSSRuleList,CSSStyleDeclaration,CSSValueList,ClientRectList,DOMRectList,DOMStringList,DOMTokenList,DataTransferItemList,FileList,HTMLAllCollection,HTMLCollection,HTMLFormElement,HTMLSelectElement,MediaList,MimeTypeArray,NamedNodeMap,NodeList,PaintRequestList,Plugin,PluginArray,SVGLengthList,SVGNumberList,SVGPathSegList,SVGPointList,SVGStringList,SVGTransformList,SourceBufferList,StyleSheetList,TextTrackCueList,TextTrackList,TouchList".split(","),l=0;l<s.length;l++){var u=s[l],d=r[u],c=d&&d.prototype;c&&!c[a]&&o(c,a,u),i[u]=i.Array}},73867:(t,e,n)=>{var r,o,i,a,s,l,u=n(73609);r=u,o=window,i=window.document,a="touchstart mousedown",s="touchmove mousemove",l="touchend mouseup",r(i).ready((function(){function t(t){for(var e={},n=t.match(/([^;:]+)/g)||[];n.length;)e[n.shift()]=n.shift().trim();return e}r("table").each((function(){"dnd"===r(this).data("table")&&r(this).tableDnD({onDragStyle:r(this).data("ondragstyle")&&t(r(this).data("ondragstyle"))||null,onDropStyle:r(this).data("ondropstyle")&&t(r(this).data("ondropstyle"))||null,onDragClass:void 0===r(this).data("ondragclass")?"tDnD_whileDrag":r(this).data("ondragclass"),onDrop:r(this).data("ondrop")&&new Function("table","row",r(this).data("ondrop")),onDragStart:r(this).data("ondragstart")&&new Function("table","row",r(this).data("ondragstart")),onDragStop:r(this).data("ondragstop")&&new Function("table","row",r(this).data("ondragstop")),scrollAmount:r(this).data("scrollamount")||5,sensitivity:r(this).data("sensitivity")||10,hierarchyLevel:r(this).data("hierarchylevel")||0,indentArtifact:r(this).data("indentartifact")||'<div class="indent">&nbsp;</div>',autoWidthAdjust:r(this).data("autowidthadjust")||!0,autoCleanRelations:r(this).data("autocleanrelations")||!0,jsonPretifySeparator:r(this).data("jsonpretifyseparator")||"\t",serializeRegexp:r(this).data("serializeregexp")&&new RegExp(r(this).data("serializeregexp"))||/[^\-]*$/,serializeParamName:r(this).data("serializeparamname")||!1,dragHandle:r(this).data("draghandle")||null})}))})),u.tableDnD={currentTable:null,dragObject:null,mouseOffset:null,oldX:0,oldY:0,build:function(t){return this.each((function(){this.tableDnDConfig=r.extend({onDragStyle:null,onDropStyle:null,onDragClass:"tDnD_whileDrag",onDrop:null,onDragStart:null,onDragStop:null,scrollAmount:5,sensitivity:10,hierarchyLevel:0,indentArtifact:'<div class="indent">&nbsp;</div>',autoWidthAdjust:!0,autoCleanRelations:!0,jsonPretifySeparator:"\t",serializeRegexp:/[^\-]*$/,serializeParamName:!1,dragHandle:null},t||{}),r.tableDnD.makeDraggable(this),this.tableDnDConfig.hierarchyLevel&&r.tableDnD.makeIndented(this)})),this},makeIndented:function(t){var e,n,o=t.tableDnDConfig,i=t.rows,a=r(i).first().find("td:first")[0],s=0,l=0;if(r(t).hasClass("indtd"))return null;n=r(t).addClass("indtd").attr("style"),r(t).css({whiteSpace:"nowrap"});for(var u=0;u<i.length;u++)l<r(i[u]).find("td:first").text().length&&(l=r(i[u]).find("td:first").text().length,e=u);for(r(a).css({width:"auto"}),u=0;u<o.hierarchyLevel;u++)r(i[e]).find("td:first").prepend(o.indentArtifact);for(a&&r(a).css({width:a.offsetWidth}),n&&r(t).css(n),u=0;u<o.hierarchyLevel;u++)r(i[e]).find("td:first").children(":first").remove();return o.hierarchyLevel&&r(i).each((function(){(s=r(this).data("level")||0)<=o.hierarchyLevel&&r(this).data("level",s)||r(this).data("level",0);for(var t=0;t<r(this).data("level");t++)r(this).find("td:first").prepend(o.indentArtifact)})),this},makeDraggable:function(t){var e=t.tableDnDConfig;e.dragHandle&&r(e.dragHandle,t).each((function(){r(this).bind(a,(function(n){return r.tableDnD.initialiseDrag(r(this).parents("tr")[0],t,this,n,e),!1}))}))||r(t.rows).each((function(){r(this).hasClass("nodrag")?r(this).css("cursor",""):r(this).bind(a,(function(n){if("TD"===n.target.tagName)return r.tableDnD.initialiseDrag(this,t,this,n,e),!1})).css("cursor","move")}))},currentOrder:function(){var t=this.currentTable.rows;return r.map(t,(function(t){return(r(t).data("level")+t.id).replace(/\s/g,"")})).join("")},initialiseDrag:function(t,e,n,o,a){this.dragObject=t,this.currentTable=e,this.mouseOffset=this.getMouseOffset(n,o),this.originalOrder=this.currentOrder(),r(i).bind(s,this.mousemove).bind(l,this.mouseup),a.onDragStart&&a.onDragStart(e,n)},updateTables:function(){this.each((function(){this.tableDnDConfig&&r.tableDnD.makeDraggable(this)}))},mouseCoords:function(t){return t.originalEvent.changedTouches?{x:t.originalEvent.changedTouches[0].clientX,y:t.originalEvent.changedTouches[0].clientY}:t.pageX||t.pageY?{x:t.pageX,y:t.pageY}:{x:t.clientX+i.body.scrollLeft-i.body.clientLeft,y:t.clientY+i.body.scrollTop-i.body.clientTop}},getMouseOffset:function(t,e){var n,r;return e=e||o.event,r=this.getPosition(t),{x:(n=this.mouseCoords(e)).x-r.x,y:n.y-r.y}},getPosition:function(t){var e=0,n=0;for(0===t.offsetHeight&&(t=t.firstChild);t.offsetParent;)e+=t.offsetLeft,n+=t.offsetTop,t=t.offsetParent;return{x:e+=t.offsetLeft,y:n+=t.offsetTop}},autoScroll:function(t){var e=this.currentTable.tableDnDConfig,n=o.pageYOffset,r=o.innerHeight?o.innerHeight:i.documentElement.clientHeight?i.documentElement.clientHeight:i.body.clientHeight;i.all&&(void 0!==i.compatMode&&"BackCompat"!==i.compatMode?n=i.documentElement.scrollTop:void 0!==i.body&&(n=i.body.scrollTop)),t.y-n<e.scrollAmount&&o.scrollBy(0,-e.scrollAmount)||r-(t.y-n)<e.scrollAmount&&o.scrollBy(0,e.scrollAmount)},moveVerticle:function(t,e){0!==t.vertical&&e&&this.dragObject!==e&&this.dragObject.parentNode===e.parentNode&&(0>t.vertical&&this.dragObject.parentNode.insertBefore(this.dragObject,e.nextSibling)||0<t.vertical&&this.dragObject.parentNode.insertBefore(this.dragObject,e))},moveHorizontal:function(t,e){var n,o=this.currentTable.tableDnDConfig;if(!o.hierarchyLevel||0===t.horizontal||!e||this.dragObject!==e)return null;n=r(e).data("level"),0<t.horizontal&&n>0&&r(e).find("td:first").children(":first").remove()&&r(e).data("level",--n),0>t.horizontal&&n<o.hierarchyLevel&&r(e).prev().data("level")>=n&&r(e).children(":first").prepend(o.indentArtifact)&&r(e).data("level",++n)},mousemove:function(t){var e,n,o,i,a,s=r(r.tableDnD.dragObject),l=r.tableDnD.currentTable.tableDnDConfig;return t&&t.preventDefault(),!!r.tableDnD.dragObject&&("touchmove"===t.type&&event.preventDefault(),l.onDragClass&&s.addClass(l.onDragClass)||s.css(l.onDragStyle),i=(n=r.tableDnD.mouseCoords(t)).x-r.tableDnD.mouseOffset.x,a=n.y-r.tableDnD.mouseOffset.y,r.tableDnD.autoScroll(n),e=r.tableDnD.findDropTargetRow(s,a),o=r.tableDnD.findDragDirection(i,a),r.tableDnD.moveVerticle(o,e),r.tableDnD.moveHorizontal(o,e),!1)},findDragDirection:function(t,e){var n=this.currentTable.tableDnDConfig.sensitivity,r=this.oldX,o=this.oldY,i={horizontal:t>=r-n&&t<=r+n?0:t>r?-1:1,vertical:e>=o-n&&e<=o+n?0:e>o?-1:1};return 0!==i.horizontal&&(this.oldX=t),0!==i.vertical&&(this.oldY=e),i},findDropTargetRow:function(t,e){for(var n=0,o=this.currentTable.rows,i=this.currentTable.tableDnDConfig,a=0,s=null,l=0;l<o.length;l++)if(s=o[l],a=this.getPosition(s).y,n=parseInt(s.offsetHeight)/2,0===s.offsetHeight&&(a=this.getPosition(s.firstChild).y,n=parseInt(s.firstChild.offsetHeight)/2),e>a-n&&e<a+n)return t.is(s)||i.onAllowDrop&&!i.onAllowDrop(t,s)||r(s).hasClass("nodrop")?null:s;return null},processMouseup:function(){if(!this.currentTable||!this.dragObject)return null;var t=this.currentTable.tableDnDConfig,e=this.dragObject,n=0,o=0;r(i).unbind(s,this.mousemove).unbind(l,this.mouseup),t.hierarchyLevel&&t.autoCleanRelations&&r(this.currentTable.rows).first().find("td:first").children().each((function(){(o=r(this).parents("tr:first").data("level"))&&r(this).parents("tr:first").data("level",--o)&&r(this).remove()}))&&t.hierarchyLevel>1&&r(this.currentTable.rows).each((function(){if((o=r(this).data("level"))>1)for(n=r(this).prev().data("level");o>n+1;)r(this).find("td:first").children(":first").remove(),r(this).data("level",--o)})),t.onDragClass&&r(e).removeClass(t.onDragClass)||r(e).css(t.onDropStyle),this.dragObject=null,t.onDrop&&this.originalOrder!==this.currentOrder()&&r(e).hide().fadeIn("fast")&&t.onDrop(this.currentTable,e),t.onDragStop&&t.onDragStop(this.currentTable,e),this.currentTable=null},mouseup:function(t){return t&&t.preventDefault(),r.tableDnD.processMouseup(),!1},jsonize:function(t){var e=this.currentTable;return t?JSON.stringify(this.tableData(e),null,e.tableDnDConfig.jsonPretifySeparator):JSON.stringify(this.tableData(e))},serialize:function(){return r.param(this.tableData(this.currentTable))},serializeTable:function(t){for(var e="",n=t.tableDnDConfig.serializeParamName||t.id,r=t.rows,o=0;o<r.length;o++){e.length>0&&(e+="&");var i=r[o].id;i&&t.tableDnDConfig&&t.tableDnDConfig.serializeRegexp&&(e+=n+"[]="+(i=i.match(t.tableDnDConfig.serializeRegexp)[0]))}return e},serializeTables:function(){var t=[];return r("table").each((function(){this.id&&t.push(r.param(r.tableDnD.tableData(this)))})),t.join("&")},tableData:function(t){var e,n,o,i,a=t.tableDnDConfig,s=[],l=0,u=0,d=null,c={};if(t||(t=this.currentTable),!t||!t.rows||!t.rows.length)return{error:{code:500,message:"Not a valid table."}};if(!t.id&&!a.serializeParamName)return{error:{code:500,message:"No serializable unique id provided."}};i=a.autoCleanRelations&&t.rows||r.makeArray(t.rows),e=function(t){return t&&a&&a.serializeRegexp?t.match(a.serializeRegexp)[0]:t},c[o=n=a.serializeParamName||t.id]=[],!a.autoCleanRelations&&r(i[0]).data("level")&&i.unshift({id:"undefined"});for(var f=0;f<i.length;f++)if(a.hierarchyLevel){if(0===(u=r(i[f]).data("level")||0))o=n,s=[];else if(u>l)s.push([o,l]),o=e(i[f-1].id);else if(u<l)for(var h=0;h<s.length;h++)s[h][1]===u&&(o=s[h][0]),s[h][1]>=l&&(s[h][1]=0);l=u,r.isArray(c[o])||(c[o]=[]),(d=e(i[f].id))&&c[o].push(d)}else(d=e(i[f].id))&&c[o].push(d);return c}},u.fn.extend({tableDnD:r.tableDnD.build,tableDnDUpdate:r.tableDnD.updateTables,tableDnDSerialize:r.proxy(r.tableDnD.serialize,r.tableDnD),tableDnDSerializeAll:r.tableDnD.serializeTables,tableDnDData:r.proxy(r.tableDnD.tableData,r.tableDnD)})},73609:t=>{"use strict";t.exports=window.jQuery}},e={};function n(r){var o=e[r];if(void 0!==o)return o.exports;var i=e[r]={exports:{}};return t[r](i,i.exports,n),i.exports}(()=>{"use strict";var t=c(n(53277)),e=c(n(58630)),r=c(n(96803)),o=c(n(37758)),i=c(n(91781)),a=c(n(17868)),s=c(n(5595)),l=c(n(2573)),u=c(n(91137)),d=c(n(92448));function c(t){return t&&t.__esModule?t:{default:t}}(0,window.$)((function(){var n=new t.default("attribute");n.addExtension(new l.default),n.addExtension(new o.default),n.addExtension(new e.default),n.addExtension(new r.default),n.addExtension(new i.default),n.addExtension(new a.default),n.addExtension(new s.default),n.addExtension(new u.default),n.addExtension(new d.default)}))})(),window.attribute={}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9qcy9hcHAvdXRpbHMvcmVzZXRfc2VhcmNoLmpzIiwid2VicGFjazovL1tuYW1lXS8uL2pzL2FwcC91dGlscy90YWJsZS1zb3J0aW5nLmpzIiwid2VicGFjazovL1tuYW1lXS8uL2pzL2NvbXBvbmVudHMvZ3JpZC9leHRlbnNpb24vYWN0aW9uL3Jvdy9zdWJtaXQtcm93LWFjdGlvbi1leHRlbnNpb24uanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vanMvY29tcG9uZW50cy9ncmlkL2V4dGVuc2lvbi9idWxrLWFjdGlvbi1jaGVja2JveC1leHRlbnNpb24uanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vanMvY29tcG9uZW50cy9ncmlkL2V4dGVuc2lvbi9leHBvcnQtdG8tc3FsLW1hbmFnZXItZXh0ZW5zaW9uLmpzIiwid2VicGFjazovL1tuYW1lXS8uL2pzL2NvbXBvbmVudHMvZ3JpZC9leHRlbnNpb24vZmlsdGVycy1yZXNldC1leHRlbnNpb24uanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vanMvY29tcG9uZW50cy9ncmlkL2V4dGVuc2lvbi9maWx0ZXJzLXN1Ym1pdC1idXR0b24tZW5hYmxlci1leHRlbnNpb24uanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vanMvY29tcG9uZW50cy9ncmlkL2V4dGVuc2lvbi9wb3NpdGlvbi1leHRlbnNpb24uanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vanMvY29tcG9uZW50cy9ncmlkL2V4dGVuc2lvbi9yZWxvYWQtbGlzdC1leHRlbnNpb24uanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vanMvY29tcG9uZW50cy9ncmlkL2V4dGVuc2lvbi9zb3J0aW5nLWV4dGVuc2lvbi5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9qcy9jb21wb25lbnRzL2dyaWQvZXh0ZW5zaW9uL3N1Ym1pdC1idWxrLWFjdGlvbi1leHRlbnNpb24uanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vanMvY29tcG9uZW50cy9ncmlkL2dyaWQuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vanMvY29tcG9uZW50cy9tb2RhbC5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9jb3JlLWpzL2FycmF5L2Zyb20uanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9nZXQtaXRlcmF0b3IuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvY29yZS1qcy9pcy1pdGVyYWJsZS5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9jb3JlLWpzL29iamVjdC9kZWZpbmUtcHJvcGVydHkuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2JhYmVsLXJ1bnRpbWUvaGVscGVycy9jbGFzc0NhbGxDaGVjay5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9oZWxwZXJzL2NyZWF0ZUNsYXNzLmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9iYWJlbC1ydW50aW1lL2hlbHBlcnMvc2xpY2VkVG9BcnJheS5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvYmFiZWwtcnVudGltZS9oZWxwZXJzL3RvQ29uc3VtYWJsZUFycmF5LmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvZm4vYXJyYXkvZnJvbS5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L2ZuL2dldC1pdGVyYXRvci5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L2ZuL2lzLWl0ZXJhYmxlLmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvZm4vb2JqZWN0L2RlZmluZS1wcm9wZXJ0eS5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2EtZnVuY3Rpb24uanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19hZGQtdG8tdW5zY29wYWJsZXMuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19hbi1vYmplY3QuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19hcnJheS1pbmNsdWRlcy5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2NsYXNzb2YuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19jb2YuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19jb3JlLmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fY3JlYXRlLXByb3BlcnR5LmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fY3R4LmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fZGVmaW5lZC5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2Rlc2NyaXB0b3JzLmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fZG9tLWNyZWF0ZS5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2VudW0tYnVnLWtleXMuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19leHBvcnQuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19mYWlscy5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2dsb2JhbC5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2hhcy5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2hpZGUuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19odG1sLmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faWU4LWRvbS1kZWZpbmUuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pb2JqZWN0LmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXMtYXJyYXktaXRlci5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2lzLW9iamVjdC5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2l0ZXItY2FsbC5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2l0ZXItY3JlYXRlLmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9faXRlci1kZWZpbmUuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19pdGVyLWRldGVjdC5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2l0ZXItc3RlcC5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2l0ZXJhdG9ycy5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX2xpYnJhcnkuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3QtY3JlYXRlLmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWRwLmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fb2JqZWN0LWRwcy5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1ncG8uanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19vYmplY3Qta2V5cy1pbnRlcm5hbC5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX29iamVjdC1rZXlzLmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fcHJvcGVydHktZGVzYy5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3JlZGVmaW5lLmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fc2V0LXRvLXN0cmluZy10YWcuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL19zaGFyZWQta2V5LmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fc2hhcmVkLmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fc3RyaW5nLWF0LmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fdG8tYWJzb2x1dGUtaW5kZXguanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL190by1pbnRlZ2VyLmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9fdG8taW9iamVjdC5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3RvLWxlbmd0aC5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3RvLW9iamVjdC5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3RvLXByaW1pdGl2ZS5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3VpZC5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvX3drcy5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kLmpzIiwid2VicGFjazovL1tuYW1lXS8uL25vZGVfbW9kdWxlcy9jb3JlLWpzL2xpYnJhcnkvbW9kdWxlcy9jb3JlLmdldC1pdGVyYXRvci5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvY29yZS5pcy1pdGVyYWJsZS5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2LmFycmF5LmZyb20uanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNi5hcnJheS5pdGVyYXRvci5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9ub2RlX21vZHVsZXMvY29yZS1qcy9saWJyYXJ5L21vZHVsZXMvZXM2Lm9iamVjdC5kZWZpbmUtcHJvcGVydHkuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL2VzNi5zdHJpbmcuaXRlcmF0b3IuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL2NvcmUtanMvbGlicmFyeS9tb2R1bGVzL3dlYi5kb20uaXRlcmFibGUuanMiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vbm9kZV9tb2R1bGVzL3RhYmxlZG5kL2Rpc3QvanF1ZXJ5LnRhYmxlZG5kLm1pbi5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vZXh0ZXJuYWwgXCJqUXVlcnlcIiIsIndlYnBhY2s6Ly9bbmFtZV0vd2VicGFjay9ib290c3RyYXAiLCJ3ZWJwYWNrOi8vW25hbWVdLy4vanMvcGFnZXMvYXR0cmlidXRlL2luZGV4LmpzIl0sIm5hbWVzIjpbIiQiLCJ3aW5kb3ciLCJ1cmwiLCJyZWRpcmVjdFVybCIsInBvc3QiLCJ0aGVuIiwibG9jYXRpb24iLCJhc3NpZ24iLCJUYWJsZVNvcnRpbmciLCJ0YWJsZSIsInRoaXMiLCJzZWxlY3RvciIsImNvbHVtbnMiLCJmaW5kIiwib24iLCJlIiwiJGNvbHVtbiIsImRlbGVnYXRlVGFyZ2V0Iiwic29ydEJ5Q29sdW1uIiwiZ2V0VG9nZ2xlZFNvcnREaXJlY3Rpb24iLCJjb2x1bW5OYW1lIiwiZGlyZWN0aW9uIiwiaXMiLCJFcnJvciIsImNvbHVtbiIsImdldFVybCIsImRhdGEiLCJjb2xOYW1lIiwicHJlZml4IiwiVVJMIiwiaHJlZiIsInBhcmFtcyIsInNlYXJjaFBhcmFtcyIsInNldCIsInRvU3RyaW5nIiwiU3VibWl0Um93QWN0aW9uRXh0ZW5zaW9uIiwiZ3JpZCIsImdldENvbnRhaW5lciIsImV2ZW50IiwicHJldmVudERlZmF1bHQiLCIkYnV0dG9uIiwiY3VycmVudFRhcmdldCIsImNvbmZpcm1NZXNzYWdlIiwiY29uZmlybVRpdGxlIiwibWV0aG9kIiwic2hvd0NvbmZpcm1Nb2RhbCIsImxlbmd0aCIsImNvbmZpcm0iLCJwb3N0Rm9ybSIsImlzR2V0T3JQb3N0TWV0aG9kIiwiaW5jbHVkZXMiLCIkZm9ybSIsImFjdGlvbiIsImFwcGVuZFRvIiwiYXBwZW5kIiwidHlwZSIsIm5hbWUiLCJ2YWx1ZSIsInN1Ym1pdCIsIiRzdWJtaXRCdG4iLCJjb25maXJtQnV0dG9uTGFiZWwiLCJjbG9zZUJ1dHRvbkxhYmVsIiwiY29uZmlybUJ1dHRvbkNsYXNzIiwiQ29uZmlybU1vZGFsIiwiaWQiLCJnZXRJZCIsInNob3ciLCJCdWxrQWN0aW9uQ2hlY2tib3hFeHRlbnNpb24iLCJoYW5kbGVCdWxrQWN0aW9uQ2hlY2tib3hTZWxlY3QiLCJoYW5kbGVCdWxrQWN0aW9uU2VsZWN0QWxsQ2hlY2tib3giLCJpc0NoZWNrZWQiLCJlbmFibGVCdWxrQWN0aW9uc0J0biIsImRpc2FibGVCdWxrQWN0aW9uc0J0biIsInByb3AiLCJFeHBvcnRUb1NxbE1hbmFnZXJFeHRlbnNpb24iLCJnZXRIZWFkZXJDb250YWluZXIiLCJvblNob3dTcWxRdWVyeUNsaWNrIiwib25FeHBvcnRTcWxNYW5hZ2VyQ2xpY2siLCIkc3FsTWFuYWdlckZvcm0iLCJmaWxsRXhwb3J0Rm9ybSIsIiRtb2RhbCIsIm1vZGFsIiwicXVlcnkiLCJ2YWwiLCJnZXROYW1lRnJvbUJyZWFkY3J1bWIiLCIkYnJlYWRjcnVtYnMiLCJlYWNoIiwiaSIsIml0ZW0iLCIkYnJlYWRjcnVtYiIsImJyZWFkY3J1bWJUaXRsZSIsInRleHQiLCJjb25jYXQiLCJGaWx0ZXJzUmVzZXRFeHRlbnNpb24iLCJGaWx0ZXJzU3VibWl0QnV0dG9uRW5hYmxlckV4dGVuc2lvbiIsIiRmaWx0ZXJzUm93IiwiUG9zaXRpb25FeHRlbnNpb24iLCJleHRlbmQiLCJhZGRJZHNUb0dyaWRUYWJsZVJvd3MiLCJ0YWJsZURuRCIsIm9uRHJhZ0NsYXNzIiwiZHJhZ0hhbmRsZSIsIm9uRHJvcCIsInJvdyIsImhhbmRsZVBvc2l0aW9uQ2hhbmdlIiwiaG92ZXIiLCJjbG9zZXN0IiwiYWRkQ2xhc3MiLCJyZW1vdmVDbGFzcyIsIiRyb3dQb3NpdGlvbkNvbnRhaW5lciIsInVwZGF0ZVVybCIsInBvc2l0aW9ucyIsImdldFJvd3NQb3NpdGlvbnMiLCJ1cGRhdGVQb3NpdGlvbiIsInJvd3NEYXRhIiwiSlNPTiIsInBhcnNlIiwianNvbml6ZSIsImNvbXBsZXRlUm93c0RhdGEiLCJ0ckRhdGEiLCJwdXNoIiwicm93TWFya2VyIiwib2Zmc2V0IiwiY29tcHV0ZU1hcHBpbmdCZXR3ZWVuT2xkQW5kTmV3UG9zaXRpb25zIiwiY291bnRlciIsImluZGV4IiwicG9zaXRpb25XcmFwcGVyIiwiJHBvc2l0aW9uV3JhcHBlciIsImF0dHIiLCJwb3NpdGlvbnNOYiIsInBvc2l0aW9uIiwicm93SWQiLCJvbGRQb3NpdGlvbiIsIm5ld1Bvc2l0aW9uIiwicmVnZXgiLCJtYXBwaW5nIiwiQXJyYXkiLCJmaWxsIiwibWFwIiwiT2JqZWN0IiwiZXhlYyIsInBhcnNlSW50IiwiUmVsb2FkTGlzdEV4dGVuc2lvbiIsInJlbG9hZCIsIlNvcnRpbmdFeHRlbnNpb24iLCIkc29ydGFibGVUYWJsZSIsImF0dGFjaCIsIlN1Ym1pdEJ1bGtBY3Rpb25FeHRlbnNpb24iLCJ1bmRlZmluZWQiLCJHcmlkIiwiJGNvbnRhaW5lciIsImV4dGVuc2lvbiIsImNvbmZpcm1DYWxsYmFjayIsImNhbmNlbENhbGxiYWNrIiwiY2xvc2FibGUiLCJjdXN0b21CdXR0b25zIiwiY29udGFpbmVyIiwiZG9jdW1lbnQiLCJjcmVhdGVFbGVtZW50IiwiY2xhc3NMaXN0IiwiYWRkIiwiZGlhbG9nIiwiY29udGVudCIsImhlYWRlciIsInRpdGxlIiwiaW5uZXJIVE1MIiwiY2xvc2VJY29uIiwic2V0QXR0cmlidXRlIiwiZGF0YXNldCIsImRpc21pc3MiLCJib2R5IiwibWVzc2FnZSIsImZvb3RlciIsImNsb3NlQnV0dG9uIiwiY29uZmlybUJ1dHRvbiIsImFwcGVuZENoaWxkIiwiTW9kYWwiLCJhZGRFdmVudExpc3RlbmVyIiwiYmFja2Ryb3AiLCJrZXlib2FyZCIsInF1ZXJ5U2VsZWN0b3IiLCJyZW1vdmUiLCJtb2R1bGUiLCJleHBvcnRzIiwiX19lc01vZHVsZSIsImRlZmF1bHQiLCJpbnN0YW5jZSIsIkNvbnN0cnVjdG9yIiwiVHlwZUVycm9yIiwib2JqIiwiX2RlZmluZVByb3BlcnR5MiIsImRlZmluZVByb3BlcnRpZXMiLCJ0YXJnZXQiLCJwcm9wcyIsImRlc2NyaXB0b3IiLCJlbnVtZXJhYmxlIiwiY29uZmlndXJhYmxlIiwid3JpdGFibGUiLCJrZXkiLCJwcm90b1Byb3BzIiwic3RhdGljUHJvcHMiLCJwcm90b3R5cGUiLCJfaXNJdGVyYWJsZTMiLCJfaW50ZXJvcFJlcXVpcmVEZWZhdWx0IiwiX2dldEl0ZXJhdG9yMyIsImFyciIsImlzQXJyYXkiLCJfYXJyIiwiX24iLCJfZCIsIl9lIiwiX3MiLCJfaSIsIm5leHQiLCJkb25lIiwiZXJyIiwic2xpY2VJdGVyYXRvciIsIl9mcm9tMiIsImFycjIiLCIkT2JqZWN0IiwiaXQiLCJkZXNjIiwiZGVmaW5lUHJvcGVydHkiLCJpc09iamVjdCIsInRvSU9iamVjdCIsInRvTGVuZ3RoIiwidG9BYnNvbHV0ZUluZGV4IiwiSVNfSU5DTFVERVMiLCIkdGhpcyIsImVsIiwiZnJvbUluZGV4IiwiTyIsImNvZiIsIlRBRyIsIkFSRyIsImFyZ3VtZW50cyIsIlQiLCJCIiwidHJ5R2V0IiwiY2FsbGVlIiwiY2FsbCIsInNsaWNlIiwiY29yZSIsInZlcnNpb24iLCJfX2UiLCIkZGVmaW5lUHJvcGVydHkiLCJjcmVhdGVEZXNjIiwib2JqZWN0IiwiZiIsImFGdW5jdGlvbiIsImZuIiwidGhhdCIsImEiLCJiIiwiYyIsImFwcGx5IiwiZ2V0Iiwic3BsaXQiLCJnbG9iYWwiLCJjdHgiLCJoaWRlIiwiaGFzIiwiJGV4cG9ydCIsInNvdXJjZSIsIm93biIsIm91dCIsIklTX0ZPUkNFRCIsIkYiLCJJU19HTE9CQUwiLCJHIiwiSVNfU1RBVElDIiwiUyIsIklTX1BST1RPIiwiUCIsIklTX0JJTkQiLCJJU19XUkFQIiwiVyIsImV4cFByb3RvIiwiQyIsIkZ1bmN0aW9uIiwidmlydHVhbCIsIlIiLCJVIiwiTWF0aCIsInNlbGYiLCJfX2ciLCJoYXNPd25Qcm9wZXJ0eSIsImRQIiwiZG9jdW1lbnRFbGVtZW50IiwicHJvcGVydHlJc0VudW1lcmFibGUiLCJJdGVyYXRvcnMiLCJJVEVSQVRPUiIsIkFycmF5UHJvdG8iLCJhbk9iamVjdCIsIml0ZXJhdG9yIiwiZW50cmllcyIsInJldCIsImNyZWF0ZSIsInNldFRvU3RyaW5nVGFnIiwiSXRlcmF0b3JQcm90b3R5cGUiLCJOQU1FIiwiTElCUkFSWSIsInJlZGVmaW5lIiwiJGl0ZXJDcmVhdGUiLCJnZXRQcm90b3R5cGVPZiIsIkJVR0dZIiwia2V5cyIsIktFWVMiLCJWQUxVRVMiLCJyZXR1cm5UaGlzIiwiQmFzZSIsIkRFRkFVTFQiLCJJU19TRVQiLCJGT1JDRUQiLCJtZXRob2RzIiwiZ2V0TWV0aG9kIiwia2luZCIsInByb3RvIiwiREVGX1ZBTFVFUyIsIlZBTFVFU19CVUciLCIkbmF0aXZlIiwiJGRlZmF1bHQiLCIkZW50cmllcyIsIiRhbnlOYXRpdmUiLCJ2YWx1ZXMiLCJTQUZFX0NMT1NJTkciLCJyaXRlciIsImZyb20iLCJza2lwQ2xvc2luZyIsInNhZmUiLCJpdGVyIiwiZFBzIiwiZW51bUJ1Z0tleXMiLCJJRV9QUk9UTyIsIkVtcHR5IiwiY3JlYXRlRGljdCIsImlmcmFtZURvY3VtZW50IiwiaWZyYW1lIiwic3R5bGUiLCJkaXNwbGF5Iiwic3JjIiwiY29udGVudFdpbmRvdyIsIm9wZW4iLCJ3cml0ZSIsImx0IiwiY2xvc2UiLCJQcm9wZXJ0aWVzIiwicmVzdWx0IiwiSUU4X0RPTV9ERUZJTkUiLCJ0b1ByaW1pdGl2ZSIsIkF0dHJpYnV0ZXMiLCJnZXRLZXlzIiwidG9PYmplY3QiLCJPYmplY3RQcm90byIsImNvbnN0cnVjdG9yIiwiYXJyYXlJbmRleE9mIiwibmFtZXMiLCIka2V5cyIsImJpdG1hcCIsImRlZiIsInRhZyIsInN0YXQiLCJzaGFyZWQiLCJ1aWQiLCJTSEFSRUQiLCJzdG9yZSIsIm1vZGUiLCJjb3B5cmlnaHQiLCJ0b0ludGVnZXIiLCJkZWZpbmVkIiwiVE9fU1RSSU5HIiwicG9zIiwicyIsIlN0cmluZyIsImwiLCJjaGFyQ29kZUF0IiwiY2hhckF0IiwibWF4IiwibWluIiwiY2VpbCIsImZsb29yIiwiaXNOYU4iLCJJT2JqZWN0IiwidmFsdWVPZiIsInB4IiwicmFuZG9tIiwiU3ltYm9sIiwiVVNFX1NZTUJPTCIsImNsYXNzb2YiLCJpdGVyRm4iLCJpc0FycmF5SXRlciIsImNyZWF0ZVByb3BlcnR5IiwiZ2V0SXRlckZuIiwiYXJyYXlMaWtlIiwic3RlcCIsImFMZW4iLCJtYXBmbiIsImFkZFRvVW5zY29wYWJsZXMiLCJpdGVyYXRlZCIsIl90IiwiX2siLCJBcmd1bWVudHMiLCIkYXQiLCJwb2ludCIsIlRPX1NUUklOR19UQUciLCJET01JdGVyYWJsZXMiLCJDb2xsZWN0aW9uIiwiZyIsImpRdWVyeSIsInJlYWR5IiwibWF0Y2giLCJzaGlmdCIsInRyaW0iLCJvbkRyYWdTdHlsZSIsIm9uRHJvcFN0eWxlIiwib25EcmFnU3RhcnQiLCJvbkRyYWdTdG9wIiwic2Nyb2xsQW1vdW50Iiwic2Vuc2l0aXZpdHkiLCJoaWVyYXJjaHlMZXZlbCIsImluZGVudEFydGlmYWN0IiwiYXV0b1dpZHRoQWRqdXN0IiwiYXV0b0NsZWFuUmVsYXRpb25zIiwianNvblByZXRpZnlTZXBhcmF0b3IiLCJzZXJpYWxpemVSZWdleHAiLCJSZWdFeHAiLCJzZXJpYWxpemVQYXJhbU5hbWUiLCJjdXJyZW50VGFibGUiLCJkcmFnT2JqZWN0IiwibW91c2VPZmZzZXQiLCJvbGRYIiwib2xkWSIsImJ1aWxkIiwidGFibGVEbkRDb25maWciLCJtYWtlRHJhZ2dhYmxlIiwibWFrZUluZGVudGVkIiwiZCIsInJvd3MiLCJmaXJzdCIsImgiLCJoYXNDbGFzcyIsImNzcyIsIndoaXRlU3BhY2UiLCJqIiwid2lkdGgiLCJwcmVwZW5kIiwib2Zmc2V0V2lkdGgiLCJjaGlsZHJlbiIsImJpbmQiLCJpbml0aWFsaXNlRHJhZyIsInBhcmVudHMiLCJ0YWdOYW1lIiwiY3VycmVudE9yZGVyIiwicmVwbGFjZSIsImpvaW4iLCJnZXRNb3VzZU9mZnNldCIsIm9yaWdpbmFsT3JkZXIiLCJtb3VzZW1vdmUiLCJtb3VzZXVwIiwidXBkYXRlVGFibGVzIiwibW91c2VDb29yZHMiLCJvcmlnaW5hbEV2ZW50IiwiY2hhbmdlZFRvdWNoZXMiLCJ4IiwiY2xpZW50WCIsInkiLCJjbGllbnRZIiwicGFnZVgiLCJwYWdlWSIsInNjcm9sbExlZnQiLCJjbGllbnRMZWZ0Iiwic2Nyb2xsVG9wIiwiY2xpZW50VG9wIiwiZ2V0UG9zaXRpb24iLCJvZmZzZXRIZWlnaHQiLCJmaXJzdENoaWxkIiwib2Zmc2V0UGFyZW50Iiwib2Zmc2V0TGVmdCIsIm9mZnNldFRvcCIsImF1dG9TY3JvbGwiLCJwYWdlWU9mZnNldCIsImlubmVySGVpZ2h0IiwiY2xpZW50SGVpZ2h0IiwiYWxsIiwiY29tcGF0TW9kZSIsInNjcm9sbEJ5IiwibW92ZVZlcnRpY2xlIiwidmVydGljYWwiLCJwYXJlbnROb2RlIiwiaW5zZXJ0QmVmb3JlIiwibmV4dFNpYmxpbmciLCJtb3ZlSG9yaXpvbnRhbCIsImhvcml6b250YWwiLCJwcmV2IiwiZmluZERyb3BUYXJnZXRSb3ciLCJmaW5kRHJhZ0RpcmVjdGlvbiIsIm9uQWxsb3dEcm9wIiwicHJvY2Vzc01vdXNldXAiLCJ1bmJpbmQiLCJmYWRlSW4iLCJzdHJpbmdpZnkiLCJ0YWJsZURhdGEiLCJzZXJpYWxpemUiLCJwYXJhbSIsInNlcmlhbGl6ZVRhYmxlIiwic2VyaWFsaXplVGFibGVzIiwiayIsImVycm9yIiwiY29kZSIsIm1ha2VBcnJheSIsInVuc2hpZnQiLCJtIiwibiIsInRhYmxlRG5EVXBkYXRlIiwidGFibGVEbkRTZXJpYWxpemUiLCJwcm94eSIsInRhYmxlRG5EU2VyaWFsaXplQWxsIiwidGFibGVEbkREYXRhIiwiX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fIiwiX193ZWJwYWNrX3JlcXVpcmVfXyIsIm1vZHVsZUlkIiwiY2FjaGVkTW9kdWxlIiwiX193ZWJwYWNrX21vZHVsZXNfXyIsImFkZEV4dGVuc2lvbiIsIlJlbG9hZExpc3RBY3Rpb25FeHRlbnNpb24iLCJTdWJtaXRCdWxrRXh0ZW5zaW9uIl0sIm1hcHBpbmdzIjoiOzRGQTZCT0EsRUFBS0MsT0FBTEQsRSxVQUVNLFNBQXFCRSxFQUFLQyxHQUNyQ0gsRUFBRUksS0FBS0YsR0FBS0csTUFBSyxrQkFBTUosT0FBT0ssU0FBU0MsT0FBT0osUSxxS0NQekNILEVBQUtDLE9BQUxELEVBTURRLEUsV0FJSixXQUFZQyxJQUFPLHFCQUNqQkMsS0FBS0MsU0FBVyxzQkFDaEJELEtBQUtFLFFBQVVaLEVBQUVTLEdBQU9JLEtBQUtILEtBQUtDLFUsc0RBTTNCLFdBQ1BELEtBQUtFLFFBQVFFLEdBQUcsU0FBUyxTQUFDQyxHQUN4QixJQUFNQyxFQUFVaEIsRUFBRWUsRUFBRUUs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LFNBQVNzWixnQkFBZ0JZLGFBQWF6USxFQUFFdVEsTUFBTXZRLEVBQUV6SixTQUFTa1osVUFBVXpQLEVBQUV6SixhLHVCQ0QvcFNtRixFQUFPQyxRQUFVdEwsT0FBZSxTQ0M1QnFnQixFQUEyQixHQUcvQixTQUFTQyxFQUFvQkMsR0FFNUIsSUFBSUMsRUFBZUgsRUFBeUJFLEdBQzVDLFFBQXFCcFgsSUFBakJxWCxFQUNILE9BQU9BLEVBQWFsVixRQUdyQixJQUFJRCxFQUFTZ1YsRUFBeUJFLEdBQVksQ0FHakRqVixRQUFTLElBT1YsT0FIQW1WLEVBQW9CRixHQUFVbFYsRUFBUUEsRUFBT0MsUUFBU2dWLEdBRy9DalYsRUFBT0MsUSxtQkNJZixJLElBQUEsVSxJQUNBLFUsSUFDQSxVLElBQ0EsVSxJQUNBLFUsSUFDQSxVLElBQ0EsUyxJQUNBLFMsSUFDQSxVLElBRUEsVSxvREFJQXZMLEVBRllDLE9BQUxELElBRUwsV0FDQSxJQUFNb0MsRUFBTyxJQUFJaUgsVUFBSyxhQUV0QmpILEVBQUt1ZSxhQUFhLElBQUlqYyxXQUN0QnRDLEVBQUt1ZSxhQUFhLElBQUlDLFdBQ3RCeGUsRUFBS3VlLGFBQWEsSUFBSTNYLFdBQ3RCNUcsRUFBS3VlLGFBQWEsSUFBSTlhLFdBQ3RCekQsRUFBS3VlLGFBQWEsSUFBSXhlLFdBQ3RCQyxFQUFLdWUsYUFBYSxJQUFJRSxXQUN0QnplLEVBQUt1ZSxhQUFhLElBQUl4YyxXQUN0Qi9CLEVBQUt1ZSxhQUFhLElBQUk3YSxXQUN0QjFELEVBQUt1ZSxhQUFhLElBQUkzYSxlIiwiZmlsZSI6ImF0dHJpYnV0ZS5idW5kbGUuanMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENvcHlyaWdodCBzaW5jZSAyMDA3IFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9yc1xuICogUHJlc3RhU2hvcCBpcyBhbiBJbnRlcm5hdGlvbmFsIFJlZ2lzdGVyZWQgVHJhZGVtYXJrICYgUHJvcGVydHkgb2YgUHJlc3RhU2hvcCBTQVxuICpcbiAqIE5PVElDRSBPRiBMSUNFTlNFXG4gKlxuICogVGhpcyBzb3VyY2UgZmlsZSBpcyBzdWJqZWN0IHRvIHRoZSBPcGVuIFNvZnR3YXJlIExpY2Vuc2UgKE9TTCAzLjApXG4gKiB0aGF0IGlzIGJ1bmRsZWQgd2l0aCB0aGlzIHBhY2thZ2UgaW4gdGhlIGZpbGUgTElDRU5TRS5tZC5cbiAqIEl0IGlzIGFsc28gYXZhaWxhYmxlIHRocm91Z2ggdGhlIHdvcmxkLXdpZGUtd2ViIGF0IHRoaXMgVVJMOlxuICogaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9PU0wtMy4wXG4gKiBJZiB5b3UgZGlkIG5vdCByZWNlaXZlIGEgY29weSBvZiB0aGUgbGljZW5zZSBhbmQgYXJlIHVuYWJsZSB0b1xuICogb2J0YWluIGl0IHRocm91Z2ggdGhlIHdvcmxkLXdpZGUtd2ViLCBwbGVhc2Ugc2VuZCBhbiBlbWFpbFxuICogdG8gbGljZW5zZUBwcmVzdGFzaG9wLmNvbSBzbyB3ZSBjYW4gc2VuZCB5b3UgYSBjb3B5IGltbWVkaWF0ZWx5LlxuICpcbiAqIERJU0NMQUlNRVJcbiAqXG4gKiBEbyBub3QgZWRpdCBvciBhZGQgdG8gdGhpcyBmaWxlIGlmIHlvdSB3aXNoIHRvIHVwZ3JhZGUgUHJlc3RhU2hvcCB0byBuZXdlclxuICogdmVyc2lvbnMgaW4gdGhlIGZ1dHVyZS4gSWYgeW91IHdpc2ggdG8gY3VzdG9taXplIFByZXN0YVNob3AgZm9yIHlvdXJcbiAqIG5lZWRzIHBsZWFzZSByZWZlciB0byBodHRwczovL2RldmRvY3MucHJlc3Rhc2hvcC5jb20vIGZvciBtb3JlIGluZm9ybWF0aW9uLlxuICpcbiAqIEBhdXRob3IgICAgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzIDxjb250YWN0QHByZXN0YXNob3AuY29tPlxuICogQGNvcHlyaWdodCBTaW5jZSAyMDA3IFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9yc1xuICogQGxpY2Vuc2UgICBodHRwczovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL09TTC0zLjAgT3BlbiBTb2Z0d2FyZSBMaWNlbnNlIChPU0wgMy4wKVxuICovXG5cbi8qKlxuICogU2VuZCBhIFBvc3QgUmVxdWVzdCB0byByZXNldCBzZWFyY2ggQWN0aW9uLlxuICovXG5cbmNvbnN0IHskfSA9IHdpbmRvdztcblxuY29uc3QgaW5pdCA9IGZ1bmN0aW9uIHJlc2V0U2VhcmNoKHVybCwgcmVkaXJlY3RVcmwpIHtcbiAgJC5wb3N0KHVybCkudGhlbigoKSA9PiB3aW5kb3cubG9jYXRpb24uYXNzaWduKHJlZGlyZWN0VXJsKSk7XG59O1xuXG5leHBvcnQgZGVmYXVsdCBpbml0O1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgc2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIFByZXN0YVNob3AgaXMgYW4gSW50ZXJuYXRpb25hbCBSZWdpc3RlcmVkIFRyYWRlbWFyayAmIFByb3BlcnR5IG9mIFByZXN0YVNob3AgU0FcbiAqXG4gKiBOT1RJQ0UgT0YgTElDRU5TRVxuICpcbiAqIFRoaXMgc291cmNlIGZpbGUgaXMgc3ViamVjdCB0byB0aGUgT3BlbiBTb2Z0d2FyZSBMaWNlbnNlIChPU0wgMy4wKVxuICogdGhhdCBpcyBidW5kbGVkIHdpdGggdGhpcyBwYWNrYWdlIGluIHRoZSBmaWxlIExJQ0VOU0UubWQuXG4gKiBJdCBpcyBhbHNvIGF2YWlsYWJsZSB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiBhdCB0aGlzIFVSTDpcbiAqIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMFxuICogSWYgeW91IGRpZCBub3QgcmVjZWl2ZSBhIGNvcHkgb2YgdGhlIGxpY2Vuc2UgYW5kIGFyZSB1bmFibGUgdG9cbiAqIG9idGFpbiBpdCB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiwgcGxlYXNlIHNlbmQgYW4gZW1haWxcbiAqIHRvIGxpY2Vuc2VAcHJlc3Rhc2hvcC5jb20gc28gd2UgY2FuIHNlbmQgeW91IGEgY29weSBpbW1lZGlhdGVseS5cbiAqXG4gKiBESVNDTEFJTUVSXG4gKlxuICogRG8gbm90IGVkaXQgb3IgYWRkIHRvIHRoaXMgZmlsZSBpZiB5b3Ugd2lzaCB0byB1cGdyYWRlIFByZXN0YVNob3AgdG8gbmV3ZXJcbiAqIHZlcnNpb25zIGluIHRoZSBmdXR1cmUuIElmIHlvdSB3aXNoIHRvIGN1c3RvbWl6ZSBQcmVzdGFTaG9wIGZvciB5b3VyXG4gKiBuZWVkcyBwbGVhc2UgcmVmZXIgdG8gaHR0cHM6Ly9kZXZkb2NzLnByZXN0YXNob3AuY29tLyBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAqXG4gKiBAYXV0aG9yICAgIFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9ycyA8Y29udGFjdEBwcmVzdGFzaG9wLmNvbT5cbiAqIEBjb3B5cmlnaHQgU2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIEBsaWNlbnNlICAgaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9PU0wtMy4wIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqL1xuXG5jb25zdCB7JH0gPSB3aW5kb3c7XG5cbi8qKlxuICogTWFrZXMgYSB0YWJsZSBzb3J0YWJsZSBieSBjb2x1bW5zLlxuICogVGhpcyBmb3JjZXMgYSBwYWdlIHJlbG9hZCB3aXRoIG1vcmUgcXVlcnkgcGFyYW1ldGVycy5cbiAqL1xuY2xhc3MgVGFibGVTb3J0aW5nIHtcbiAgLyoqXG4gICAqIEBwYXJhbSB7alF1ZXJ5fSB0YWJsZVxuICAgKi9cbiAgY29uc3RydWN0b3IodGFibGUpIHtcbiAgICB0aGlzLnNlbGVjdG9yID0gJy5wcy1zb3J0YWJsZS1jb2x1bW4nO1xuICAgIHRoaXMuY29sdW1ucyA9ICQodGFibGUpLmZpbmQodGhpcy5zZWxlY3Rvcik7XG4gIH1cblxuICAvKipcbiAgICogQXR0YWNoZXMgdGhlIGxpc3RlbmVyc1xuICAgKi9cbiAgYXR0YWNoKCkge1xuICAgIHRoaXMuY29sdW1ucy5vbignY2xpY2snLCAoZSkgPT4ge1xuICAgICAgY29uc3QgJGNvbHVtbiA9ICQoZS5kZWxlZ2F0ZVRhcmdldCk7XG4gICAgICB0aGlzLnNvcnRCeUNvbHVtbigkY29sdW1uLCB0aGlzLmdldFRvZ2dsZWRTb3J0RGlyZWN0aW9uKCRjb2x1bW4pKTtcbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBTb3J0IHVzaW5nIGEgY29sdW1uIG5hbWVcbiAgICogQHBhcmFtIHtzdHJpbmd9IGNvbHVtbk5hbWVcbiAgICogQHBhcmFtIHtzdHJpbmd9IGRpcmVjdGlvbiBcImFzY1wiIG9yIFwiZGVzY1wiXG4gICAqL1xuICBzb3J0QnkoY29sdW1uTmFtZSwgZGlyZWN0aW9uKSB7XG4gICAgY29uc3QgJGNvbHVtbiA9IHRoaXMuY29sdW1ucy5pcyhgW2RhdGEtc29ydC1jb2wtbmFtZT1cIiR7Y29sdW1uTmFtZX1cIl1gKTtcblxuICAgIGlmICghJGNvbHVtbikge1xuICAgICAgdGhyb3cgbmV3IEVycm9yKGBDYW5ub3Qgc29ydCBieSBcIiR7Y29sdW1uTmFtZX1cIjogaW52YWxpZCBjb2x1bW5gKTtcbiAgICB9XG5cbiAgICB0aGlzLnNvcnRCeUNvbHVtbigkY29sdW1uLCBkaXJlY3Rpb24pO1xuICB9XG5cbiAgLyoqXG4gICAqIFNvcnQgdXNpbmcgYSBjb2x1bW4gZWxlbWVudFxuICAgKiBAcGFyYW0ge2pRdWVyeX0gY29sdW1uXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBkaXJlY3Rpb24gXCJhc2NcIiBvciBcImRlc2NcIlxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgc29ydEJ5Q29sdW1uKGNvbHVtbiwgZGlyZWN0aW9uKSB7XG4gICAgd2luZG93LmxvY2F0aW9uID0gdGhpcy5nZXRVcmwoXG4gICAgICBjb2x1bW4uZGF0YSgnc29ydENvbE5hbWUnKSxcbiAgICAgIChkaXJlY3Rpb24gPT09ICdkZXNjJykgPyAnZGVzYycgOiAnYXNjJyxcbiAgICAgIGNvbHVtbi5kYXRhKCdzb3J0UHJlZml4JyksXG4gICAgKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBpbnZlcnRlZCBkaXJlY3Rpb24gdG8gc29ydCBhY2NvcmRpbmcgdG8gdGhlIGNvbHVtbidzIGN1cnJlbnQgb25lXG4gICAqIEBwYXJhbSB7alF1ZXJ5fSBjb2x1bW5cbiAgICogQHJldHVybiB7c3RyaW5nfVxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgZ2V0VG9nZ2xlZFNvcnREaXJlY3Rpb24oY29sdW1uKSB7XG4gICAgcmV0dXJuIGNvbHVtbi5kYXRhKCdzb3J0RGlyZWN0aW9uJykgPT09ICdhc2MnID8gJ2Rlc2MnIDogJ2FzYyc7XG4gIH1cblxuICAvKipcbiAgICogUmV0dXJucyB0aGUgdXJsIGZvciB0aGUgc29ydGVkIHRhYmxlXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjb2xOYW1lXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBkaXJlY3Rpb25cbiAgICogQHBhcmFtIHtzdHJpbmd9IHByZWZpeFxuICAgKiBAcmV0dXJuIHtzdHJpbmd9XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBnZXRVcmwoY29sTmFtZSwgZGlyZWN0aW9uLCBwcmVmaXgpIHtcbiAgICBjb25zdCB1cmwgPSBuZXcgVVJMKHdpbmRvdy5sb2NhdGlvbi5ocmVmKTtcbiAgICBjb25zdCBwYXJhbXMgPSB1cmwuc2VhcmNoUGFyYW1zO1xuXG4gICAgaWYgKHByZWZpeCkge1xuICAgICAgcGFyYW1zLnNldChgJHtwcmVmaXh9W29yZGVyQnldYCwgY29sTmFtZSk7XG4gICAgICBwYXJhbXMuc2V0KGAke3ByZWZpeH1bc29ydE9yZGVyXWAsIGRpcmVjdGlvbik7XG4gICAgfSBlbHNlIHtcbiAgICAgIHBhcmFtcy5zZXQoJ29yZGVyQnknLCBjb2xOYW1lKTtcbiAgICAgIHBhcmFtcy5zZXQoJ3NvcnRPcmRlcicsIGRpcmVjdGlvbik7XG4gICAgfVxuXG4gICAgcmV0dXJuIHVybC50b1N0cmluZygpO1xuICB9XG59XG5cbmV4cG9ydCBkZWZhdWx0IFRhYmxlU29ydGluZztcbiIsIi8qKlxuICogQ29weXJpZ2h0IHNpbmNlIDIwMDcgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzXG4gKiBQcmVzdGFTaG9wIGlzIGFuIEludGVybmF0aW9uYWwgUmVnaXN0ZXJlZCBUcmFkZW1hcmsgJiBQcm9wZXJ0eSBvZiBQcmVzdGFTaG9wIFNBXG4gKlxuICogTk9USUNFIE9GIExJQ0VOU0VcbiAqXG4gKiBUaGlzIHNvdXJjZSBmaWxlIGlzIHN1YmplY3QgdG8gdGhlIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqIHRoYXQgaXMgYnVuZGxlZCB3aXRoIHRoaXMgcGFja2FnZSBpbiB0aGUgZmlsZSBMSUNFTlNFLm1kLlxuICogSXQgaXMgYWxzbyBhdmFpbGFibGUgdGhyb3VnaCB0aGUgd29ybGQtd2lkZS13ZWIgYXQgdGhpcyBVUkw6XG4gKiBodHRwczovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL09TTC0zLjBcbiAqIElmIHlvdSBkaWQgbm90IHJlY2VpdmUgYSBjb3B5IG9mIHRoZSBsaWNlbnNlIGFuZCBhcmUgdW5hYmxlIHRvXG4gKiBvYnRhaW4gaXQgdGhyb3VnaCB0aGUgd29ybGQtd2lkZS13ZWIsIHBsZWFzZSBzZW5kIGFuIGVtYWlsXG4gKiB0byBsaWNlbnNlQHByZXN0YXNob3AuY29tIHNvIHdlIGNhbiBzZW5kIHlvdSBhIGNvcHkgaW1tZWRpYXRlbHkuXG4gKlxuICogRElTQ0xBSU1FUlxuICpcbiAqIERvIG5vdCBlZGl0IG9yIGFkZCB0byB0aGlzIGZpbGUgaWYgeW91IHdpc2ggdG8gdXBncmFkZSBQcmVzdGFTaG9wIHRvIG5ld2VyXG4gKiB2ZXJzaW9ucyBpbiB0aGUgZnV0dXJlLiBJZiB5b3Ugd2lzaCB0byBjdXN0b21pemUgUHJlc3RhU2hvcCBmb3IgeW91clxuICogbmVlZHMgcGxlYXNlIHJlZmVyIHRvIGh0dHBzOi8vZGV2ZG9jcy5wcmVzdGFzaG9wLmNvbS8gZm9yIG1vcmUgaW5mb3JtYXRpb24uXG4gKlxuICogQGF1dGhvciAgICBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnMgPGNvbnRhY3RAcHJlc3Rhc2hvcC5jb20+XG4gKiBAY29weXJpZ2h0IFNpbmNlIDIwMDcgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzXG4gKiBAbGljZW5zZSAgIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMCBPcGVuIFNvZnR3YXJlIExpY2Vuc2UgKE9TTCAzLjApXG4gKi9cblxuaW1wb3J0IENvbmZpcm1Nb2RhbCBmcm9tICdAY29tcG9uZW50cy9tb2RhbCc7XG5cbmNvbnN0IHskfSA9IHdpbmRvdztcblxuLyoqXG4gKiBDbGFzcyBTdWJtaXRSb3dBY3Rpb25FeHRlbnNpb24gaGFuZGxlcyBzdWJtaXR0aW5nIG9mIHJvdyBhY3Rpb25cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgU3VibWl0Um93QWN0aW9uRXh0ZW5zaW9uIHtcbiAgLyoqXG4gICAqIEV4dGVuZCBncmlkXG4gICAqXG4gICAqIEBwYXJhbSB7R3JpZH0gZ3JpZFxuICAgKi9cbiAgZXh0ZW5kKGdyaWQpIHtcbiAgICBncmlkLmdldENvbnRhaW5lcigpLm9uKCdjbGljaycsICcuanMtc3VibWl0LXJvdy1hY3Rpb24nLCAoZXZlbnQpID0+IHtcbiAgICAgIGV2ZW50LnByZXZlbnREZWZhdWx0KCk7XG5cbiAgICAgIGNvbnN0ICRidXR0b24gPSAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpO1xuICAgICAgY29uc3QgY29uZmlybU1lc3NhZ2UgPSAkYnV0dG9uLmRhdGEoJ2NvbmZpcm1NZXNzYWdlJyk7XG4gICAgICBjb25zdCBjb25maXJtVGl0bGUgPSAkYnV0dG9uLmRhdGEoJ3RpdGxlJyk7XG5cbiAgICAgIGNvbnN0IG1ldGhvZCA9ICRidXR0b24uZGF0YSgnbWV0aG9kJyk7XG5cbiAgICAgIGlmIChjb25maXJtVGl0bGUpIHtcbiAgICAgICAgdGhpcy5zaG93Q29uZmlybU1vZGFsKCRidXR0b24sIGdyaWQsIGNvbmZpcm1NZXNzYWdlLCBjb25maXJtVGl0bGUsIG1ldGhvZCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICBpZiAoY29uZmlybU1lc3NhZ2UubGVuZ3RoICYmICF3aW5kb3cuY29uZmlybShjb25maXJtTWVzc2FnZSkpIHtcbiAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cblxuICAgICAgICB0aGlzLnBvc3RGb3JtKCRidXR0b24sIG1ldGhvZCk7XG4gICAgICB9XG4gICAgfSk7XG4gIH1cblxuICBwb3N0Rm9ybSgkYnV0dG9uLCBtZXRob2QpIHtcbiAgICBjb25zdCBpc0dldE9yUG9zdE1ldGhvZCA9IFsnR0VUJywgJ1BPU1QnXS5pbmNsdWRlcyhtZXRob2QpO1xuXG4gICAgY29uc3QgJGZvcm0gPSAkKCc8Zm9ybT4nLCB7XG4gICAgICBhY3Rpb246ICRidXR0b24uZGF0YSgndXJsJyksXG4gICAgICBtZXRob2Q6IGlzR2V0T3JQb3N0TWV0aG9kID8gbWV0aG9kIDogJ1BPU1QnLFxuICAgIH0pLmFwcGVuZFRvKCdib2R5Jyk7XG5cbiAgICBpZiAoIWlzR2V0T3JQb3N0TWV0aG9kKSB7XG4gICAgICAkZm9ybS5hcHBlbmQoJCgnPGlucHV0PicsIHtcbiAgICAgICAgdHlwZTogJ19oaWRkZW4nLFxuICAgICAgICBuYW1lOiAnX21ldGhvZCcsXG4gICAgICAgIHZhbHVlOiBtZXRob2QsXG4gICAgICB9KSk7XG4gICAgfVxuXG4gICAgJGZvcm0uc3VibWl0KCk7XG4gIH1cblxuICAvKipcbiAgICogQHBhcmFtIHtqUXVlcnl9ICRzdWJtaXRCdG5cbiAgICogQHBhcmFtIHtHcmlkfSBncmlkXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjb25maXJtTWVzc2FnZVxuICAgKiBAcGFyYW0ge3N0cmluZ30gY29uZmlybVRpdGxlXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBtZXRob2RcbiAgICovXG4gIHNob3dDb25maXJtTW9kYWwoJHN1Ym1pdEJ0biwgZ3JpZCwgY29uZmlybU1lc3NhZ2UsIGNvbmZpcm1UaXRsZSwgbWV0aG9kKSB7XG4gICAgY29uc3QgY29uZmlybUJ1dHRvbkxhYmVsID0gJHN1Ym1pdEJ0bi5kYXRhKCdjb25maXJtQnV0dG9uTGFiZWwnKTtcbiAgICBjb25zdCBjbG9zZUJ1dHRvbkxhYmVsID0gJHN1Ym1pdEJ0bi5kYXRhKCdjbG9zZUJ1dHRvbkxhYmVsJyk7XG4gICAgY29uc3QgY29uZmlybUJ1dHRvbkNsYXNzID0gJHN1Ym1pdEJ0bi5kYXRhKCdjb25maXJtQnV0dG9uQ2xhc3MnKTtcblxuICAgIGNvbnN0IG1vZGFsID0gbmV3IENvbmZpcm1Nb2RhbCh7XG4gICAgICBpZDogYCR7Z3JpZC5nZXRJZCgpfS1ncmlkLWNvbmZpcm0tbW9kYWxgLFxuICAgICAgY29uZmlybVRpdGxlLFxuICAgICAgY29uZmlybU1lc3NhZ2UsXG4gICAgICBjb25maXJtQnV0dG9uTGFiZWwsXG4gICAgICBjbG9zZUJ1dHRvbkxhYmVsLFxuICAgICAgY29uZmlybUJ1dHRvbkNsYXNzLFxuICAgIH0sICgpID0+IHRoaXMucG9zdEZvcm0oJHN1Ym1pdEJ0biwgbWV0aG9kKSk7XG5cbiAgICBtb2RhbC5zaG93KCk7XG4gIH1cbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IHNpbmNlIDIwMDcgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzXG4gKiBQcmVzdGFTaG9wIGlzIGFuIEludGVybmF0aW9uYWwgUmVnaXN0ZXJlZCBUcmFkZW1hcmsgJiBQcm9wZXJ0eSBvZiBQcmVzdGFTaG9wIFNBXG4gKlxuICogTk9USUNFIE9GIExJQ0VOU0VcbiAqXG4gKiBUaGlzIHNvdXJjZSBmaWxlIGlzIHN1YmplY3QgdG8gdGhlIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqIHRoYXQgaXMgYnVuZGxlZCB3aXRoIHRoaXMgcGFja2FnZSBpbiB0aGUgZmlsZSBMSUNFTlNFLm1kLlxuICogSXQgaXMgYWxzbyBhdmFpbGFibGUgdGhyb3VnaCB0aGUgd29ybGQtd2lkZS13ZWIgYXQgdGhpcyBVUkw6XG4gKiBodHRwczovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL09TTC0zLjBcbiAqIElmIHlvdSBkaWQgbm90IHJlY2VpdmUgYSBjb3B5IG9mIHRoZSBsaWNlbnNlIGFuZCBhcmUgdW5hYmxlIHRvXG4gKiBvYnRhaW4gaXQgdGhyb3VnaCB0aGUgd29ybGQtd2lkZS13ZWIsIHBsZWFzZSBzZW5kIGFuIGVtYWlsXG4gKiB0byBsaWNlbnNlQHByZXN0YXNob3AuY29tIHNvIHdlIGNhbiBzZW5kIHlvdSBhIGNvcHkgaW1tZWRpYXRlbHkuXG4gKlxuICogRElTQ0xBSU1FUlxuICpcbiAqIERvIG5vdCBlZGl0IG9yIGFkZCB0byB0aGlzIGZpbGUgaWYgeW91IHdpc2ggdG8gdXBncmFkZSBQcmVzdGFTaG9wIHRvIG5ld2VyXG4gKiB2ZXJzaW9ucyBpbiB0aGUgZnV0dXJlLiBJZiB5b3Ugd2lzaCB0byBjdXN0b21pemUgUHJlc3RhU2hvcCBmb3IgeW91clxuICogbmVlZHMgcGxlYXNlIHJlZmVyIHRvIGh0dHBzOi8vZGV2ZG9jcy5wcmVzdGFzaG9wLmNvbS8gZm9yIG1vcmUgaW5mb3JtYXRpb24uXG4gKlxuICogQGF1dGhvciAgICBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnMgPGNvbnRhY3RAcHJlc3Rhc2hvcC5jb20+XG4gKiBAY29weXJpZ2h0IFNpbmNlIDIwMDcgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzXG4gKiBAbGljZW5zZSAgIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMCBPcGVuIFNvZnR3YXJlIExpY2Vuc2UgKE9TTCAzLjApXG4gKi9cblxuY29uc3QgeyR9ID0gd2luZG93O1xuXG4vKipcbiAqIENsYXNzIEJ1bGtBY3Rpb25TZWxlY3RDaGVja2JveEV4dGVuc2lvblxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBCdWxrQWN0aW9uQ2hlY2tib3hFeHRlbnNpb24ge1xuICAvKipcbiAgICogRXh0ZW5kIGdyaWQgd2l0aCBidWxrIGFjdGlvbiBjaGVja2JveGVzIGhhbmRsaW5nIGZ1bmN0aW9uYWxpdHlcbiAgICpcbiAgICogQHBhcmFtIHtHcmlkfSBncmlkXG4gICAqL1xuICBleHRlbmQoZ3JpZCkge1xuICAgIHRoaXMuaGFuZGxlQnVsa0FjdGlvbkNoZWNrYm94U2VsZWN0KGdyaWQpO1xuICAgIHRoaXMuaGFuZGxlQnVsa0FjdGlvblNlbGVjdEFsbENoZWNrYm94KGdyaWQpO1xuICB9XG5cbiAgLyoqXG4gICAqIEhhbmRsZXMgXCJTZWxlY3QgYWxsXCIgYnV0dG9uIGluIHRoZSBncmlkXG4gICAqXG4gICAqIEBwYXJhbSB7R3JpZH0gZ3JpZFxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgaGFuZGxlQnVsa0FjdGlvblNlbGVjdEFsbENoZWNrYm94KGdyaWQpIHtcbiAgICBncmlkLmdldENvbnRhaW5lcigpLm9uKCdjaGFuZ2UnLCAnLmpzLWJ1bGstYWN0aW9uLXNlbGVjdC1hbGwnLCAoZSkgPT4ge1xuICAgICAgY29uc3QgJGNoZWNrYm94ID0gJChlLmN1cnJlbnRUYXJnZXQpO1xuXG4gICAgICBjb25zdCBpc0NoZWNrZWQgPSAkY2hlY2tib3guaXMoJzpjaGVja2VkJyk7XG5cbiAgICAgIGlmIChpc0NoZWNrZWQpIHtcbiAgICAgICAgdGhpcy5lbmFibGVCdWxrQWN0aW9uc0J0bihncmlkKTtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHRoaXMuZGlzYWJsZUJ1bGtBY3Rpb25zQnRuKGdyaWQpO1xuICAgICAgfVxuXG4gICAgICBncmlkLmdldENvbnRhaW5lcigpLmZpbmQoJy5qcy1idWxrLWFjdGlvbi1jaGVja2JveCcpLnByb3AoJ2NoZWNrZWQnLCBpc0NoZWNrZWQpO1xuICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIEhhbmRsZXMgZWFjaCBidWxrIGFjdGlvbiBjaGVja2JveCBzZWxlY3QgaW4gdGhlIGdyaWRcbiAgICpcbiAgICogQHBhcmFtIHtHcmlkfSBncmlkXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBoYW5kbGVCdWxrQWN0aW9uQ2hlY2tib3hTZWxlY3QoZ3JpZCkge1xuICAgIGdyaWQuZ2V0Q29udGFpbmVyKCkub24oJ2NoYW5nZScsICcuanMtYnVsay1hY3Rpb24tY2hlY2tib3gnLCAoKSA9PiB7XG4gICAgICBjb25zdCBjaGVja2VkUm93c0NvdW50ID0gZ3JpZC5nZXRDb250YWluZXIoKS5maW5kKCcuanMtYnVsay1hY3Rpb24tY2hlY2tib3g6Y2hlY2tlZCcpLmxlbmd0aDtcblxuICAgICAgaWYgKGNoZWNrZWRSb3dzQ291bnQgPiAwKSB7XG4gICAgICAgIHRoaXMuZW5hYmxlQnVsa0FjdGlvbnNCdG4oZ3JpZCk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICB0aGlzLmRpc2FibGVCdWxrQWN0aW9uc0J0bihncmlkKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxuXG4gIC8qKlxuICAgKiBFbmFibGUgYnVsayBhY3Rpb25zIGJ1dHRvblxuICAgKlxuICAgKiBAcGFyYW0ge0dyaWR9IGdyaWRcbiAgICpcbiAgICogQHByaXZhdGVcbiAgICovXG4gIGVuYWJsZUJ1bGtBY3Rpb25zQnRuKGdyaWQpIHtcbiAgICBncmlkLmdldENvbnRhaW5lcigpLmZpbmQoJy5qcy1idWxrLWFjdGlvbnMtYnRuJykucHJvcCgnZGlzYWJsZWQnLCBmYWxzZSk7XG4gIH1cblxuICAvKipcbiAgICogRGlzYWJsZSBidWxrIGFjdGlvbnMgYnV0dG9uXG4gICAqXG4gICAqIEBwYXJhbSB7R3JpZH0gZ3JpZFxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgZGlzYWJsZUJ1bGtBY3Rpb25zQnRuKGdyaWQpIHtcbiAgICBncmlkLmdldENvbnRhaW5lcigpLmZpbmQoJy5qcy1idWxrLWFjdGlvbnMtYnRuJykucHJvcCgnZGlzYWJsZWQnLCB0cnVlKTtcbiAgfVxufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgc2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIFByZXN0YVNob3AgaXMgYW4gSW50ZXJuYXRpb25hbCBSZWdpc3RlcmVkIFRyYWRlbWFyayAmIFByb3BlcnR5IG9mIFByZXN0YVNob3AgU0FcbiAqXG4gKiBOT1RJQ0UgT0YgTElDRU5TRVxuICpcbiAqIFRoaXMgc291cmNlIGZpbGUgaXMgc3ViamVjdCB0byB0aGUgT3BlbiBTb2Z0d2FyZSBMaWNlbnNlIChPU0wgMy4wKVxuICogdGhhdCBpcyBidW5kbGVkIHdpdGggdGhpcyBwYWNrYWdlIGluIHRoZSBmaWxlIExJQ0VOU0UubWQuXG4gKiBJdCBpcyBhbHNvIGF2YWlsYWJsZSB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiBhdCB0aGlzIFVSTDpcbiAqIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMFxuICogSWYgeW91IGRpZCBub3QgcmVjZWl2ZSBhIGNvcHkgb2YgdGhlIGxpY2Vuc2UgYW5kIGFyZSB1bmFibGUgdG9cbiAqIG9idGFpbiBpdCB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiwgcGxlYXNlIHNlbmQgYW4gZW1haWxcbiAqIHRvIGxpY2Vuc2VAcHJlc3Rhc2hvcC5jb20gc28gd2UgY2FuIHNlbmQgeW91IGEgY29weSBpbW1lZGlhdGVseS5cbiAqXG4gKiBESVNDTEFJTUVSXG4gKlxuICogRG8gbm90IGVkaXQgb3IgYWRkIHRvIHRoaXMgZmlsZSBpZiB5b3Ugd2lzaCB0byB1cGdyYWRlIFByZXN0YVNob3AgdG8gbmV3ZXJcbiAqIHZlcnNpb25zIGluIHRoZSBmdXR1cmUuIElmIHlvdSB3aXNoIHRvIGN1c3RvbWl6ZSBQcmVzdGFTaG9wIGZvciB5b3VyXG4gKiBuZWVkcyBwbGVhc2UgcmVmZXIgdG8gaHR0cHM6Ly9kZXZkb2NzLnByZXN0YXNob3AuY29tLyBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAqXG4gKiBAYXV0aG9yICAgIFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9ycyA8Y29udGFjdEBwcmVzdGFzaG9wLmNvbT5cbiAqIEBjb3B5cmlnaHQgU2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIEBsaWNlbnNlICAgaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9PU0wtMy4wIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqL1xuXG5jb25zdCB7JH0gPSB3aW5kb3c7XG5cbi8qKlxuICogQ2xhc3MgRXhwb3J0VG9TcWxNYW5hZ2VyRXh0ZW5zaW9uIGV4dGVuZHMgZ3JpZCB3aXRoIGV4cG9ydGluZyBxdWVyeSB0byBTUUwgTWFuYWdlclxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBFeHBvcnRUb1NxbE1hbmFnZXJFeHRlbnNpb24ge1xuICAvKipcbiAgICogRXh0ZW5kIGdyaWRcbiAgICpcbiAgICogQHBhcmFtIHtHcmlkfSBncmlkXG4gICAqL1xuICBleHRlbmQoZ3JpZCkge1xuICAgIGdyaWQuZ2V0SGVhZGVyQ29udGFpbmVyKCkub24oJ2NsaWNrJywgJy5qcy1jb21tb25fc2hvd19xdWVyeS1ncmlkLWFjdGlvbicsICgpID0+IHRoaXMub25TaG93U3FsUXVlcnlDbGljayhncmlkKSk7XG4gICAgZ3JpZC5nZXRIZWFkZXJDb250YWluZXIoKS5vbihcbiAgICAgICdjbGljaycsXG4gICAgICAnLmpzLWNvbW1vbl9leHBvcnRfc3FsX21hbmFnZXItZ3JpZC1hY3Rpb24nLFxuICAgICAgKCkgPT4gdGhpcy5vbkV4cG9ydFNxbE1hbmFnZXJDbGljayhncmlkKSxcbiAgICApO1xuICB9XG5cbiAgLyoqXG4gICAqIEludm9rZWQgd2hlbiBjbGlja2luZyBvbiB0aGUgXCJzaG93IHNxbCBxdWVyeVwiIHRvb2xiYXIgYnV0dG9uXG4gICAqXG4gICAqIEBwYXJhbSB7R3JpZH0gZ3JpZFxuICAgKlxuICAgKiBAcHJpdmF0ZVxuICAgKi9cbiAgb25TaG93U3FsUXVlcnlDbGljayhncmlkKSB7XG4gICAgY29uc3QgJHNxbE1hbmFnZXJGb3JtID0gJChgIyR7Z3JpZC5nZXRJZCgpfV9jb21tb25fc2hvd19xdWVyeV9tb2RhbF9mb3JtYCk7XG4gICAgdGhpcy5maWxsRXhwb3J0Rm9ybSgkc3FsTWFuYWdlckZvcm0sIGdyaWQpO1xuXG4gICAgY29uc3QgJG1vZGFsID0gJChgIyR7Z3JpZC5nZXRJZCgpfV9ncmlkX2NvbW1vbl9zaG93X3F1ZXJ5X21vZGFsYCk7XG4gICAgJG1vZGFsLm1vZGFsKCdzaG93Jyk7XG5cbiAgICAkbW9kYWwub24oJ2NsaWNrJywgJy5idG4tc3FsLXN1Ym1pdCcsICgpID0+ICRzcWxNYW5hZ2VyRm9ybS5zdWJtaXQoKSk7XG4gIH1cblxuICAvKipcbiAgICogSW52b2tlZCB3aGVuIGNsaWNraW5nIG9uIHRoZSBcImV4cG9ydCB0byB0aGUgc3FsIHF1ZXJ5XCIgdG9vbGJhciBidXR0b25cbiAgICpcbiAgICogQHBhcmFtIHtHcmlkfSBncmlkXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBvbkV4cG9ydFNxbE1hbmFnZXJDbGljayhncmlkKSB7XG4gICAgY29uc3QgJHNxbE1hbmFnZXJGb3JtID0gJChgIyR7Z3JpZC5nZXRJZCgpfV9jb21tb25fc2hvd19xdWVyeV9tb2RhbF9mb3JtYCk7XG5cbiAgICB0aGlzLmZpbGxFeHBvcnRGb3JtKCRzcWxNYW5hZ2VyRm9ybSwgZ3JpZCk7XG5cbiAgICAkc3FsTWFuYWdlckZvcm0uc3VibWl0KCk7XG4gIH1cblxuICAvKipcbiAgICogRmlsbCBleHBvcnQgZm9ybSB3aXRoIFNRTCBhbmQgaXQncyBuYW1lXG4gICAqXG4gICAqIEBwYXJhbSB7alF1ZXJ5fSAkc3FsTWFuYWdlckZvcm1cbiAgICogQHBhcmFtIHtHcmlkfSBncmlkXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBmaWxsRXhwb3J0Rm9ybSgkc3FsTWFuYWdlckZvcm0sIGdyaWQpIHtcbiAgICBjb25zdCBxdWVyeSA9IGdyaWQuZ2V0Q29udGFpbmVyKCkuZmluZCgnLmpzLWdyaWQtdGFibGUnKS5kYXRhKCdxdWVyeScpO1xuXG4gICAgJHNxbE1hbmFnZXJGb3JtLmZpbmQoJ3RleHRhcmVhW25hbWU9XCJzcWxcIl0nKS52YWwocXVlcnkpO1xuICAgICRzcWxNYW5hZ2VyRm9ybS5maW5kKCdpbnB1dFtuYW1lPVwibmFtZVwiXScpLnZhbCh0aGlzLmdldE5hbWVGcm9tQnJlYWRjcnVtYigpKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgZXhwb3J0IG5hbWUgZnJvbSBwYWdlJ3MgYnJlYWRjcnVtYlxuICAgKlxuICAgKiBAcmV0dXJuIHtTdHJpbmd9XG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBnZXROYW1lRnJvbUJyZWFkY3J1bWIoKSB7XG4gICAgY29uc3QgJGJyZWFkY3J1bWJzID0gJCgnLmhlYWRlci10b29sYmFyJykuZmluZCgnLmJyZWFkY3J1bWItaXRlbScpO1xuICAgIGxldCBuYW1lID0gJyc7XG5cbiAgICAkYnJlYWRjcnVtYnMuZWFjaCgoaSwgaXRlbSkgPT4ge1xuICAgICAgY29uc3QgJGJyZWFkY3J1bWIgPSAkKGl0ZW0pO1xuXG4gICAgICBjb25zdCBicmVhZGNydW1iVGl0bGUgPSAkYnJlYWRjcnVtYi5maW5kKCdhJykubGVuZ3RoID4gMFxuICAgICAgICA/ICRicmVhZGNydW1iLmZpbmQoJ2EnKS50ZXh0KClcbiAgICAgICAgOiAkYnJlYWRjcnVtYi50ZXh0KCk7XG5cbiAgICAgIGlmIChuYW1lLmxlbmd0aCA+IDApIHtcbiAgICAgICAgbmFtZSA9IG5hbWUuY29uY2F0KCcgPiAnKTtcbiAgICAgIH1cblxuICAgICAgbmFtZSA9IG5hbWUuY29uY2F0KGJyZWFkY3J1bWJUaXRsZSk7XG4gICAgfSk7XG5cbiAgICByZXR1cm4gbmFtZTtcbiAgfVxufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgc2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIFByZXN0YVNob3AgaXMgYW4gSW50ZXJuYXRpb25hbCBSZWdpc3RlcmVkIFRyYWRlbWFyayAmIFByb3BlcnR5IG9mIFByZXN0YVNob3AgU0FcbiAqXG4gKiBOT1RJQ0UgT0YgTElDRU5TRVxuICpcbiAqIFRoaXMgc291cmNlIGZpbGUgaXMgc3ViamVjdCB0byB0aGUgT3BlbiBTb2Z0d2FyZSBMaWNlbnNlIChPU0wgMy4wKVxuICogdGhhdCBpcyBidW5kbGVkIHdpdGggdGhpcyBwYWNrYWdlIGluIHRoZSBmaWxlIExJQ0VOU0UubWQuXG4gKiBJdCBpcyBhbHNvIGF2YWlsYWJsZSB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiBhdCB0aGlzIFVSTDpcbiAqIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMFxuICogSWYgeW91IGRpZCBub3QgcmVjZWl2ZSBhIGNvcHkgb2YgdGhlIGxpY2Vuc2UgYW5kIGFyZSB1bmFibGUgdG9cbiAqIG9idGFpbiBpdCB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiwgcGxlYXNlIHNlbmQgYW4gZW1haWxcbiAqIHRvIGxpY2Vuc2VAcHJlc3Rhc2hvcC5jb20gc28gd2UgY2FuIHNlbmQgeW91IGEgY29weSBpbW1lZGlhdGVseS5cbiAqXG4gKiBESVNDTEFJTUVSXG4gKlxuICogRG8gbm90IGVkaXQgb3IgYWRkIHRvIHRoaXMgZmlsZSBpZiB5b3Ugd2lzaCB0byB1cGdyYWRlIFByZXN0YVNob3AgdG8gbmV3ZXJcbiAqIHZlcnNpb25zIGluIHRoZSBmdXR1cmUuIElmIHlvdSB3aXNoIHRvIGN1c3RvbWl6ZSBQcmVzdGFTaG9wIGZvciB5b3VyXG4gKiBuZWVkcyBwbGVhc2UgcmVmZXIgdG8gaHR0cHM6Ly9kZXZkb2NzLnByZXN0YXNob3AuY29tLyBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAqXG4gKiBAYXV0aG9yICAgIFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9ycyA8Y29udGFjdEBwcmVzdGFzaG9wLmNvbT5cbiAqIEBjb3B5cmlnaHQgU2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIEBsaWNlbnNlICAgaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9PU0wtMy4wIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqL1xuXG5pbXBvcnQgcmVzZXRTZWFyY2ggZnJvbSAnQGFwcC91dGlscy9yZXNldF9zZWFyY2gnO1xuXG5jb25zdCB7JH0gPSB3aW5kb3c7XG5cbi8qKlxuICogQ2xhc3MgRmlsdGVyc1Jlc2V0RXh0ZW5zaW9uIGV4dGVuZHMgZ3JpZCB3aXRoIGZpbHRlcnMgcmVzZXR0aW5nXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEZpbHRlcnNSZXNldEV4dGVuc2lvbiB7XG4gIC8qKlxuICAgKiBFeHRlbmQgZ3JpZFxuICAgKlxuICAgKiBAcGFyYW0ge0dyaWR9IGdyaWRcbiAgICovXG4gIGV4dGVuZChncmlkKSB7XG4gICAgZ3JpZC5nZXRDb250YWluZXIoKS5vbignY2xpY2snLCAnLmpzLXJlc2V0LXNlYXJjaCcsIChldmVudCkgPT4ge1xuICAgICAgcmVzZXRTZWFyY2goJChldmVudC5jdXJyZW50VGFyZ2V0KS5kYXRhKCd1cmwnKSwgJChldmVudC5jdXJyZW50VGFyZ2V0KS5kYXRhKCdyZWRpcmVjdCcpKTtcbiAgICB9KTtcbiAgfVxufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgc2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIFByZXN0YVNob3AgaXMgYW4gSW50ZXJuYXRpb25hbCBSZWdpc3RlcmVkIFRyYWRlbWFyayAmIFByb3BlcnR5IG9mIFByZXN0YVNob3AgU0FcbiAqXG4gKiBOT1RJQ0UgT0YgTElDRU5TRVxuICpcbiAqIFRoaXMgc291cmNlIGZpbGUgaXMgc3ViamVjdCB0byB0aGUgT3BlbiBTb2Z0d2FyZSBMaWNlbnNlIChPU0wgMy4wKVxuICogdGhhdCBpcyBidW5kbGVkIHdpdGggdGhpcyBwYWNrYWdlIGluIHRoZSBmaWxlIExJQ0VOU0UubWQuXG4gKiBJdCBpcyBhbHNvIGF2YWlsYWJsZSB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiBhdCB0aGlzIFVSTDpcbiAqIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMFxuICogSWYgeW91IGRpZCBub3QgcmVjZWl2ZSBhIGNvcHkgb2YgdGhlIGxpY2Vuc2UgYW5kIGFyZSB1bmFibGUgdG9cbiAqIG9idGFpbiBpdCB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiwgcGxlYXNlIHNlbmQgYW4gZW1haWxcbiAqIHRvIGxpY2Vuc2VAcHJlc3Rhc2hvcC5jb20gc28gd2UgY2FuIHNlbmQgeW91IGEgY29weSBpbW1lZGlhdGVseS5cbiAqXG4gKiBESVNDTEFJTUVSXG4gKlxuICogRG8gbm90IGVkaXQgb3IgYWRkIHRvIHRoaXMgZmlsZSBpZiB5b3Ugd2lzaCB0byB1cGdyYWRlIFByZXN0YVNob3AgdG8gbmV3ZXJcbiAqIHZlcnNpb25zIGluIHRoZSBmdXR1cmUuIElmIHlvdSB3aXNoIHRvIGN1c3RvbWl6ZSBQcmVzdGFTaG9wIGZvciB5b3VyXG4gKiBuZWVkcyBwbGVhc2UgcmVmZXIgdG8gaHR0cHM6Ly9kZXZkb2NzLnByZXN0YXNob3AuY29tLyBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAqXG4gKiBAYXV0aG9yICAgIFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9ycyA8Y29udGFjdEBwcmVzdGFzaG9wLmNvbT5cbiAqIEBjb3B5cmlnaHQgU2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIEBsaWNlbnNlICAgaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9PU0wtMy4wIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqL1xuXG4vKipcbiAqIFJlc3BvbnNpYmxlIGZvciBncmlkIGZpbHRlcnMgc2VhcmNoIGFuZCByZXNldCBidXR0b24gYXZhaWxhYmlsaXR5IHdoZW4gZmlsdGVyIGlucHV0cyBjaGFuZ2VzLlxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBGaWx0ZXJzU3VibWl0QnV0dG9uRW5hYmxlckV4dGVuc2lvbiB7XG4gIC8qKlxuICAgKiBFeHRlbmQgZ3JpZFxuICAgKlxuICAgKiBAcGFyYW0ge0dyaWR9IGdyaWRcbiAgICovXG4gIGV4dGVuZChncmlkKSB7XG4gICAgY29uc3QgJGZpbHRlcnNSb3cgPSBncmlkLmdldENvbnRhaW5lcigpLmZpbmQoJy5jb2x1bW4tZmlsdGVycycpO1xuICAgICRmaWx0ZXJzUm93LmZpbmQoJy5ncmlkLXNlYXJjaC1idXR0b24nKS5wcm9wKCdkaXNhYmxlZCcsIHRydWUpO1xuXG4gICAgJGZpbHRlcnNSb3cuZmluZCgnaW5wdXQ6bm90KC5qcy1idWxrLWFjdGlvbi1zZWxlY3QtYWxsKSwgc2VsZWN0Jykub24oJ2lucHV0IGRwLmNoYW5nZScsICgpID0+IHtcbiAgICAgICRmaWx0ZXJzUm93LmZpbmQoJy5ncmlkLXNlYXJjaC1idXR0b24nKS5wcm9wKCdkaXNhYmxlZCcsIGZhbHNlKTtcbiAgICAgICRmaWx0ZXJzUm93LmZpbmQoJy5qcy1ncmlkLXJlc2V0LWJ1dHRvbicpLnByb3AoJ2hpZGRlbicsIGZhbHNlKTtcbiAgICB9KTtcbiAgfVxufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgc2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIFByZXN0YVNob3AgaXMgYW4gSW50ZXJuYXRpb25hbCBSZWdpc3RlcmVkIFRyYWRlbWFyayAmIFByb3BlcnR5IG9mIFByZXN0YVNob3AgU0FcbiAqXG4gKiBOT1RJQ0UgT0YgTElDRU5TRVxuICpcbiAqIFRoaXMgc291cmNlIGZpbGUgaXMgc3ViamVjdCB0byB0aGUgT3BlbiBTb2Z0d2FyZSBMaWNlbnNlIChPU0wgMy4wKVxuICogdGhhdCBpcyBidW5kbGVkIHdpdGggdGhpcyBwYWNrYWdlIGluIHRoZSBmaWxlIExJQ0VOU0UubWQuXG4gKiBJdCBpcyBhbHNvIGF2YWlsYWJsZSB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiBhdCB0aGlzIFVSTDpcbiAqIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMFxuICogSWYgeW91IGRpZCBub3QgcmVjZWl2ZSBhIGNvcHkgb2YgdGhlIGxpY2Vuc2UgYW5kIGFyZSB1bmFibGUgdG9cbiAqIG9idGFpbiBpdCB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiwgcGxlYXNlIHNlbmQgYW4gZW1haWxcbiAqIHRvIGxpY2Vuc2VAcHJlc3Rhc2hvcC5jb20gc28gd2UgY2FuIHNlbmQgeW91IGEgY29weSBpbW1lZGlhdGVseS5cbiAqXG4gKiBESVNDTEFJTUVSXG4gKlxuICogRG8gbm90IGVkaXQgb3IgYWRkIHRvIHRoaXMgZmlsZSBpZiB5b3Ugd2lzaCB0byB1cGdyYWRlIFByZXN0YVNob3AgdG8gbmV3ZXJcbiAqIHZlcnNpb25zIGluIHRoZSBmdXR1cmUuIElmIHlvdSB3aXNoIHRvIGN1c3RvbWl6ZSBQcmVzdGFTaG9wIGZvciB5b3VyXG4gKiBuZWVkcyBwbGVhc2UgcmVmZXIgdG8gaHR0cHM6Ly9kZXZkb2NzLnByZXN0YXNob3AuY29tLyBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAqXG4gKiBAYXV0aG9yICAgIFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9ycyA8Y29udGFjdEBwcmVzdGFzaG9wLmNvbT5cbiAqIEBjb3B5cmlnaHQgU2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIEBsaWNlbnNlICAgaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9PU0wtMy4wIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqL1xuXG5pbXBvcnQgJ3RhYmxlZG5kL2Rpc3QvanF1ZXJ5LnRhYmxlZG5kLm1pbic7XG5cbmNvbnN0IHskfSA9IHdpbmRvdztcblxuLyoqXG4gKiBDbGFzcyBQb3NpdGlvbkV4dGVuc2lvbiBleHRlbmRzIEdyaWQgd2l0aCByZW9yZGVyYWJsZSBwb3NpdGlvbnNcbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9zaXRpb25FeHRlbnNpb24ge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgZXh0ZW5kOiAoZ3JpZCkgPT4gdGhpcy5leHRlbmQoZ3JpZCksXG4gICAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBFeHRlbmQgZ3JpZFxuICAgKlxuICAgKiBAcGFyYW0ge0dyaWR9IGdyaWRcbiAgICovXG4gIGV4dGVuZChncmlkKSB7XG4gICAgdGhpcy5ncmlkID0gZ3JpZDtcbiAgICB0aGlzLmFkZElkc1RvR3JpZFRhYmxlUm93cygpO1xuICAgIGdyaWQuZ2V0Q29udGFpbmVyKCkuZmluZCgnLmpzLWdyaWQtdGFibGUnKS50YWJsZURuRCh7XG4gICAgICBvbkRyYWdDbGFzczogJ3Bvc2l0aW9uLXJvdy13aGlsZS1kcmFnJyxcbiAgICAgIGRyYWdIYW5kbGU6ICcuanMtZHJhZy1oYW5kbGUnLFxuICAgICAgb25Ecm9wOiAodGFibGUsIHJvdykgPT4gdGhpcy5oYW5kbGVQb3NpdGlvbkNoYW5nZShyb3cpLFxuICAgIH0pO1xuICAgIGdyaWQuZ2V0Q29udGFpbmVyKCkuZmluZCgnLmpzLWRyYWctaGFuZGxlJykuaG92ZXIoXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICQodGhpcykuY2xvc2VzdCgndHInKS5hZGRDbGFzcygnaG92ZXInKTtcbiAgICAgIH0sXG4gICAgICBmdW5jdGlvbiAoKSB7XG4gICAgICAgICQodGhpcykuY2xvc2VzdCgndHInKS5yZW1vdmVDbGFzcygnaG92ZXInKTtcbiAgICAgIH0sXG4gICAgKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBXaGVuIHBvc2l0aW9uIGlzIGNoYW5nZWQgaGFuZGxlIHVwZGF0ZVxuICAgKlxuICAgKiBAcGFyYW0ge0hUTUxFbGVtZW50fSByb3dcbiAgICpcbiAgICogQHByaXZhdGVcbiAgICovXG4gIGhhbmRsZVBvc2l0aW9uQ2hhbmdlKHJvdykge1xuICAgIGNvbnN0ICRyb3dQb3NpdGlvbkNvbnRhaW5lciA9ICQocm93KS5maW5kKGAuanMtJHt0aGlzLmdyaWQuZ2V0SWQoKX0tcG9zaXRpb246Zmlyc3RgKTtcbiAgICBjb25zdCB1cGRhdGVVcmwgPSAkcm93UG9zaXRpb25Db250YWluZXIuZGF0YSgndXBkYXRlLXVybCcpO1xuICAgIGNvbnN0IG1ldGhvZCA9ICRyb3dQb3NpdGlvbkNvbnRhaW5lci5kYXRhKCd1cGRhdGUtbWV0aG9kJyk7XG4gICAgY29uc3QgcG9zaXRpb25zID0gdGhpcy5nZXRSb3dzUG9zaXRpb25zKCk7XG4gICAgY29uc3QgcGFyYW1zID0ge3Bvc2l0aW9uc307XG5cbiAgICB0aGlzLnVwZGF0ZVBvc2l0aW9uKHVwZGF0ZVVybCwgcGFyYW1zLCBtZXRob2QpO1xuICB9XG5cbiAgLyoqXG4gICAqIFJldHVybnMgdGhlIGN1cnJlbnQgdGFibGUgcG9zaXRpb25zXG4gICAqIEByZXR1cm5zIHtBcnJheX1cbiAgICogQHByaXZhdGVcbiAgICovXG4gIGdldFJvd3NQb3NpdGlvbnMoKSB7XG4gICAgY29uc3QgdGFibGVEYXRhID0gSlNPTi5wYXJzZSgkLnRhYmxlRG5ELmpzb25pemUoKSk7XG4gICAgY29uc3Qgcm93c0RhdGEgPSB0YWJsZURhdGFbYCR7dGhpcy5ncmlkLmdldElkKCl9X2dyaWRfdGFibGVgXTtcbiAgICBjb25zdCBjb21wbGV0ZVJvd3NEYXRhID0gW107XG5cbiAgICBsZXQgdHJEYXRhO1xuXG4gICAgLy8gcmV0cmlldmUgZHJhZ0FuZERyb3BPZmZzZXQgb2Zmc2V0IHRvIGhhdmUgYWxsIG5lZWRlZCBkYXRhXG4gICAgLy8gZm9yIHBvc2l0aW9ucyBtYXBwaW5nIGV2b2x1dGlvbiBvdmVyIHRpbWVcbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJvd3NEYXRhLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICB0ckRhdGEgPSB0aGlzLmdyaWQuZ2V0Q29udGFpbmVyKClcbiAgICAgICAgLmZpbmQoYCMke3Jvd3NEYXRhW2ldfWApO1xuXG4gICAgICBjb21wbGV0ZVJvd3NEYXRhLnB1c2goe1xuICAgICAgICByb3dNYXJrZXI6IHJvd3NEYXRhW2ldLFxuICAgICAgICBvZmZzZXQ6IHRyRGF0YS5kYXRhKCdkcmFnQW5kRHJvcE9mZnNldCcpLFxuICAgICAgfSk7XG4gICAgfVxuXG4gICAgcmV0dXJuIHRoaXMuY29tcHV0ZU1hcHBpbmdCZXR3ZWVuT2xkQW5kTmV3UG9zaXRpb25zKGNvbXBsZXRlUm93c0RhdGEpO1xuICB9XG5cbiAgLyoqXG4gICAqIEFkZCBJRCdzIHRvIEdyaWQgdGFibGUgcm93cyB0byBtYWtlIHRhYmxlRG5ELm9uRHJvcCgpIGZ1bmN0aW9uIHdvcmsuXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBhZGRJZHNUb0dyaWRUYWJsZVJvd3MoKSB7XG4gICAgbGV0IGNvdW50ZXIgPSAwO1xuXG4gICAgdGhpcy5ncmlkLmdldENvbnRhaW5lcigpXG4gICAgICAuZmluZChgLmpzLWdyaWQtdGFibGUgLmpzLSR7dGhpcy5ncmlkLmdldElkKCl9LXBvc2l0aW9uYClcbiAgICAgIC5lYWNoKChpbmRleCwgcG9zaXRpb25XcmFwcGVyKSA9PiB7XG4gICAgICAgIGNvbnN0ICRwb3NpdGlvbldyYXBwZXIgPSAkKHBvc2l0aW9uV3JhcHBlcik7XG4gICAgICAgIGNvbnN0IHJvd0lkID0gJHBvc2l0aW9uV3JhcHBlci5kYXRhKCdpZCcpO1xuICAgICAgICBjb25zdCBwb3NpdGlvbiA9ICRwb3NpdGlvbldyYXBwZXIuZGF0YSgncG9zaXRpb24nKTtcbiAgICAgICAgY29uc3QgaWQgPSBgcm93XyR7cm93SWR9XyR7cG9zaXRpb259YDtcbiAgICAgICAgJHBvc2l0aW9uV3JhcHBlci5jbG9zZXN0KCd0cicpLmF0dHIoJ2lkJywgaWQpO1xuICAgICAgICAkcG9zaXRpb25XcmFwcGVyLmNsb3Nlc3QoJ3RkJykuYWRkQ2xhc3MoJ2pzLWRyYWctaGFuZGxlJyk7XG4gICAgICAgICRwb3NpdGlvbldyYXBwZXIuY2xvc2VzdCgndHInKS5kYXRhKCdkcmFnQW5kRHJvcE9mZnNldCcsIGNvdW50ZXIpO1xuXG4gICAgICAgIGNvdW50ZXIgKz0gMTtcbiAgICAgIH0pO1xuICB9XG5cbiAgLyoqXG4gICAqIFByb2Nlc3Mgcm93cyBwb3NpdGlvbnMgdXBkYXRlXG4gICAqXG4gICAqIEBwYXJhbSB7U3RyaW5nfSB1cmxcbiAgICogQHBhcmFtIHtPYmplY3R9IHBhcmFtc1xuICAgKiBAcGFyYW0ge1N0cmluZ30gbWV0aG9kXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICB1cGRhdGVQb3NpdGlvbih1cmwsIHBhcmFtcywgbWV0aG9kKSB7XG4gICAgY29uc3QgaXNHZXRPclBvc3RNZXRob2QgPSBbJ0dFVCcsICdQT1NUJ10uaW5jbHVkZXMobWV0aG9kKTtcblxuICAgIGNvbnN0ICRmb3JtID0gJCgnPGZvcm0+Jywge1xuICAgICAgYWN0aW9uOiB1cmwsXG4gICAgICBtZXRob2Q6IGlzR2V0T3JQb3N0TWV0aG9kID8gbWV0aG9kIDogJ1BPU1QnLFxuICAgIH0pLmFwcGVuZFRvKCdib2R5Jyk7XG5cbiAgICBjb25zdCBwb3NpdGlvbnNOYiA9IHBhcmFtcy5wb3NpdGlvbnMubGVuZ3RoO1xuICAgIGxldCBwb3NpdGlvbjtcblxuICAgIGZvciAobGV0IGkgPSAwOyBpIDwgcG9zaXRpb25zTmI7IGkgKz0gMSkge1xuICAgICAgcG9zaXRpb24gPSBwYXJhbXMucG9zaXRpb25zW2ldO1xuICAgICAgJGZvcm0uYXBwZW5kKFxuICAgICAgICAkKCc8aW5wdXQ+Jywge1xuICAgICAgICAgIHR5cGU6ICdoaWRkZW4nLFxuICAgICAgICAgIG5hbWU6IGBwb3NpdGlvbnNbJHtpfV1bcm93SWRdYCxcbiAgICAgICAgICB2YWx1ZTogcG9zaXRpb24ucm93SWQsXG4gICAgICAgIH0pLFxuICAgICAgICAkKCc8aW5wdXQ+Jywge1xuICAgICAgICAgIHR5cGU6ICdoaWRkZW4nLFxuICAgICAgICAgIG5hbWU6IGBwb3NpdGlvbnNbJHtpfV1bb2xkUG9zaXRpb25dYCxcbiAgICAgICAgICB2YWx1ZTogcG9zaXRpb24ub2xkUG9zaXRpb24sXG4gICAgICAgIH0pLFxuICAgICAgICAkKCc8aW5wdXQ+Jywge1xuICAgICAgICAgIHR5cGU6ICdoaWRkZW4nLFxuICAgICAgICAgIG5hbWU6IGBwb3NpdGlvbnNbJHtpfV1bbmV3UG9zaXRpb25dYCxcbiAgICAgICAgICB2YWx1ZTogcG9zaXRpb24ubmV3UG9zaXRpb24sXG4gICAgICAgIH0pLFxuICAgICAgKTtcbiAgICB9XG5cbiAgICAvLyBUaGlzIF9tZXRob2QgcGFyYW0gaXMgdXNlZCBieSBTeW1mb255IHRvIHNpbXVsYXRlIERFTEVURSBhbmQgUFVUIG1ldGhvZHNcbiAgICBpZiAoIWlzR2V0T3JQb3N0TWV0aG9kKSB7XG4gICAgICAkZm9ybS5hcHBlbmQoJCgnPGlucHV0PicsIHtcbiAgICAgICAgdHlwZTogJ2hpZGRlbicsXG4gICAgICAgIG5hbWU6ICdfbWV0aG9kJyxcbiAgICAgICAgdmFsdWU6IG1ldGhvZCxcbiAgICAgIH0pKTtcbiAgICB9XG5cbiAgICAkZm9ybS5zdWJtaXQoKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBSb3dzIGhhdmUgYmVlbiByZW9yZGVyZWQuIFRoaXMgZnVuY3Rpb25cbiAgICogZmluZHMsIGZvciBlYWNoIHJvdyBJRDogdGhlIG9sZCBwb3NpdGlvbiwgdGhlIG5ldyBwb3NpdGlvblxuICAgKlxuICAgKiBAcmV0dXJucyB7QXJyYXl9XG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBjb21wdXRlTWFwcGluZ0JldHdlZW5PbGRBbmROZXdQb3NpdGlvbnMocm93c0RhdGEpIHtcbiAgICBjb25zdCByZWdleCA9IC9ecm93XyhcXGQrKV8oXFxkKykkLztcbiAgICBjb25zdCBtYXBwaW5nID0gQXJyYXkocm93c0RhdGEubGVuZ3RoKS5maWxsKCkubWFwKE9iamVjdCk7XG5cbiAgICBmb3IgKGxldCBpID0gMDsgaSA8IHJvd3NEYXRhLmxlbmd0aDsgaSArPSAxKSB7XG4gICAgICBjb25zdCBbLCByb3dJZCwgb2xkUG9zaXRpb25dID0gcmVnZXguZXhlYyhyb3dzRGF0YVtpXS5yb3dNYXJrZXIpO1xuICAgICAgbWFwcGluZ1tpXS5yb3dJZCA9IHJvd0lkO1xuICAgICAgbWFwcGluZ1tpXS5vbGRQb3NpdGlvbiA9IHBhcnNlSW50KG9sZFBvc2l0aW9uLCAxMCk7XG4gICAgICAvLyBUaGlzIHJvdyB3aWxsIGhhdmUgYXMgYSBuZXcgcG9zaXRpb24gdGhlIG9sZCBwb3NpdGlvbiBvZiB0aGUgY3VycmVudCBvbmVcbiAgICAgIG1hcHBpbmdbcm93c0RhdGFbaV0ub2Zmc2V0XS5uZXdQb3NpdGlvbiA9IG1hcHBpbmdbaV0ub2xkUG9zaXRpb247XG4gICAgfVxuXG4gICAgcmV0dXJuIG1hcHBpbmc7XG4gIH1cbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IHNpbmNlIDIwMDcgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzXG4gKiBQcmVzdGFTaG9wIGlzIGFuIEludGVybmF0aW9uYWwgUmVnaXN0ZXJlZCBUcmFkZW1hcmsgJiBQcm9wZXJ0eSBvZiBQcmVzdGFTaG9wIFNBXG4gKlxuICogTk9USUNFIE9GIExJQ0VOU0VcbiAqXG4gKiBUaGlzIHNvdXJjZSBmaWxlIGlzIHN1YmplY3QgdG8gdGhlIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqIHRoYXQgaXMgYnVuZGxlZCB3aXRoIHRoaXMgcGFja2FnZSBpbiB0aGUgZmlsZSBMSUNFTlNFLm1kLlxuICogSXQgaXMgYWxzbyBhdmFpbGFibGUgdGhyb3VnaCB0aGUgd29ybGQtd2lkZS13ZWIgYXQgdGhpcyBVUkw6XG4gKiBodHRwczovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL09TTC0zLjBcbiAqIElmIHlvdSBkaWQgbm90IHJlY2VpdmUgYSBjb3B5IG9mIHRoZSBsaWNlbnNlIGFuZCBhcmUgdW5hYmxlIHRvXG4gKiBvYnRhaW4gaXQgdGhyb3VnaCB0aGUgd29ybGQtd2lkZS13ZWIsIHBsZWFzZSBzZW5kIGFuIGVtYWlsXG4gKiB0byBsaWNlbnNlQHByZXN0YXNob3AuY29tIHNvIHdlIGNhbiBzZW5kIHlvdSBhIGNvcHkgaW1tZWRpYXRlbHkuXG4gKlxuICogRElTQ0xBSU1FUlxuICpcbiAqIERvIG5vdCBlZGl0IG9yIGFkZCB0byB0aGlzIGZpbGUgaWYgeW91IHdpc2ggdG8gdXBncmFkZSBQcmVzdGFTaG9wIHRvIG5ld2VyXG4gKiB2ZXJzaW9ucyBpbiB0aGUgZnV0dXJlLiBJZiB5b3Ugd2lzaCB0byBjdXN0b21pemUgUHJlc3RhU2hvcCBmb3IgeW91clxuICogbmVlZHMgcGxlYXNlIHJlZmVyIHRvIGh0dHBzOi8vZGV2ZG9jcy5wcmVzdGFzaG9wLmNvbS8gZm9yIG1vcmUgaW5mb3JtYXRpb24uXG4gKlxuICogQGF1dGhvciAgICBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnMgPGNvbnRhY3RAcHJlc3Rhc2hvcC5jb20+XG4gKiBAY29weXJpZ2h0IFNpbmNlIDIwMDcgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzXG4gKiBAbGljZW5zZSAgIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMCBPcGVuIFNvZnR3YXJlIExpY2Vuc2UgKE9TTCAzLjApXG4gKi9cblxuLyoqXG4gKiBDbGFzcyBSZWxvYWRMaXN0RXh0ZW5zaW9uIGV4dGVuZHMgZ3JpZCB3aXRoIFwiTGlzdCByZWxvYWRcIiBhY3Rpb25cbiAqL1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUmVsb2FkTGlzdEV4dGVuc2lvbiB7XG4gIC8qKlxuICAgKiBFeHRlbmQgZ3JpZFxuICAgKlxuICAgKiBAcGFyYW0ge0dyaWR9IGdyaWRcbiAgICovXG4gIGV4dGVuZChncmlkKSB7XG4gICAgZ3JpZC5nZXRIZWFkZXJDb250YWluZXIoKS5vbignY2xpY2snLCAnLmpzLWNvbW1vbl9yZWZyZXNoX2xpc3QtZ3JpZC1hY3Rpb24nLCAoKSA9PiB7XG4gICAgICB3aW5kb3cubG9jYXRpb24ucmVsb2FkKCk7XG4gICAgfSk7XG4gIH1cbn1cbiIsIi8qKlxuICogQ29weXJpZ2h0IHNpbmNlIDIwMDcgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzXG4gKiBQcmVzdGFTaG9wIGlzIGFuIEludGVybmF0aW9uYWwgUmVnaXN0ZXJlZCBUcmFkZW1hcmsgJiBQcm9wZXJ0eSBvZiBQcmVzdGFTaG9wIFNBXG4gKlxuICogTk9USUNFIE9GIExJQ0VOU0VcbiAqXG4gKiBUaGlzIHNvdXJjZSBmaWxlIGlzIHN1YmplY3QgdG8gdGhlIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqIHRoYXQgaXMgYnVuZGxlZCB3aXRoIHRoaXMgcGFja2FnZSBpbiB0aGUgZmlsZSBMSUNFTlNFLm1kLlxuICogSXQgaXMgYWxzbyBhdmFpbGFibGUgdGhyb3VnaCB0aGUgd29ybGQtd2lkZS13ZWIgYXQgdGhpcyBVUkw6XG4gKiBodHRwczovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL09TTC0zLjBcbiAqIElmIHlvdSBkaWQgbm90IHJlY2VpdmUgYSBjb3B5IG9mIHRoZSBsaWNlbnNlIGFuZCBhcmUgdW5hYmxlIHRvXG4gKiBvYnRhaW4gaXQgdGhyb3VnaCB0aGUgd29ybGQtd2lkZS13ZWIsIHBsZWFzZSBzZW5kIGFuIGVtYWlsXG4gKiB0byBsaWNlbnNlQHByZXN0YXNob3AuY29tIHNvIHdlIGNhbiBzZW5kIHlvdSBhIGNvcHkgaW1tZWRpYXRlbHkuXG4gKlxuICogRElTQ0xBSU1FUlxuICpcbiAqIERvIG5vdCBlZGl0IG9yIGFkZCB0byB0aGlzIGZpbGUgaWYgeW91IHdpc2ggdG8gdXBncmFkZSBQcmVzdGFTaG9wIHRvIG5ld2VyXG4gKiB2ZXJzaW9ucyBpbiB0aGUgZnV0dXJlLiBJZiB5b3Ugd2lzaCB0byBjdXN0b21pemUgUHJlc3RhU2hvcCBmb3IgeW91clxuICogbmVlZHMgcGxlYXNlIHJlZmVyIHRvIGh0dHBzOi8vZGV2ZG9jcy5wcmVzdGFzaG9wLmNvbS8gZm9yIG1vcmUgaW5mb3JtYXRpb24uXG4gKlxuICogQGF1dGhvciAgICBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnMgPGNvbnRhY3RAcHJlc3Rhc2hvcC5jb20+XG4gKiBAY29weXJpZ2h0IFNpbmNlIDIwMDcgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzXG4gKiBAbGljZW5zZSAgIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMCBPcGVuIFNvZnR3YXJlIExpY2Vuc2UgKE9TTCAzLjApXG4gKi9cblxuaW1wb3J0IFRhYmxlU29ydGluZyBmcm9tICdAYXBwL3V0aWxzL3RhYmxlLXNvcnRpbmcnO1xuXG4vKipcbiAqIENsYXNzIFJlbG9hZExpc3RFeHRlbnNpb24gZXh0ZW5kcyBncmlkIHdpdGggXCJMaXN0IHJlbG9hZFwiIGFjdGlvblxuICovXG5leHBvcnQgZGVmYXVsdCBjbGFzcyBTb3J0aW5nRXh0ZW5zaW9uIHtcbiAgLyoqXG4gICAqIEV4dGVuZCBncmlkXG4gICAqXG4gICAqIEBwYXJhbSB7R3JpZH0gZ3JpZFxuICAgKi9cbiAgZXh0ZW5kKGdyaWQpIHtcbiAgICBjb25zdCAkc29ydGFibGVUYWJsZSA9IGdyaWQuZ2V0Q29udGFpbmVyKCkuZmluZCgndGFibGUudGFibGUnKTtcblxuICAgIG5ldyBUYWJsZVNvcnRpbmcoJHNvcnRhYmxlVGFibGUpLmF0dGFjaCgpO1xuICB9XG59XG4iLCIvKipcbiAqIENvcHlyaWdodCBzaW5jZSAyMDA3IFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9yc1xuICogUHJlc3RhU2hvcCBpcyBhbiBJbnRlcm5hdGlvbmFsIFJlZ2lzdGVyZWQgVHJhZGVtYXJrICYgUHJvcGVydHkgb2YgUHJlc3RhU2hvcCBTQVxuICpcbiAqIE5PVElDRSBPRiBMSUNFTlNFXG4gKlxuICogVGhpcyBzb3VyY2UgZmlsZSBpcyBzdWJqZWN0IHRvIHRoZSBPcGVuIFNvZnR3YXJlIExpY2Vuc2UgKE9TTCAzLjApXG4gKiB0aGF0IGlzIGJ1bmRsZWQgd2l0aCB0aGlzIHBhY2thZ2UgaW4gdGhlIGZpbGUgTElDRU5TRS5tZC5cbiAqIEl0IGlzIGFsc28gYXZhaWxhYmxlIHRocm91Z2ggdGhlIHdvcmxkLXdpZGUtd2ViIGF0IHRoaXMgVVJMOlxuICogaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9PU0wtMy4wXG4gKiBJZiB5b3UgZGlkIG5vdCByZWNlaXZlIGEgY29weSBvZiB0aGUgbGljZW5zZSBhbmQgYXJlIHVuYWJsZSB0b1xuICogb2J0YWluIGl0IHRocm91Z2ggdGhlIHdvcmxkLXdpZGUtd2ViLCBwbGVhc2Ugc2VuZCBhbiBlbWFpbFxuICogdG8gbGljZW5zZUBwcmVzdGFzaG9wLmNvbSBzbyB3ZSBjYW4gc2VuZCB5b3UgYSBjb3B5IGltbWVkaWF0ZWx5LlxuICpcbiAqIERJU0NMQUlNRVJcbiAqXG4gKiBEbyBub3QgZWRpdCBvciBhZGQgdG8gdGhpcyBmaWxlIGlmIHlvdSB3aXNoIHRvIHVwZ3JhZGUgUHJlc3RhU2hvcCB0byBuZXdlclxuICogdmVyc2lvbnMgaW4gdGhlIGZ1dHVyZS4gSWYgeW91IHdpc2ggdG8gY3VzdG9taXplIFByZXN0YVNob3AgZm9yIHlvdXJcbiAqIG5lZWRzIHBsZWFzZSByZWZlciB0byBodHRwczovL2RldmRvY3MucHJlc3Rhc2hvcC5jb20vIGZvciBtb3JlIGluZm9ybWF0aW9uLlxuICpcbiAqIEBhdXRob3IgICAgUHJlc3RhU2hvcCBTQSBhbmQgQ29udHJpYnV0b3JzIDxjb250YWN0QHByZXN0YXNob3AuY29tPlxuICogQGNvcHlyaWdodCBTaW5jZSAyMDA3IFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9yc1xuICogQGxpY2Vuc2UgICBodHRwczovL29wZW5zb3VyY2Uub3JnL2xpY2Vuc2VzL09TTC0zLjAgT3BlbiBTb2Z0d2FyZSBMaWNlbnNlIChPU0wgMy4wKVxuICovXG5cbmltcG9ydCBDb25maXJtTW9kYWwgZnJvbSAnQGNvbXBvbmVudHMvbW9kYWwnO1xuXG5jb25zdCB7JH0gPSB3aW5kb3c7XG5cbi8qKlxuICogSGFuZGxlcyBzdWJtaXQgb2YgZ3JpZCBhY3Rpb25zXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFN1Ym1pdEJ1bGtBY3Rpb25FeHRlbnNpb24ge1xuICBjb25zdHJ1Y3RvcigpIHtcbiAgICByZXR1cm4ge1xuICAgICAgZXh0ZW5kOiAoZ3JpZCkgPT4gdGhpcy5leHRlbmQoZ3JpZCksXG4gICAgfTtcbiAgfVxuXG4gIC8qKlxuICAgKiBFeHRlbmQgZ3JpZCB3aXRoIGJ1bGsgYWN0aW9uIHN1Ym1pdHRpbmdcbiAgICpcbiAgICogQHBhcmFtIHtHcmlkfSBncmlkXG4gICAqL1xuICBleHRlbmQoZ3JpZCkge1xuICAgIGdyaWQuZ2V0Q29udGFpbmVyKCkub24oJ2NsaWNrJywgJy5qcy1idWxrLWFjdGlvbi1zdWJtaXQtYnRuJywgKGV2ZW50KSA9PiB7XG4gICAgICB0aGlzLnN1Ym1pdChldmVudCwgZ3JpZCk7XG4gICAgfSk7XG4gIH1cblxuICAvKipcbiAgICogSGFuZGxlIGJ1bGsgYWN0aW9uIHN1Ym1pdHRpbmdcbiAgICpcbiAgICogQHBhcmFtIHtFdmVudH0gZXZlbnRcbiAgICogQHBhcmFtIHtHcmlkfSBncmlkXG4gICAqXG4gICAqIEBwcml2YXRlXG4gICAqL1xuICBzdWJtaXQoZXZlbnQsIGdyaWQpIHtcbiAgICBjb25zdCAkc3VibWl0QnRuID0gJChldmVudC5jdXJyZW50VGFyZ2V0KTtcbiAgICBjb25zdCBjb25maXJtTWVzc2FnZSA9ICRzdWJtaXRCdG4uZGF0YSgnY29uZmlybS1tZXNzYWdlJyk7XG4gICAgY29uc3QgY29uZmlybVRpdGxlID0gJHN1Ym1pdEJ0bi5kYXRhKCdjb25maXJtVGl0bGUnKTtcblxuICAgIGlmIChjb25maXJtTWVzc2FnZSAhPT0gdW5kZWZpbmVkICYmIGNvbmZpcm1NZXNzYWdlLmxlbmd0aCA+IDApIHtcbiAgICAgIGlmIChjb25maXJtVGl0bGUgIT09IHVuZGVmaW5lZCkge1xuICAgICAgICB0aGlzLnNob3dDb25maXJtTW9kYWwoJHN1Ym1pdEJ0biwgZ3JpZCwgY29uZmlybU1lc3NhZ2UsIGNvbmZpcm1UaXRsZSk7XG4gICAgICB9IGVsc2UgaWYgKHdpbmRvdy5jb25maXJtKGNvbmZpcm1NZXNzYWdlKSkge1xuICAgICAgICB0aGlzLnBvc3RGb3JtKCRzdWJtaXRCdG4sIGdyaWQpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLnBvc3RGb3JtKCRzdWJtaXRCdG4sIGdyaWQpO1xuICAgIH1cbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge2pRdWVyeX0gJHN1Ym1pdEJ0blxuICAgKiBAcGFyYW0ge0dyaWR9IGdyaWRcbiAgICogQHBhcmFtIHtzdHJpbmd9IGNvbmZpcm1NZXNzYWdlXG4gICAqIEBwYXJhbSB7c3RyaW5nfSBjb25maXJtVGl0bGVcbiAgICovXG4gIHNob3dDb25maXJtTW9kYWwoJHN1Ym1pdEJ0biwgZ3JpZCwgY29uZmlybU1lc3NhZ2UsIGNvbmZpcm1UaXRsZSkge1xuICAgIGNvbnN0IGNvbmZpcm1CdXR0b25MYWJlbCA9ICRzdWJtaXRCdG4uZGF0YSgnY29uZmlybUJ1dHRvbkxhYmVsJyk7XG4gICAgY29uc3QgY2xvc2VCdXR0b25MYWJlbCA9ICRzdWJtaXRCdG4uZGF0YSgnY2xvc2VCdXR0b25MYWJlbCcpO1xuICAgIGNvbnN0IGNvbmZpcm1CdXR0b25DbGFzcyA9ICRzdWJtaXRCdG4uZGF0YSgnY29uZmlybUJ1dHRvbkNsYXNzJyk7XG5cbiAgICBjb25zdCBtb2RhbCA9IG5ldyBDb25maXJtTW9kYWwoe1xuICAgICAgaWQ6IGAke2dyaWQuZ2V0SWQoKX0tZ3JpZC1jb25maXJtLW1vZGFsYCxcbiAgICAgIGNvbmZpcm1UaXRsZSxcbiAgICAgIGNvbmZpcm1NZXNzYWdlLFxuICAgICAgY29uZmlybUJ1dHRvbkxhYmVsLFxuICAgICAgY2xvc2VCdXR0b25MYWJlbCxcbiAgICAgIGNvbmZpcm1CdXR0b25DbGFzcyxcbiAgICB9LCAoKSA9PiB0aGlzLnBvc3RGb3JtKCRzdWJtaXRCdG4sIGdyaWQpKTtcblxuICAgIG1vZGFsLnNob3coKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBAcGFyYW0ge2pRdWVyeX0gJHN1Ym1pdEJ0blxuICAgKiBAcGFyYW0ge0dyaWR9IGdyaWRcbiAgICovXG4gIHBvc3RGb3JtKCRzdWJtaXRCdG4sIGdyaWQpIHtcbiAgICBjb25zdCAkZm9ybSA9ICQoYCMke2dyaWQuZ2V0SWQoKX1fZmlsdGVyX2Zvcm1gKTtcblxuICAgICRmb3JtLmF0dHIoJ2FjdGlvbicsICRzdWJtaXRCdG4uZGF0YSgnZm9ybS11cmwnKSk7XG4gICAgJGZvcm0uYXR0cignbWV0aG9kJywgJHN1Ym1pdEJ0bi5kYXRhKCdmb3JtLW1ldGhvZCcpKTtcbiAgICAkZm9ybS5zdWJtaXQoKTtcbiAgfVxufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgc2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIFByZXN0YVNob3AgaXMgYW4gSW50ZXJuYXRpb25hbCBSZWdpc3RlcmVkIFRyYWRlbWFyayAmIFByb3BlcnR5IG9mIFByZXN0YVNob3AgU0FcbiAqXG4gKiBOT1RJQ0UgT0YgTElDRU5TRVxuICpcbiAqIFRoaXMgc291cmNlIGZpbGUgaXMgc3ViamVjdCB0byB0aGUgT3BlbiBTb2Z0d2FyZSBMaWNlbnNlIChPU0wgMy4wKVxuICogdGhhdCBpcyBidW5kbGVkIHdpdGggdGhpcyBwYWNrYWdlIGluIHRoZSBmaWxlIExJQ0VOU0UubWQuXG4gKiBJdCBpcyBhbHNvIGF2YWlsYWJsZSB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiBhdCB0aGlzIFVSTDpcbiAqIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMFxuICogSWYgeW91IGRpZCBub3QgcmVjZWl2ZSBhIGNvcHkgb2YgdGhlIGxpY2Vuc2UgYW5kIGFyZSB1bmFibGUgdG9cbiAqIG9idGFpbiBpdCB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiwgcGxlYXNlIHNlbmQgYW4gZW1haWxcbiAqIHRvIGxpY2Vuc2VAcHJlc3Rhc2hvcC5jb20gc28gd2UgY2FuIHNlbmQgeW91IGEgY29weSBpbW1lZGlhdGVseS5cbiAqXG4gKiBESVNDTEFJTUVSXG4gKlxuICogRG8gbm90IGVkaXQgb3IgYWRkIHRvIHRoaXMgZmlsZSBpZiB5b3Ugd2lzaCB0byB1cGdyYWRlIFByZXN0YVNob3AgdG8gbmV3ZXJcbiAqIHZlcnNpb25zIGluIHRoZSBmdXR1cmUuIElmIHlvdSB3aXNoIHRvIGN1c3RvbWl6ZSBQcmVzdGFTaG9wIGZvciB5b3VyXG4gKiBuZWVkcyBwbGVhc2UgcmVmZXIgdG8gaHR0cHM6Ly9kZXZkb2NzLnByZXN0YXNob3AuY29tLyBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAqXG4gKiBAYXV0aG9yICAgIFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9ycyA8Y29udGFjdEBwcmVzdGFzaG9wLmNvbT5cbiAqIEBjb3B5cmlnaHQgU2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIEBsaWNlbnNlICAgaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9PU0wtMy4wIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqL1xuXG5jb25zdCB7JH0gPSB3aW5kb3c7XG5cbi8qKlxuICogQ2xhc3MgaXMgcmVzcG9uc2libGUgZm9yIGhhbmRsaW5nIEdyaWQgZXZlbnRzXG4gKi9cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIEdyaWQge1xuICAvKipcbiAgICogR3JpZCBpZFxuICAgKlxuICAgKiBAcGFyYW0ge3N0cmluZ30gaWRcbiAgICovXG4gIGNvbnN0cnVjdG9yKGlkKSB7XG4gICAgdGhpcy5pZCA9IGlkO1xuICAgIHRoaXMuJGNvbnRhaW5lciA9ICQoYCMke3RoaXMuaWR9X2dyaWRgKTtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgZ3JpZCBpZFxuICAgKlxuICAgKiBAcmV0dXJucyB7c3RyaW5nfVxuICAgKi9cbiAgZ2V0SWQoKSB7XG4gICAgcmV0dXJuIHRoaXMuaWQ7XG4gIH1cblxuICAvKipcbiAgICogR2V0IGdyaWQgY29udGFpbmVyXG4gICAqXG4gICAqIEByZXR1cm5zIHtqUXVlcnl9XG4gICAqL1xuICBnZXRDb250YWluZXIoKSB7XG4gICAgcmV0dXJuIHRoaXMuJGNvbnRhaW5lcjtcbiAgfVxuXG4gIC8qKlxuICAgKiBHZXQgZ3JpZCBoZWFkZXIgY29udGFpbmVyXG4gICAqXG4gICAqIEByZXR1cm5zIHtqUXVlcnl9XG4gICAqL1xuICBnZXRIZWFkZXJDb250YWluZXIoKSB7XG4gICAgcmV0dXJuIHRoaXMuJGNvbnRhaW5lci5jbG9zZXN0KCcuanMtZ3JpZC1wYW5lbCcpLmZpbmQoJy5qcy1ncmlkLWhlYWRlcicpO1xuICB9XG5cbiAgLyoqXG4gICAqIEV4dGVuZCBncmlkIHdpdGggZXh0ZXJuYWwgZXh0ZW5zaW9uc1xuICAgKlxuICAgKiBAcGFyYW0ge29iamVjdH0gZXh0ZW5zaW9uXG4gICAqL1xuICBhZGRFeHRlbnNpb24oZXh0ZW5zaW9uKSB7XG4gICAgZXh0ZW5zaW9uLmV4dGVuZCh0aGlzKTtcbiAgfVxufVxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgc2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIFByZXN0YVNob3AgaXMgYW4gSW50ZXJuYXRpb25hbCBSZWdpc3RlcmVkIFRyYWRlbWFyayAmIFByb3BlcnR5IG9mIFByZXN0YVNob3AgU0FcbiAqXG4gKiBOT1RJQ0UgT0YgTElDRU5TRVxuICpcbiAqIFRoaXMgc291cmNlIGZpbGUgaXMgc3ViamVjdCB0byB0aGUgT3BlbiBTb2Z0d2FyZSBMaWNlbnNlIChPU0wgMy4wKVxuICogdGhhdCBpcyBidW5kbGVkIHdpdGggdGhpcyBwYWNrYWdlIGluIHRoZSBmaWxlIExJQ0VOU0UubWQuXG4gKiBJdCBpcyBhbHNvIGF2YWlsYWJsZSB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiBhdCB0aGlzIFVSTDpcbiAqIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMFxuICogSWYgeW91IGRpZCBub3QgcmVjZWl2ZSBhIGNvcHkgb2YgdGhlIGxpY2Vuc2UgYW5kIGFyZSB1bmFibGUgdG9cbiAqIG9idGFpbiBpdCB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiwgcGxlYXNlIHNlbmQgYW4gZW1haWxcbiAqIHRvIGxpY2Vuc2VAcHJlc3Rhc2hvcC5jb20gc28gd2UgY2FuIHNlbmQgeW91IGEgY29weSBpbW1lZGlhdGVseS5cbiAqXG4gKiBESVNDTEFJTUVSXG4gKlxuICogRG8gbm90IGVkaXQgb3IgYWRkIHRvIHRoaXMgZmlsZSBpZiB5b3Ugd2lzaCB0byB1cGdyYWRlIFByZXN0YVNob3AgdG8gbmV3ZXJcbiAqIHZlcnNpb25zIGluIHRoZSBmdXR1cmUuIElmIHlvdSB3aXNoIHRvIGN1c3RvbWl6ZSBQcmVzdGFTaG9wIGZvciB5b3VyXG4gKiBuZWVkcyBwbGVhc2UgcmVmZXIgdG8gaHR0cHM6Ly9kZXZkb2NzLnByZXN0YXNob3AuY29tLyBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAqXG4gKiBAYXV0aG9yICAgIFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9ycyA8Y29udGFjdEBwcmVzdGFzaG9wLmNvbT5cbiAqIEBjb3B5cmlnaHQgU2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIEBsaWNlbnNlICAgaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9PU0wtMy4wIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqL1xuXG5jb25zdCB7JH0gPSB3aW5kb3c7XG5cbi8qKlxuICogQ29uZmlybU1vZGFsIGNvbXBvbmVudFxuICpcbiAqIEBwYXJhbSB7U3RyaW5nfSBpZFxuICogQHBhcmFtIHtTdHJpbmd9IGNvbmZpcm1UaXRsZVxuICogQHBhcmFtIHtTdHJpbmd9IGNvbmZpcm1NZXNzYWdlXG4gKiBAcGFyYW0ge1N0cmluZ30gY2xvc2VCdXR0b25MYWJlbFxuICogQHBhcmFtIHtTdHJpbmd9IGNvbmZpcm1CdXR0b25MYWJlbFxuICogQHBhcmFtIHtTdHJpbmd9IGNvbmZpcm1CdXR0b25DbGFzc1xuICogQHBhcmFtIHtBcnJheX0gY3VzdG9tQnV0dG9uc1xuICogQHBhcmFtIHtCb29sZWFufSBjbG9zYWJsZVxuICogQHBhcmFtIHtGdW5jdGlvbn0gY29uZmlybUNhbGxiYWNrXG4gKiBAcGFyYW0ge0Z1bmN0aW9ufSBjYW5jZWxDYWxsYmFja1xuICpcbiAqL1xuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24gQ29uZmlybU1vZGFsKHBhcmFtcywgY29uZmlybUNhbGxiYWNrLCBjYW5jZWxDYWxsYmFjaykge1xuICAvLyBDb25zdHJ1Y3QgdGhlIG1vZGFsXG4gIGNvbnN0IHtpZCwgY2xvc2FibGV9ID0gcGFyYW1zO1xuICB0aGlzLm1vZGFsID0gTW9kYWwocGFyYW1zKTtcblxuICAvLyBqUXVlcnkgbW9kYWwgb2JqZWN0XG4gIHRoaXMuJG1vZGFsID0gJCh0aGlzLm1vZGFsLmNvbnRhaW5lcik7XG5cbiAgdGhpcy5zaG93ID0gKCkgPT4ge1xuICAgIHRoaXMuJG1vZGFsLm1vZGFsKCk7XG4gIH07XG5cbiAgdGhpcy5tb2RhbC5jb25maXJtQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoJ2NsaWNrJywgY29uZmlybUNhbGxiYWNrKTtcblxuICB0aGlzLiRtb2RhbC5tb2RhbCh7XG4gICAgYmFja2Ryb3A6IGNsb3NhYmxlID8gdHJ1ZSA6ICdzdGF0aWMnLFxuICAgIGtleWJvYXJkOiBjbG9zYWJsZSAhPT0gdW5kZWZpbmVkID8gY2xvc2FibGUgOiB0cnVlLFxuICAgIGNsb3NhYmxlOiBjbG9zYWJsZSAhPT0gdW5kZWZpbmVkID8gY2xvc2FibGUgOiB0cnVlLFxuICAgIHNob3c6IGZhbHNlLFxuICB9KTtcblxuICB0aGlzLiRtb2RhbC5vbignaGlkZGVuLmJzLm1vZGFsJywgKCkgPT4ge1xuICAgIGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoYCMke2lkfWApLnJlbW92ZSgpO1xuICAgIGlmIChjYW5jZWxDYWxsYmFjaykge1xuICAgICAgY2FuY2VsQ2FsbGJhY2soKTtcbiAgICB9XG4gIH0pO1xuXG4gIGRvY3VtZW50LmJvZHkuYXBwZW5kQ2hpbGQodGhpcy5tb2RhbC5jb250YWluZXIpO1xufVxuXG4vKipcbiAqIE1vZGFsIGNvbXBvbmVudCB0byBpbXByb3ZlIGxpc2liaWxpdHkgYnkgY29uc3RydWN0aW5nIHRoZSBtb2RhbCBvdXRzaWRlIHRoZSBtYWluIGZ1bmN0aW9uXG4gKlxuICogQHBhcmFtIHtPYmplY3R9IHBhcmFtc1xuICpcbiAqL1xuZnVuY3Rpb24gTW9kYWwoe1xuICBpZCA9ICdjb25maXJtLW1vZGFsJyxcbiAgY29uZmlybVRpdGxlLFxuICBjb25maXJtTWVzc2FnZSA9ICcnLFxuICBjbG9zZUJ1dHRvbkxhYmVsID0gJ0Nsb3NlJyxcbiAgY29uZmlybUJ1dHRvbkxhYmVsID0gJ0FjY2VwdCcsXG4gIGNvbmZpcm1CdXR0b25DbGFzcyA9ICdidG4tcHJpbWFyeScsXG4gIGN1c3RvbUJ1dHRvbnMgPSBbXSxcbn0pIHtcbiAgY29uc3QgbW9kYWwgPSB7fTtcblxuICAvLyBNYWluIG1vZGFsIGVsZW1lbnRcbiAgbW9kYWwuY29udGFpbmVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIG1vZGFsLmNvbnRhaW5lci5jbGFzc0xpc3QuYWRkKCdtb2RhbCcsICdmYWRlJyk7XG4gIG1vZGFsLmNvbnRhaW5lci5pZCA9IGlkO1xuXG4gIC8vIE1vZGFsIGRpYWxvZyBlbGVtZW50XG4gIG1vZGFsLmRpYWxvZyA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBtb2RhbC5kaWFsb2cuY2xhc3NMaXN0LmFkZCgnbW9kYWwtZGlhbG9nJyk7XG5cbiAgLy8gTW9kYWwgY29udGVudCBlbGVtZW50XG4gIG1vZGFsLmNvbnRlbnQgPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdkaXYnKTtcbiAgbW9kYWwuY29udGVudC5jbGFzc0xpc3QuYWRkKCdtb2RhbC1jb250ZW50Jyk7XG5cbiAgLy8gTW9kYWwgaGVhZGVyIGVsZW1lbnRcbiAgbW9kYWwuaGVhZGVyID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgnZGl2Jyk7XG4gIG1vZGFsLmhlYWRlci5jbGFzc0xpc3QuYWRkKCdtb2RhbC1oZWFkZXInKTtcblxuICAvLyBNb2RhbCB0aXRsZSBlbGVtZW50XG4gIGlmIChjb25maXJtVGl0bGUpIHtcbiAgICBtb2RhbC50aXRsZSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2g0Jyk7XG4gICAgbW9kYWwudGl0bGUuY2xhc3NMaXN0LmFkZCgnbW9kYWwtdGl0bGUnKTtcbiAgICBtb2RhbC50aXRsZS5pbm5lckhUTUwgPSBjb25maXJtVGl0bGU7XG4gIH1cblxuICAvLyBNb2RhbCBjbG9zZSBidXR0b24gaWNvblxuICBtb2RhbC5jbG9zZUljb24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgbW9kYWwuY2xvc2VJY29uLmNsYXNzTGlzdC5hZGQoJ2Nsb3NlJyk7XG4gIG1vZGFsLmNsb3NlSWNvbi5zZXRBdHRyaWJ1dGUoJ3R5cGUnLCAnYnV0dG9uJyk7XG4gIG1vZGFsLmNsb3NlSWNvbi5kYXRhc2V0LmRpc21pc3MgPSAnbW9kYWwnO1xuICBtb2RhbC5jbG9zZUljb24uaW5uZXJIVE1MID0gJ8OXJztcblxuICAvLyBNb2RhbCBib2R5IGVsZW1lbnRcbiAgbW9kYWwuYm9keSA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBtb2RhbC5ib2R5LmNsYXNzTGlzdC5hZGQoJ21vZGFsLWJvZHknLCAndGV4dC1sZWZ0JywgJ2ZvbnQtd2VpZ2h0LW5vcm1hbCcpO1xuXG4gIC8vIE1vZGFsIG1lc3NhZ2UgZWxlbWVudFxuICBtb2RhbC5tZXNzYWdlID0gZG9jdW1lbnQuY3JlYXRlRWxlbWVudCgncCcpO1xuICBtb2RhbC5tZXNzYWdlLmNsYXNzTGlzdC5hZGQoJ2NvbmZpcm0tbWVzc2FnZScpO1xuICBtb2RhbC5tZXNzYWdlLmlubmVySFRNTCA9IGNvbmZpcm1NZXNzYWdlO1xuXG4gIC8vIE1vZGFsIGZvb3RlciBlbGVtZW50XG4gIG1vZGFsLmZvb3RlciA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2RpdicpO1xuICBtb2RhbC5mb290ZXIuY2xhc3NMaXN0LmFkZCgnbW9kYWwtZm9vdGVyJyk7XG5cbiAgLy8gTW9kYWwgY2xvc2UgYnV0dG9uIGVsZW1lbnRcbiAgbW9kYWwuY2xvc2VCdXR0b24gPSBkb2N1bWVudC5jcmVhdGVFbGVtZW50KCdidXR0b24nKTtcbiAgbW9kYWwuY2xvc2VCdXR0b24uc2V0QXR0cmlidXRlKCd0eXBlJywgJ2J1dHRvbicpO1xuICBtb2RhbC5jbG9zZUJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdidG4nLCAnYnRuLW91dGxpbmUtc2Vjb25kYXJ5JywgJ2J0bi1sZycpO1xuICBtb2RhbC5jbG9zZUJ1dHRvbi5kYXRhc2V0LmRpc21pc3MgPSAnbW9kYWwnO1xuICBtb2RhbC5jbG9zZUJ1dHRvbi5pbm5lckhUTUwgPSBjbG9zZUJ1dHRvbkxhYmVsO1xuXG4gIC8vIE1vZGFsIGNvbmZpcm0gYnV0dG9uIGVsZW1lbnRcbiAgbW9kYWwuY29uZmlybUJ1dHRvbiA9IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoJ2J1dHRvbicpO1xuICBtb2RhbC5jb25maXJtQnV0dG9uLnNldEF0dHJpYnV0ZSgndHlwZScsICdidXR0b24nKTtcbiAgbW9kYWwuY29uZmlybUJ1dHRvbi5jbGFzc0xpc3QuYWRkKCdidG4nLCBjb25maXJtQnV0dG9uQ2xhc3MsICdidG4tbGcnLCAnYnRuLWNvbmZpcm0tc3VibWl0Jyk7XG4gIG1vZGFsLmNvbmZpcm1CdXR0b24uZGF0YXNldC5kaXNtaXNzID0gJ21vZGFsJztcbiAgbW9kYWwuY29uZmlybUJ1dHRvbi5pbm5lckhUTUwgPSBjb25maXJtQnV0dG9uTGFiZWw7XG5cbiAgLy8gQ29uc3RydWN0aW5nIHRoZSBtb2RhbFxuICBpZiAoY29uZmlybVRpdGxlKSB7XG4gICAgbW9kYWwuaGVhZGVyLmFwcGVuZChtb2RhbC50aXRsZSwgbW9kYWwuY2xvc2VJY29uKTtcbiAgfSBlbHNlIHtcbiAgICBtb2RhbC5oZWFkZXIuYXBwZW5kQ2hpbGQobW9kYWwuY2xvc2VJY29uKTtcbiAgfVxuXG4gIG1vZGFsLmJvZHkuYXBwZW5kQ2hpbGQobW9kYWwubWVzc2FnZSk7XG4gIG1vZGFsLmZvb3Rlci5hcHBlbmQobW9kYWwuY2xvc2VCdXR0b24sIC4uLmN1c3RvbUJ1dHRvbnMsIG1vZGFsLmNvbmZpcm1CdXR0b24pO1xuICBtb2RhbC5jb250ZW50LmFwcGVuZChtb2RhbC5oZWFkZXIsIG1vZGFsLmJvZHksIG1vZGFsLmZvb3Rlcik7XG4gIG1vZGFsLmRpYWxvZy5hcHBlbmRDaGlsZChtb2RhbC5jb250ZW50KTtcbiAgbW9kYWwuY29udGFpbmVyLmFwcGVuZENoaWxkKG1vZGFsLmRpYWxvZyk7XG5cbiAgcmV0dXJuIG1vZGFsO1xufVxuIiwibW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiByZXF1aXJlKFwiY29yZS1qcy9saWJyYXJ5L2ZuL2FycmF5L2Zyb21cIiksIF9fZXNNb2R1bGU6IHRydWUgfTsiLCJtb2R1bGUuZXhwb3J0cyA9IHsgXCJkZWZhdWx0XCI6IHJlcXVpcmUoXCJjb3JlLWpzL2xpYnJhcnkvZm4vZ2V0LWl0ZXJhdG9yXCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07IiwibW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiByZXF1aXJlKFwiY29yZS1qcy9saWJyYXJ5L2ZuL2lzLWl0ZXJhYmxlXCIpLCBfX2VzTW9kdWxlOiB0cnVlIH07IiwibW9kdWxlLmV4cG9ydHMgPSB7IFwiZGVmYXVsdFwiOiByZXF1aXJlKFwiY29yZS1qcy9saWJyYXJ5L2ZuL29iamVjdC9kZWZpbmUtcHJvcGVydHlcIiksIF9fZXNNb2R1bGU6IHRydWUgfTsiLCJcInVzZSBzdHJpY3RcIjtcblxuZXhwb3J0cy5fX2VzTW9kdWxlID0gdHJ1ZTtcblxuZXhwb3J0cy5kZWZhdWx0ID0gZnVuY3Rpb24gKGluc3RhbmNlLCBDb25zdHJ1Y3Rvcikge1xuICBpZiAoIShpbnN0YW5jZSBpbnN0YW5jZW9mIENvbnN0cnVjdG9yKSkge1xuICAgIHRocm93IG5ldyBUeXBlRXJyb3IoXCJDYW5ub3QgY2FsbCBhIGNsYXNzIGFzIGEgZnVuY3Rpb25cIik7XG4gIH1cbn07IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfZGVmaW5lUHJvcGVydHkgPSByZXF1aXJlKFwiLi4vY29yZS1qcy9vYmplY3QvZGVmaW5lLXByb3BlcnR5XCIpO1xuXG52YXIgX2RlZmluZVByb3BlcnR5MiA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2RlZmluZVByb3BlcnR5KTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0aWVzKHRhcmdldCwgcHJvcHMpIHtcbiAgICBmb3IgKHZhciBpID0gMDsgaSA8IHByb3BzLmxlbmd0aDsgaSsrKSB7XG4gICAgICB2YXIgZGVzY3JpcHRvciA9IHByb3BzW2ldO1xuICAgICAgZGVzY3JpcHRvci5lbnVtZXJhYmxlID0gZGVzY3JpcHRvci5lbnVtZXJhYmxlIHx8IGZhbHNlO1xuICAgICAgZGVzY3JpcHRvci5jb25maWd1cmFibGUgPSB0cnVlO1xuICAgICAgaWYgKFwidmFsdWVcIiBpbiBkZXNjcmlwdG9yKSBkZXNjcmlwdG9yLndyaXRhYmxlID0gdHJ1ZTtcbiAgICAgICgwLCBfZGVmaW5lUHJvcGVydHkyLmRlZmF1bHQpKHRhcmdldCwgZGVzY3JpcHRvci5rZXksIGRlc2NyaXB0b3IpO1xuICAgIH1cbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIHByb3RvUHJvcHMsIHN0YXRpY1Byb3BzKSB7XG4gICAgaWYgKHByb3RvUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IucHJvdG90eXBlLCBwcm90b1Byb3BzKTtcbiAgICBpZiAoc3RhdGljUHJvcHMpIGRlZmluZVByb3BlcnRpZXMoQ29uc3RydWN0b3IsIHN0YXRpY1Byb3BzKTtcbiAgICByZXR1cm4gQ29uc3RydWN0b3I7XG4gIH07XG59KCk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfaXNJdGVyYWJsZTIgPSByZXF1aXJlKFwiLi4vY29yZS1qcy9pcy1pdGVyYWJsZVwiKTtcblxudmFyIF9pc0l0ZXJhYmxlMyA9IF9pbnRlcm9wUmVxdWlyZURlZmF1bHQoX2lzSXRlcmFibGUyKTtcblxudmFyIF9nZXRJdGVyYXRvcjIgPSByZXF1aXJlKFwiLi4vY29yZS1qcy9nZXQtaXRlcmF0b3JcIik7XG5cbnZhciBfZ2V0SXRlcmF0b3IzID0gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChfZ2V0SXRlcmF0b3IyKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0gZnVuY3Rpb24gKCkge1xuICBmdW5jdGlvbiBzbGljZUl0ZXJhdG9yKGFyciwgaSkge1xuICAgIHZhciBfYXJyID0gW107XG4gICAgdmFyIF9uID0gdHJ1ZTtcbiAgICB2YXIgX2QgPSBmYWxzZTtcbiAgICB2YXIgX2UgPSB1bmRlZmluZWQ7XG5cbiAgICB0cnkge1xuICAgICAgZm9yICh2YXIgX2kgPSAoMCwgX2dldEl0ZXJhdG9yMy5kZWZhdWx0KShhcnIpLCBfczsgIShfbiA9IChfcyA9IF9pLm5leHQoKSkuZG9uZSk7IF9uID0gdHJ1ZSkge1xuICAgICAgICBfYXJyLnB1c2goX3MudmFsdWUpO1xuXG4gICAgICAgIGlmIChpICYmIF9hcnIubGVuZ3RoID09PSBpKSBicmVhaztcbiAgICAgIH1cbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIF9kID0gdHJ1ZTtcbiAgICAgIF9lID0gZXJyO1xuICAgIH0gZmluYWxseSB7XG4gICAgICB0cnkge1xuICAgICAgICBpZiAoIV9uICYmIF9pW1wicmV0dXJuXCJdKSBfaVtcInJldHVyblwiXSgpO1xuICAgICAgfSBmaW5hbGx5IHtcbiAgICAgICAgaWYgKF9kKSB0aHJvdyBfZTtcbiAgICAgIH1cbiAgICB9XG5cbiAgICByZXR1cm4gX2FycjtcbiAgfVxuXG4gIHJldHVybiBmdW5jdGlvbiAoYXJyLCBpKSB7XG4gICAgaWYgKEFycmF5LmlzQXJyYXkoYXJyKSkge1xuICAgICAgcmV0dXJuIGFycjtcbiAgICB9IGVsc2UgaWYgKCgwLCBfaXNJdGVyYWJsZTMuZGVmYXVsdCkoT2JqZWN0KGFycikpKSB7XG4gICAgICByZXR1cm4gc2xpY2VJdGVyYXRvcihhcnIsIGkpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aHJvdyBuZXcgVHlwZUVycm9yKFwiSW52YWxpZCBhdHRlbXB0IHRvIGRlc3RydWN0dXJlIG5vbi1pdGVyYWJsZSBpbnN0YW5jZVwiKTtcbiAgICB9XG4gIH07XG59KCk7IiwiXCJ1c2Ugc3RyaWN0XCI7XG5cbmV4cG9ydHMuX19lc01vZHVsZSA9IHRydWU7XG5cbnZhciBfZnJvbSA9IHJlcXVpcmUoXCIuLi9jb3JlLWpzL2FycmF5L2Zyb21cIik7XG5cbnZhciBfZnJvbTIgPSBfaW50ZXJvcFJlcXVpcmVEZWZhdWx0KF9mcm9tKTtcblxuZnVuY3Rpb24gX2ludGVyb3BSZXF1aXJlRGVmYXVsdChvYmopIHsgcmV0dXJuIG9iaiAmJiBvYmouX19lc01vZHVsZSA/IG9iaiA6IHsgZGVmYXVsdDogb2JqIH07IH1cblxuZXhwb3J0cy5kZWZhdWx0ID0gZnVuY3Rpb24gKGFycikge1xuICBpZiAoQXJyYXkuaXNBcnJheShhcnIpKSB7XG4gICAgZm9yICh2YXIgaSA9IDAsIGFycjIgPSBBcnJheShhcnIubGVuZ3RoKTsgaSA8IGFyci5sZW5ndGg7IGkrKykge1xuICAgICAgYXJyMltpXSA9IGFycltpXTtcbiAgICB9XG5cbiAgICByZXR1cm4gYXJyMjtcbiAgfSBlbHNlIHtcbiAgICByZXR1cm4gKDAsIF9mcm9tMi5kZWZhdWx0KShhcnIpO1xuICB9XG59OyIsInJlcXVpcmUoJy4uLy4uL21vZHVsZXMvZXM2LnN0cmluZy5pdGVyYXRvcicpO1xucmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYuYXJyYXkuZnJvbScpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuQXJyYXkuZnJvbTtcbiIsInJlcXVpcmUoJy4uL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuc3RyaW5nLml0ZXJhdG9yJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uL21vZHVsZXMvY29yZS5nZXQtaXRlcmF0b3InKTtcbiIsInJlcXVpcmUoJy4uL21vZHVsZXMvd2ViLmRvbS5pdGVyYWJsZScpO1xucmVxdWlyZSgnLi4vbW9kdWxlcy9lczYuc3RyaW5nLml0ZXJhdG9yJyk7XG5tb2R1bGUuZXhwb3J0cyA9IHJlcXVpcmUoJy4uL21vZHVsZXMvY29yZS5pcy1pdGVyYWJsZScpO1xuIiwicmVxdWlyZSgnLi4vLi4vbW9kdWxlcy9lczYub2JqZWN0LmRlZmluZS1wcm9wZXJ0eScpO1xudmFyICRPYmplY3QgPSByZXF1aXJlKCcuLi8uLi9tb2R1bGVzL19jb3JlJykuT2JqZWN0O1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eShpdCwga2V5LCBkZXNjKSB7XG4gIHJldHVybiAkT2JqZWN0LmRlZmluZVByb3BlcnR5KGl0LCBrZXksIGRlc2MpO1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmICh0eXBlb2YgaXQgIT0gJ2Z1bmN0aW9uJykgdGhyb3cgVHlwZUVycm9yKGl0ICsgJyBpcyBub3QgYSBmdW5jdGlvbiEnKTtcbiAgcmV0dXJuIGl0O1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKCkgeyAvKiBlbXB0eSAqLyB9O1xuIiwidmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAoIWlzT2JqZWN0KGl0KSkgdGhyb3cgVHlwZUVycm9yKGl0ICsgJyBpcyBub3QgYW4gb2JqZWN0IScpO1xuICByZXR1cm4gaXQ7XG59O1xuIiwiLy8gZmFsc2UgLT4gQXJyYXkjaW5kZXhPZlxuLy8gdHJ1ZSAgLT4gQXJyYXkjaW5jbHVkZXNcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciB0b0Fic29sdXRlSW5kZXggPSByZXF1aXJlKCcuL190by1hYnNvbHV0ZS1pbmRleCcpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoSVNfSU5DTFVERVMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICgkdGhpcywgZWwsIGZyb21JbmRleCkge1xuICAgIHZhciBPID0gdG9JT2JqZWN0KCR0aGlzKTtcbiAgICB2YXIgbGVuZ3RoID0gdG9MZW5ndGgoTy5sZW5ndGgpO1xuICAgIHZhciBpbmRleCA9IHRvQWJzb2x1dGVJbmRleChmcm9tSW5kZXgsIGxlbmd0aCk7XG4gICAgdmFyIHZhbHVlO1xuICAgIC8vIEFycmF5I2luY2x1ZGVzIHVzZXMgU2FtZVZhbHVlWmVybyBlcXVhbGl0eSBhbGdvcml0aG1cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tc2VsZi1jb21wYXJlXG4gICAgaWYgKElTX0lOQ0xVREVTICYmIGVsICE9IGVsKSB3aGlsZSAobGVuZ3RoID4gaW5kZXgpIHtcbiAgICAgIHZhbHVlID0gT1tpbmRleCsrXTtcbiAgICAgIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby1zZWxmLWNvbXBhcmVcbiAgICAgIGlmICh2YWx1ZSAhPSB2YWx1ZSkgcmV0dXJuIHRydWU7XG4gICAgLy8gQXJyYXkjaW5kZXhPZiBpZ25vcmVzIGhvbGVzLCBBcnJheSNpbmNsdWRlcyAtIG5vdFxuICAgIH0gZWxzZSBmb3IgKDtsZW5ndGggPiBpbmRleDsgaW5kZXgrKykgaWYgKElTX0lOQ0xVREVTIHx8IGluZGV4IGluIE8pIHtcbiAgICAgIGlmIChPW2luZGV4XSA9PT0gZWwpIHJldHVybiBJU19JTkNMVURFUyB8fCBpbmRleCB8fCAwO1xuICAgIH0gcmV0dXJuICFJU19JTkNMVURFUyAmJiAtMTtcbiAgfTtcbn07XG4iLCIvLyBnZXR0aW5nIHRhZyBmcm9tIDE5LjEuMy42IE9iamVjdC5wcm90b3R5cGUudG9TdHJpbmcoKVxudmFyIGNvZiA9IHJlcXVpcmUoJy4vX2NvZicpO1xudmFyIFRBRyA9IHJlcXVpcmUoJy4vX3drcycpKCd0b1N0cmluZ1RhZycpO1xuLy8gRVMzIHdyb25nIGhlcmVcbnZhciBBUkcgPSBjb2YoZnVuY3Rpb24gKCkgeyByZXR1cm4gYXJndW1lbnRzOyB9KCkpID09ICdBcmd1bWVudHMnO1xuXG4vLyBmYWxsYmFjayBmb3IgSUUxMSBTY3JpcHQgQWNjZXNzIERlbmllZCBlcnJvclxudmFyIHRyeUdldCA9IGZ1bmN0aW9uIChpdCwga2V5KSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGl0W2tleV07XG4gIH0gY2F0Y2ggKGUpIHsgLyogZW1wdHkgKi8gfVxufTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgdmFyIE8sIFQsIEI7XG4gIHJldHVybiBpdCA9PT0gdW5kZWZpbmVkID8gJ1VuZGVmaW5lZCcgOiBpdCA9PT0gbnVsbCA/ICdOdWxsJ1xuICAgIC8vIEBAdG9TdHJpbmdUYWcgY2FzZVxuICAgIDogdHlwZW9mIChUID0gdHJ5R2V0KE8gPSBPYmplY3QoaXQpLCBUQUcpKSA9PSAnc3RyaW5nJyA/IFRcbiAgICAvLyBidWlsdGluVGFnIGNhc2VcbiAgICA6IEFSRyA/IGNvZihPKVxuICAgIC8vIEVTMyBhcmd1bWVudHMgZmFsbGJhY2tcbiAgICA6IChCID0gY29mKE8pKSA9PSAnT2JqZWN0JyAmJiB0eXBlb2YgTy5jYWxsZWUgPT0gJ2Z1bmN0aW9uJyA/ICdBcmd1bWVudHMnIDogQjtcbn07XG4iLCJ2YXIgdG9TdHJpbmcgPSB7fS50b1N0cmluZztcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIHRvU3RyaW5nLmNhbGwoaXQpLnNsaWNlKDgsIC0xKTtcbn07XG4iLCJ2YXIgY29yZSA9IG1vZHVsZS5leHBvcnRzID0geyB2ZXJzaW9uOiAnMi42LjExJyB9O1xuaWYgKHR5cGVvZiBfX2UgPT0gJ251bWJlcicpIF9fZSA9IGNvcmU7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW5kZWZcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkZGVmaW5lUHJvcGVydHkgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKTtcbnZhciBjcmVhdGVEZXNjID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChvYmplY3QsIGluZGV4LCB2YWx1ZSkge1xuICBpZiAoaW5kZXggaW4gb2JqZWN0KSAkZGVmaW5lUHJvcGVydHkuZihvYmplY3QsIGluZGV4LCBjcmVhdGVEZXNjKDAsIHZhbHVlKSk7XG4gIGVsc2Ugb2JqZWN0W2luZGV4XSA9IHZhbHVlO1xufTtcbiIsIi8vIG9wdGlvbmFsIC8gc2ltcGxlIGNvbnRleHQgYmluZGluZ1xudmFyIGFGdW5jdGlvbiA9IHJlcXVpcmUoJy4vX2EtZnVuY3Rpb24nKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGZuLCB0aGF0LCBsZW5ndGgpIHtcbiAgYUZ1bmN0aW9uKGZuKTtcbiAgaWYgKHRoYXQgPT09IHVuZGVmaW5lZCkgcmV0dXJuIGZuO1xuICBzd2l0Y2ggKGxlbmd0aCkge1xuICAgIGNhc2UgMTogcmV0dXJuIGZ1bmN0aW9uIChhKSB7XG4gICAgICByZXR1cm4gZm4uY2FsbCh0aGF0LCBhKTtcbiAgICB9O1xuICAgIGNhc2UgMjogcmV0dXJuIGZ1bmN0aW9uIChhLCBiKSB7XG4gICAgICByZXR1cm4gZm4uY2FsbCh0aGF0LCBhLCBiKTtcbiAgICB9O1xuICAgIGNhc2UgMzogcmV0dXJuIGZ1bmN0aW9uIChhLCBiLCBjKSB7XG4gICAgICByZXR1cm4gZm4uY2FsbCh0aGF0LCBhLCBiLCBjKTtcbiAgICB9O1xuICB9XG4gIHJldHVybiBmdW5jdGlvbiAoLyogLi4uYXJncyAqLykge1xuICAgIHJldHVybiBmbi5hcHBseSh0aGF0LCBhcmd1bWVudHMpO1xuICB9O1xufTtcbiIsIi8vIDcuMi4xIFJlcXVpcmVPYmplY3RDb2VyY2libGUoYXJndW1lbnQpXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICBpZiAoaXQgPT0gdW5kZWZpbmVkKSB0aHJvdyBUeXBlRXJyb3IoXCJDYW4ndCBjYWxsIG1ldGhvZCBvbiAgXCIgKyBpdCk7XG4gIHJldHVybiBpdDtcbn07XG4iLCIvLyBUaGFuaydzIElFOCBmb3IgaGlzIGZ1bm55IGRlZmluZVByb3BlcnR5XG5tb2R1bGUuZXhwb3J0cyA9ICFyZXF1aXJlKCcuL19mYWlscycpKGZ1bmN0aW9uICgpIHtcbiAgcmV0dXJuIE9iamVjdC5kZWZpbmVQcm9wZXJ0eSh7fSwgJ2EnLCB7IGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gNzsgfSB9KS5hICE9IDc7XG59KTtcbiIsInZhciBpc09iamVjdCA9IHJlcXVpcmUoJy4vX2lzLW9iamVjdCcpO1xudmFyIGRvY3VtZW50ID0gcmVxdWlyZSgnLi9fZ2xvYmFsJykuZG9jdW1lbnQ7XG4vLyB0eXBlb2YgZG9jdW1lbnQuY3JlYXRlRWxlbWVudCBpcyAnb2JqZWN0JyBpbiBvbGQgSUVcbnZhciBpcyA9IGlzT2JqZWN0KGRvY3VtZW50KSAmJiBpc09iamVjdChkb2N1bWVudC5jcmVhdGVFbGVtZW50KTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBpcyA/IGRvY3VtZW50LmNyZWF0ZUVsZW1lbnQoaXQpIDoge307XG59O1xuIiwiLy8gSUUgOC0gZG9uJ3QgZW51bSBidWcga2V5c1xubW9kdWxlLmV4cG9ydHMgPSAoXG4gICdjb25zdHJ1Y3RvcixoYXNPd25Qcm9wZXJ0eSxpc1Byb3RvdHlwZU9mLHByb3BlcnR5SXNFbnVtZXJhYmxlLHRvTG9jYWxlU3RyaW5nLHRvU3RyaW5nLHZhbHVlT2YnXG4pLnNwbGl0KCcsJyk7XG4iLCJ2YXIgZ2xvYmFsID0gcmVxdWlyZSgnLi9fZ2xvYmFsJyk7XG52YXIgY29yZSA9IHJlcXVpcmUoJy4vX2NvcmUnKTtcbnZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbnZhciBoaWRlID0gcmVxdWlyZSgnLi9faGlkZScpO1xudmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIFBST1RPVFlQRSA9ICdwcm90b3R5cGUnO1xuXG52YXIgJGV4cG9ydCA9IGZ1bmN0aW9uICh0eXBlLCBuYW1lLCBzb3VyY2UpIHtcbiAgdmFyIElTX0ZPUkNFRCA9IHR5cGUgJiAkZXhwb3J0LkY7XG4gIHZhciBJU19HTE9CQUwgPSB0eXBlICYgJGV4cG9ydC5HO1xuICB2YXIgSVNfU1RBVElDID0gdHlwZSAmICRleHBvcnQuUztcbiAgdmFyIElTX1BST1RPID0gdHlwZSAmICRleHBvcnQuUDtcbiAgdmFyIElTX0JJTkQgPSB0eXBlICYgJGV4cG9ydC5CO1xuICB2YXIgSVNfV1JBUCA9IHR5cGUgJiAkZXhwb3J0Llc7XG4gIHZhciBleHBvcnRzID0gSVNfR0xPQkFMID8gY29yZSA6IGNvcmVbbmFtZV0gfHwgKGNvcmVbbmFtZV0gPSB7fSk7XG4gIHZhciBleHBQcm90byA9IGV4cG9ydHNbUFJPVE9UWVBFXTtcbiAgdmFyIHRhcmdldCA9IElTX0dMT0JBTCA/IGdsb2JhbCA6IElTX1NUQVRJQyA/IGdsb2JhbFtuYW1lXSA6IChnbG9iYWxbbmFtZV0gfHwge30pW1BST1RPVFlQRV07XG4gIHZhciBrZXksIG93biwgb3V0O1xuICBpZiAoSVNfR0xPQkFMKSBzb3VyY2UgPSBuYW1lO1xuICBmb3IgKGtleSBpbiBzb3VyY2UpIHtcbiAgICAvLyBjb250YWlucyBpbiBuYXRpdmVcbiAgICBvd24gPSAhSVNfRk9SQ0VEICYmIHRhcmdldCAmJiB0YXJnZXRba2V5XSAhPT0gdW5kZWZpbmVkO1xuICAgIGlmIChvd24gJiYgaGFzKGV4cG9ydHMsIGtleSkpIGNvbnRpbnVlO1xuICAgIC8vIGV4cG9ydCBuYXRpdmUgb3IgcGFzc2VkXG4gICAgb3V0ID0gb3duID8gdGFyZ2V0W2tleV0gOiBzb3VyY2Vba2V5XTtcbiAgICAvLyBwcmV2ZW50IGdsb2JhbCBwb2xsdXRpb24gZm9yIG5hbWVzcGFjZXNcbiAgICBleHBvcnRzW2tleV0gPSBJU19HTE9CQUwgJiYgdHlwZW9mIHRhcmdldFtrZXldICE9ICdmdW5jdGlvbicgPyBzb3VyY2Vba2V5XVxuICAgIC8vIGJpbmQgdGltZXJzIHRvIGdsb2JhbCBmb3IgY2FsbCBmcm9tIGV4cG9ydCBjb250ZXh0XG4gICAgOiBJU19CSU5EICYmIG93biA/IGN0eChvdXQsIGdsb2JhbClcbiAgICAvLyB3cmFwIGdsb2JhbCBjb25zdHJ1Y3RvcnMgZm9yIHByZXZlbnQgY2hhbmdlIHRoZW0gaW4gbGlicmFyeVxuICAgIDogSVNfV1JBUCAmJiB0YXJnZXRba2V5XSA9PSBvdXQgPyAoZnVuY3Rpb24gKEMpIHtcbiAgICAgIHZhciBGID0gZnVuY3Rpb24gKGEsIGIsIGMpIHtcbiAgICAgICAgaWYgKHRoaXMgaW5zdGFuY2VvZiBDKSB7XG4gICAgICAgICAgc3dpdGNoIChhcmd1bWVudHMubGVuZ3RoKSB7XG4gICAgICAgICAgICBjYXNlIDA6IHJldHVybiBuZXcgQygpO1xuICAgICAgICAgICAgY2FzZSAxOiByZXR1cm4gbmV3IEMoYSk7XG4gICAgICAgICAgICBjYXNlIDI6IHJldHVybiBuZXcgQyhhLCBiKTtcbiAgICAgICAgICB9IHJldHVybiBuZXcgQyhhLCBiLCBjKTtcbiAgICAgICAgfSByZXR1cm4gQy5hcHBseSh0aGlzLCBhcmd1bWVudHMpO1xuICAgICAgfTtcbiAgICAgIEZbUFJPVE9UWVBFXSA9IENbUFJPVE9UWVBFXTtcbiAgICAgIHJldHVybiBGO1xuICAgIC8vIG1ha2Ugc3RhdGljIHZlcnNpb25zIGZvciBwcm90b3R5cGUgbWV0aG9kc1xuICAgIH0pKG91dCkgOiBJU19QUk9UTyAmJiB0eXBlb2Ygb3V0ID09ICdmdW5jdGlvbicgPyBjdHgoRnVuY3Rpb24uY2FsbCwgb3V0KSA6IG91dDtcbiAgICAvLyBleHBvcnQgcHJvdG8gbWV0aG9kcyB0byBjb3JlLiVDT05TVFJVQ1RPUiUubWV0aG9kcy4lTkFNRSVcbiAgICBpZiAoSVNfUFJPVE8pIHtcbiAgICAgIChleHBvcnRzLnZpcnR1YWwgfHwgKGV4cG9ydHMudmlydHVhbCA9IHt9KSlba2V5XSA9IG91dDtcbiAgICAgIC8vIGV4cG9ydCBwcm90byBtZXRob2RzIHRvIGNvcmUuJUNPTlNUUlVDVE9SJS5wcm90b3R5cGUuJU5BTUUlXG4gICAgICBpZiAodHlwZSAmICRleHBvcnQuUiAmJiBleHBQcm90byAmJiAhZXhwUHJvdG9ba2V5XSkgaGlkZShleHBQcm90bywga2V5LCBvdXQpO1xuICAgIH1cbiAgfVxufTtcbi8vIHR5cGUgYml0bWFwXG4kZXhwb3J0LkYgPSAxOyAgIC8vIGZvcmNlZFxuJGV4cG9ydC5HID0gMjsgICAvLyBnbG9iYWxcbiRleHBvcnQuUyA9IDQ7ICAgLy8gc3RhdGljXG4kZXhwb3J0LlAgPSA4OyAgIC8vIHByb3RvXG4kZXhwb3J0LkIgPSAxNjsgIC8vIGJpbmRcbiRleHBvcnQuVyA9IDMyOyAgLy8gd3JhcFxuJGV4cG9ydC5VID0gNjQ7ICAvLyBzYWZlXG4kZXhwb3J0LlIgPSAxMjg7IC8vIHJlYWwgcHJvdG8gbWV0aG9kIGZvciBgbGlicmFyeWBcbm1vZHVsZS5leHBvcnRzID0gJGV4cG9ydDtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGV4ZWMpIHtcbiAgdHJ5IHtcbiAgICByZXR1cm4gISFleGVjKCk7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gdHJ1ZTtcbiAgfVxufTtcbiIsIi8vIGh0dHBzOi8vZ2l0aHViLmNvbS96bG9pcm9jay9jb3JlLWpzL2lzc3Vlcy84NiNpc3N1ZWNvbW1lbnQtMTE1NzU5MDI4XG52YXIgZ2xvYmFsID0gbW9kdWxlLmV4cG9ydHMgPSB0eXBlb2Ygd2luZG93ICE9ICd1bmRlZmluZWQnICYmIHdpbmRvdy5NYXRoID09IE1hdGhcbiAgPyB3aW5kb3cgOiB0eXBlb2Ygc2VsZiAhPSAndW5kZWZpbmVkJyAmJiBzZWxmLk1hdGggPT0gTWF0aCA/IHNlbGZcbiAgLy8gZXNsaW50LWRpc2FibGUtbmV4dC1saW5lIG5vLW5ldy1mdW5jXG4gIDogRnVuY3Rpb24oJ3JldHVybiB0aGlzJykoKTtcbmlmICh0eXBlb2YgX19nID09ICdudW1iZXInKSBfX2cgPSBnbG9iYWw7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tdW5kZWZcbiIsInZhciBoYXNPd25Qcm9wZXJ0eSA9IHt9Lmhhc093blByb3BlcnR5O1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQsIGtleSkge1xuICByZXR1cm4gaGFzT3duUHJvcGVydHkuY2FsbChpdCwga2V5KTtcbn07XG4iLCJ2YXIgZFAgPSByZXF1aXJlKCcuL19vYmplY3QtZHAnKTtcbnZhciBjcmVhdGVEZXNjID0gcmVxdWlyZSgnLi9fcHJvcGVydHktZGVzYycpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpID8gZnVuY3Rpb24gKG9iamVjdCwga2V5LCB2YWx1ZSkge1xuICByZXR1cm4gZFAuZihvYmplY3QsIGtleSwgY3JlYXRlRGVzYygxLCB2YWx1ZSkpO1xufSA6IGZ1bmN0aW9uIChvYmplY3QsIGtleSwgdmFsdWUpIHtcbiAgb2JqZWN0W2tleV0gPSB2YWx1ZTtcbiAgcmV0dXJuIG9iamVjdDtcbn07XG4iLCJ2YXIgZG9jdW1lbnQgPSByZXF1aXJlKCcuL19nbG9iYWwnKS5kb2N1bWVudDtcbm1vZHVsZS5leHBvcnRzID0gZG9jdW1lbnQgJiYgZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50O1xuIiwibW9kdWxlLmV4cG9ydHMgPSAhcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSAmJiAhcmVxdWlyZSgnLi9fZmFpbHMnKShmdW5jdGlvbiAoKSB7XG4gIHJldHVybiBPYmplY3QuZGVmaW5lUHJvcGVydHkocmVxdWlyZSgnLi9fZG9tLWNyZWF0ZScpKCdkaXYnKSwgJ2EnLCB7IGdldDogZnVuY3Rpb24gKCkgeyByZXR1cm4gNzsgfSB9KS5hICE9IDc7XG59KTtcbiIsIi8vIGZhbGxiYWNrIGZvciBub24tYXJyYXktbGlrZSBFUzMgYW5kIG5vbi1lbnVtZXJhYmxlIG9sZCBWOCBzdHJpbmdzXG52YXIgY29mID0gcmVxdWlyZSgnLi9fY29mJyk7XG4vLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcHJvdG90eXBlLWJ1aWx0aW5zXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdCgneicpLnByb3BlcnR5SXNFbnVtZXJhYmxlKDApID8gT2JqZWN0IDogZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBjb2YoaXQpID09ICdTdHJpbmcnID8gaXQuc3BsaXQoJycpIDogT2JqZWN0KGl0KTtcbn07XG4iLCIvLyBjaGVjayBvbiBkZWZhdWx0IEFycmF5IGl0ZXJhdG9yXG52YXIgSXRlcmF0b3JzID0gcmVxdWlyZSgnLi9faXRlcmF0b3JzJyk7XG52YXIgSVRFUkFUT1IgPSByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKTtcbnZhciBBcnJheVByb3RvID0gQXJyYXkucHJvdG90eXBlO1xuXG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXQgIT09IHVuZGVmaW5lZCAmJiAoSXRlcmF0b3JzLkFycmF5ID09PSBpdCB8fCBBcnJheVByb3RvW0lURVJBVE9SXSA9PT0gaXQpO1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiB0eXBlb2YgaXQgPT09ICdvYmplY3QnID8gaXQgIT09IG51bGwgOiB0eXBlb2YgaXQgPT09ICdmdW5jdGlvbic7XG59O1xuIiwiLy8gY2FsbCBzb21ldGhpbmcgb24gaXRlcmF0b3Igc3RlcCB3aXRoIHNhZmUgY2xvc2luZyBvbiBlcnJvclxudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdGVyYXRvciwgZm4sIHZhbHVlLCBlbnRyaWVzKSB7XG4gIHRyeSB7XG4gICAgcmV0dXJuIGVudHJpZXMgPyBmbihhbk9iamVjdCh2YWx1ZSlbMF0sIHZhbHVlWzFdKSA6IGZuKHZhbHVlKTtcbiAgLy8gNy40LjYgSXRlcmF0b3JDbG9zZShpdGVyYXRvciwgY29tcGxldGlvbilcbiAgfSBjYXRjaCAoZSkge1xuICAgIHZhciByZXQgPSBpdGVyYXRvclsncmV0dXJuJ107XG4gICAgaWYgKHJldCAhPT0gdW5kZWZpbmVkKSBhbk9iamVjdChyZXQuY2FsbChpdGVyYXRvcikpO1xuICAgIHRocm93IGU7XG4gIH1cbn07XG4iLCIndXNlIHN0cmljdCc7XG52YXIgY3JlYXRlID0gcmVxdWlyZSgnLi9fb2JqZWN0LWNyZWF0ZScpO1xudmFyIGRlc2NyaXB0b3IgPSByZXF1aXJlKCcuL19wcm9wZXJ0eS1kZXNjJyk7XG52YXIgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuL19zZXQtdG8tc3RyaW5nLXRhZycpO1xudmFyIEl0ZXJhdG9yUHJvdG90eXBlID0ge307XG5cbi8vIDI1LjEuMi4xLjEgJUl0ZXJhdG9yUHJvdG90eXBlJVtAQGl0ZXJhdG9yXSgpXG5yZXF1aXJlKCcuL19oaWRlJykoSXRlcmF0b3JQcm90b3R5cGUsIHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpLCBmdW5jdGlvbiAoKSB7IHJldHVybiB0aGlzOyB9KTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoQ29uc3RydWN0b3IsIE5BTUUsIG5leHQpIHtcbiAgQ29uc3RydWN0b3IucHJvdG90eXBlID0gY3JlYXRlKEl0ZXJhdG9yUHJvdG90eXBlLCB7IG5leHQ6IGRlc2NyaXB0b3IoMSwgbmV4dCkgfSk7XG4gIHNldFRvU3RyaW5nVGFnKENvbnN0cnVjdG9yLCBOQU1FICsgJyBJdGVyYXRvcicpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBMSUJSQVJZID0gcmVxdWlyZSgnLi9fbGlicmFyeScpO1xudmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbnZhciByZWRlZmluZSA9IHJlcXVpcmUoJy4vX3JlZGVmaW5lJyk7XG52YXIgaGlkZSA9IHJlcXVpcmUoJy4vX2hpZGUnKTtcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbnZhciAkaXRlckNyZWF0ZSA9IHJlcXVpcmUoJy4vX2l0ZXItY3JlYXRlJyk7XG52YXIgc2V0VG9TdHJpbmdUYWcgPSByZXF1aXJlKCcuL19zZXQtdG8tc3RyaW5nLXRhZycpO1xudmFyIGdldFByb3RvdHlwZU9mID0gcmVxdWlyZSgnLi9fb2JqZWN0LWdwbycpO1xudmFyIElURVJBVE9SID0gcmVxdWlyZSgnLi9fd2tzJykoJ2l0ZXJhdG9yJyk7XG52YXIgQlVHR1kgPSAhKFtdLmtleXMgJiYgJ25leHQnIGluIFtdLmtleXMoKSk7IC8vIFNhZmFyaSBoYXMgYnVnZ3kgaXRlcmF0b3JzIHcvbyBgbmV4dGBcbnZhciBGRl9JVEVSQVRPUiA9ICdAQGl0ZXJhdG9yJztcbnZhciBLRVlTID0gJ2tleXMnO1xudmFyIFZBTFVFUyA9ICd2YWx1ZXMnO1xuXG52YXIgcmV0dXJuVGhpcyA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIHRoaXM7IH07XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKEJhc2UsIE5BTUUsIENvbnN0cnVjdG9yLCBuZXh0LCBERUZBVUxULCBJU19TRVQsIEZPUkNFRCkge1xuICAkaXRlckNyZWF0ZShDb25zdHJ1Y3RvciwgTkFNRSwgbmV4dCk7XG4gIHZhciBnZXRNZXRob2QgPSBmdW5jdGlvbiAoa2luZCkge1xuICAgIGlmICghQlVHR1kgJiYga2luZCBpbiBwcm90bykgcmV0dXJuIHByb3RvW2tpbmRdO1xuICAgIHN3aXRjaCAoa2luZCkge1xuICAgICAgY2FzZSBLRVlTOiByZXR1cm4gZnVuY3Rpb24ga2V5cygpIHsgcmV0dXJuIG5ldyBDb25zdHJ1Y3Rvcih0aGlzLCBraW5kKTsgfTtcbiAgICAgIGNhc2UgVkFMVUVTOiByZXR1cm4gZnVuY3Rpb24gdmFsdWVzKCkgeyByZXR1cm4gbmV3IENvbnN0cnVjdG9yKHRoaXMsIGtpbmQpOyB9O1xuICAgIH0gcmV0dXJuIGZ1bmN0aW9uIGVudHJpZXMoKSB7IHJldHVybiBuZXcgQ29uc3RydWN0b3IodGhpcywga2luZCk7IH07XG4gIH07XG4gIHZhciBUQUcgPSBOQU1FICsgJyBJdGVyYXRvcic7XG4gIHZhciBERUZfVkFMVUVTID0gREVGQVVMVCA9PSBWQUxVRVM7XG4gIHZhciBWQUxVRVNfQlVHID0gZmFsc2U7XG4gIHZhciBwcm90byA9IEJhc2UucHJvdG90eXBlO1xuICB2YXIgJG5hdGl2ZSA9IHByb3RvW0lURVJBVE9SXSB8fCBwcm90b1tGRl9JVEVSQVRPUl0gfHwgREVGQVVMVCAmJiBwcm90b1tERUZBVUxUXTtcbiAgdmFyICRkZWZhdWx0ID0gJG5hdGl2ZSB8fCBnZXRNZXRob2QoREVGQVVMVCk7XG4gIHZhciAkZW50cmllcyA9IERFRkFVTFQgPyAhREVGX1ZBTFVFUyA/ICRkZWZhdWx0IDogZ2V0TWV0aG9kKCdlbnRyaWVzJykgOiB1bmRlZmluZWQ7XG4gIHZhciAkYW55TmF0aXZlID0gTkFNRSA9PSAnQXJyYXknID8gcHJvdG8uZW50cmllcyB8fCAkbmF0aXZlIDogJG5hdGl2ZTtcbiAgdmFyIG1ldGhvZHMsIGtleSwgSXRlcmF0b3JQcm90b3R5cGU7XG4gIC8vIEZpeCBuYXRpdmVcbiAgaWYgKCRhbnlOYXRpdmUpIHtcbiAgICBJdGVyYXRvclByb3RvdHlwZSA9IGdldFByb3RvdHlwZU9mKCRhbnlOYXRpdmUuY2FsbChuZXcgQmFzZSgpKSk7XG4gICAgaWYgKEl0ZXJhdG9yUHJvdG90eXBlICE9PSBPYmplY3QucHJvdG90eXBlICYmIEl0ZXJhdG9yUHJvdG90eXBlLm5leHQpIHtcbiAgICAgIC8vIFNldCBAQHRvU3RyaW5nVGFnIHRvIG5hdGl2ZSBpdGVyYXRvcnNcbiAgICAgIHNldFRvU3RyaW5nVGFnKEl0ZXJhdG9yUHJvdG90eXBlLCBUQUcsIHRydWUpO1xuICAgICAgLy8gZml4IGZvciBzb21lIG9sZCBlbmdpbmVzXG4gICAgICBpZiAoIUxJQlJBUlkgJiYgdHlwZW9mIEl0ZXJhdG9yUHJvdG90eXBlW0lURVJBVE9SXSAhPSAnZnVuY3Rpb24nKSBoaWRlKEl0ZXJhdG9yUHJvdG90eXBlLCBJVEVSQVRPUiwgcmV0dXJuVGhpcyk7XG4gICAgfVxuICB9XG4gIC8vIGZpeCBBcnJheSN7dmFsdWVzLCBAQGl0ZXJhdG9yfS5uYW1lIGluIFY4IC8gRkZcbiAgaWYgKERFRl9WQUxVRVMgJiYgJG5hdGl2ZSAmJiAkbmF0aXZlLm5hbWUgIT09IFZBTFVFUykge1xuICAgIFZBTFVFU19CVUcgPSB0cnVlO1xuICAgICRkZWZhdWx0ID0gZnVuY3Rpb24gdmFsdWVzKCkgeyByZXR1cm4gJG5hdGl2ZS5jYWxsKHRoaXMpOyB9O1xuICB9XG4gIC8vIERlZmluZSBpdGVyYXRvclxuICBpZiAoKCFMSUJSQVJZIHx8IEZPUkNFRCkgJiYgKEJVR0dZIHx8IFZBTFVFU19CVUcgfHwgIXByb3RvW0lURVJBVE9SXSkpIHtcbiAgICBoaWRlKHByb3RvLCBJVEVSQVRPUiwgJGRlZmF1bHQpO1xuICB9XG4gIC8vIFBsdWcgZm9yIGxpYnJhcnlcbiAgSXRlcmF0b3JzW05BTUVdID0gJGRlZmF1bHQ7XG4gIEl0ZXJhdG9yc1tUQUddID0gcmV0dXJuVGhpcztcbiAgaWYgKERFRkFVTFQpIHtcbiAgICBtZXRob2RzID0ge1xuICAgICAgdmFsdWVzOiBERUZfVkFMVUVTID8gJGRlZmF1bHQgOiBnZXRNZXRob2QoVkFMVUVTKSxcbiAgICAgIGtleXM6IElTX1NFVCA/ICRkZWZhdWx0IDogZ2V0TWV0aG9kKEtFWVMpLFxuICAgICAgZW50cmllczogJGVudHJpZXNcbiAgICB9O1xuICAgIGlmIChGT1JDRUQpIGZvciAoa2V5IGluIG1ldGhvZHMpIHtcbiAgICAgIGlmICghKGtleSBpbiBwcm90bykpIHJlZGVmaW5lKHByb3RvLCBrZXksIG1ldGhvZHNba2V5XSk7XG4gICAgfSBlbHNlICRleHBvcnQoJGV4cG9ydC5QICsgJGV4cG9ydC5GICogKEJVR0dZIHx8IFZBTFVFU19CVUcpLCBOQU1FLCBtZXRob2RzKTtcbiAgfVxuICByZXR1cm4gbWV0aG9kcztcbn07XG4iLCJ2YXIgSVRFUkFUT1IgPSByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKTtcbnZhciBTQUZFX0NMT1NJTkcgPSBmYWxzZTtcblxudHJ5IHtcbiAgdmFyIHJpdGVyID0gWzddW0lURVJBVE9SXSgpO1xuICByaXRlclsncmV0dXJuJ10gPSBmdW5jdGlvbiAoKSB7IFNBRkVfQ0xPU0lORyA9IHRydWU7IH07XG4gIC8vIGVzbGludC1kaXNhYmxlLW5leHQtbGluZSBuby10aHJvdy1saXRlcmFsXG4gIEFycmF5LmZyb20ocml0ZXIsIGZ1bmN0aW9uICgpIHsgdGhyb3cgMjsgfSk7XG59IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZXhlYywgc2tpcENsb3NpbmcpIHtcbiAgaWYgKCFza2lwQ2xvc2luZyAmJiAhU0FGRV9DTE9TSU5HKSByZXR1cm4gZmFsc2U7XG4gIHZhciBzYWZlID0gZmFsc2U7XG4gIHRyeSB7XG4gICAgdmFyIGFyciA9IFs3XTtcbiAgICB2YXIgaXRlciA9IGFycltJVEVSQVRPUl0oKTtcbiAgICBpdGVyLm5leHQgPSBmdW5jdGlvbiAoKSB7IHJldHVybiB7IGRvbmU6IHNhZmUgPSB0cnVlIH07IH07XG4gICAgYXJyW0lURVJBVE9SXSA9IGZ1bmN0aW9uICgpIHsgcmV0dXJuIGl0ZXI7IH07XG4gICAgZXhlYyhhcnIpO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbiAgcmV0dXJuIHNhZmU7XG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoZG9uZSwgdmFsdWUpIHtcbiAgcmV0dXJuIHsgdmFsdWU6IHZhbHVlLCBkb25lOiAhIWRvbmUgfTtcbn07XG4iLCJtb2R1bGUuZXhwb3J0cyA9IHt9O1xuIiwibW9kdWxlLmV4cG9ydHMgPSB0cnVlO1xuIiwiLy8gMTkuMS4yLjIgLyAxNS4yLjMuNSBPYmplY3QuY3JlYXRlKE8gWywgUHJvcGVydGllc10pXG52YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBkUHMgPSByZXF1aXJlKCcuL19vYmplY3QtZHBzJyk7XG52YXIgZW51bUJ1Z0tleXMgPSByZXF1aXJlKCcuL19lbnVtLWJ1Zy1rZXlzJyk7XG52YXIgSUVfUFJPVE8gPSByZXF1aXJlKCcuL19zaGFyZWQta2V5JykoJ0lFX1BST1RPJyk7XG52YXIgRW1wdHkgPSBmdW5jdGlvbiAoKSB7IC8qIGVtcHR5ICovIH07XG52YXIgUFJPVE9UWVBFID0gJ3Byb3RvdHlwZSc7XG5cbi8vIENyZWF0ZSBvYmplY3Qgd2l0aCBmYWtlIGBudWxsYCBwcm90b3R5cGU6IHVzZSBpZnJhbWUgT2JqZWN0IHdpdGggY2xlYXJlZCBwcm90b3R5cGVcbnZhciBjcmVhdGVEaWN0ID0gZnVuY3Rpb24gKCkge1xuICAvLyBUaHJhc2gsIHdhc3RlIGFuZCBzb2RvbXk6IElFIEdDIGJ1Z1xuICB2YXIgaWZyYW1lID0gcmVxdWlyZSgnLi9fZG9tLWNyZWF0ZScpKCdpZnJhbWUnKTtcbiAgdmFyIGkgPSBlbnVtQnVnS2V5cy5sZW5ndGg7XG4gIHZhciBsdCA9ICc8JztcbiAgdmFyIGd0ID0gJz4nO1xuICB2YXIgaWZyYW1lRG9jdW1lbnQ7XG4gIGlmcmFtZS5zdHlsZS5kaXNwbGF5ID0gJ25vbmUnO1xuICByZXF1aXJlKCcuL19odG1sJykuYXBwZW5kQ2hpbGQoaWZyYW1lKTtcbiAgaWZyYW1lLnNyYyA9ICdqYXZhc2NyaXB0Oic7IC8vIGVzbGludC1kaXNhYmxlLWxpbmUgbm8tc2NyaXB0LXVybFxuICAvLyBjcmVhdGVEaWN0ID0gaWZyYW1lLmNvbnRlbnRXaW5kb3cuT2JqZWN0O1xuICAvLyBodG1sLnJlbW92ZUNoaWxkKGlmcmFtZSk7XG4gIGlmcmFtZURvY3VtZW50ID0gaWZyYW1lLmNvbnRlbnRXaW5kb3cuZG9jdW1lbnQ7XG4gIGlmcmFtZURvY3VtZW50Lm9wZW4oKTtcbiAgaWZyYW1lRG9jdW1lbnQud3JpdGUobHQgKyAnc2NyaXB0JyArIGd0ICsgJ2RvY3VtZW50LkY9T2JqZWN0JyArIGx0ICsgJy9zY3JpcHQnICsgZ3QpO1xuICBpZnJhbWVEb2N1bWVudC5jbG9zZSgpO1xuICBjcmVhdGVEaWN0ID0gaWZyYW1lRG9jdW1lbnQuRjtcbiAgd2hpbGUgKGktLSkgZGVsZXRlIGNyZWF0ZURpY3RbUFJPVE9UWVBFXVtlbnVtQnVnS2V5c1tpXV07XG4gIHJldHVybiBjcmVhdGVEaWN0KCk7XG59O1xuXG5tb2R1bGUuZXhwb3J0cyA9IE9iamVjdC5jcmVhdGUgfHwgZnVuY3Rpb24gY3JlYXRlKE8sIFByb3BlcnRpZXMpIHtcbiAgdmFyIHJlc3VsdDtcbiAgaWYgKE8gIT09IG51bGwpIHtcbiAgICBFbXB0eVtQUk9UT1RZUEVdID0gYW5PYmplY3QoTyk7XG4gICAgcmVzdWx0ID0gbmV3IEVtcHR5KCk7XG4gICAgRW1wdHlbUFJPVE9UWVBFXSA9IG51bGw7XG4gICAgLy8gYWRkIFwiX19wcm90b19fXCIgZm9yIE9iamVjdC5nZXRQcm90b3R5cGVPZiBwb2x5ZmlsbFxuICAgIHJlc3VsdFtJRV9QUk9UT10gPSBPO1xuICB9IGVsc2UgcmVzdWx0ID0gY3JlYXRlRGljdCgpO1xuICByZXR1cm4gUHJvcGVydGllcyA9PT0gdW5kZWZpbmVkID8gcmVzdWx0IDogZFBzKHJlc3VsdCwgUHJvcGVydGllcyk7XG59O1xuIiwidmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgSUU4X0RPTV9ERUZJTkUgPSByZXF1aXJlKCcuL19pZTgtZG9tLWRlZmluZScpO1xudmFyIHRvUHJpbWl0aXZlID0gcmVxdWlyZSgnLi9fdG8tcHJpbWl0aXZlJyk7XG52YXIgZFAgPSBPYmplY3QuZGVmaW5lUHJvcGVydHk7XG5cbmV4cG9ydHMuZiA9IHJlcXVpcmUoJy4vX2Rlc2NyaXB0b3JzJykgPyBPYmplY3QuZGVmaW5lUHJvcGVydHkgOiBmdW5jdGlvbiBkZWZpbmVQcm9wZXJ0eShPLCBQLCBBdHRyaWJ1dGVzKSB7XG4gIGFuT2JqZWN0KE8pO1xuICBQID0gdG9QcmltaXRpdmUoUCwgdHJ1ZSk7XG4gIGFuT2JqZWN0KEF0dHJpYnV0ZXMpO1xuICBpZiAoSUU4X0RPTV9ERUZJTkUpIHRyeSB7XG4gICAgcmV0dXJuIGRQKE8sIFAsIEF0dHJpYnV0ZXMpO1xuICB9IGNhdGNoIChlKSB7IC8qIGVtcHR5ICovIH1cbiAgaWYgKCdnZXQnIGluIEF0dHJpYnV0ZXMgfHwgJ3NldCcgaW4gQXR0cmlidXRlcykgdGhyb3cgVHlwZUVycm9yKCdBY2Nlc3NvcnMgbm90IHN1cHBvcnRlZCEnKTtcbiAgaWYgKCd2YWx1ZScgaW4gQXR0cmlidXRlcykgT1tQXSA9IEF0dHJpYnV0ZXMudmFsdWU7XG4gIHJldHVybiBPO1xufTtcbiIsInZhciBkUCA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpO1xudmFyIGFuT2JqZWN0ID0gcmVxdWlyZSgnLi9fYW4tb2JqZWN0Jyk7XG52YXIgZ2V0S2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fZGVzY3JpcHRvcnMnKSA/IE9iamVjdC5kZWZpbmVQcm9wZXJ0aWVzIDogZnVuY3Rpb24gZGVmaW5lUHJvcGVydGllcyhPLCBQcm9wZXJ0aWVzKSB7XG4gIGFuT2JqZWN0KE8pO1xuICB2YXIga2V5cyA9IGdldEtleXMoUHJvcGVydGllcyk7XG4gIHZhciBsZW5ndGggPSBrZXlzLmxlbmd0aDtcbiAgdmFyIGkgPSAwO1xuICB2YXIgUDtcbiAgd2hpbGUgKGxlbmd0aCA+IGkpIGRQLmYoTywgUCA9IGtleXNbaSsrXSwgUHJvcGVydGllc1tQXSk7XG4gIHJldHVybiBPO1xufTtcbiIsIi8vIDE5LjEuMi45IC8gMTUuMi4zLjIgT2JqZWN0LmdldFByb3RvdHlwZU9mKE8pXG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciBJRV9QUk9UTyA9IHJlcXVpcmUoJy4vX3NoYXJlZC1rZXknKSgnSUVfUFJPVE8nKTtcbnZhciBPYmplY3RQcm90byA9IE9iamVjdC5wcm90b3R5cGU7XG5cbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmdldFByb3RvdHlwZU9mIHx8IGZ1bmN0aW9uIChPKSB7XG4gIE8gPSB0b09iamVjdChPKTtcbiAgaWYgKGhhcyhPLCBJRV9QUk9UTykpIHJldHVybiBPW0lFX1BST1RPXTtcbiAgaWYgKHR5cGVvZiBPLmNvbnN0cnVjdG9yID09ICdmdW5jdGlvbicgJiYgTyBpbnN0YW5jZW9mIE8uY29uc3RydWN0b3IpIHtcbiAgICByZXR1cm4gTy5jb25zdHJ1Y3Rvci5wcm90b3R5cGU7XG4gIH0gcmV0dXJuIE8gaW5zdGFuY2VvZiBPYmplY3QgPyBPYmplY3RQcm90byA6IG51bGw7XG59O1xuIiwidmFyIGhhcyA9IHJlcXVpcmUoJy4vX2hhcycpO1xudmFyIHRvSU9iamVjdCA9IHJlcXVpcmUoJy4vX3RvLWlvYmplY3QnKTtcbnZhciBhcnJheUluZGV4T2YgPSByZXF1aXJlKCcuL19hcnJheS1pbmNsdWRlcycpKGZhbHNlKTtcbnZhciBJRV9QUk9UTyA9IHJlcXVpcmUoJy4vX3NoYXJlZC1rZXknKSgnSUVfUFJPVE8nKTtcblxubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAob2JqZWN0LCBuYW1lcykge1xuICB2YXIgTyA9IHRvSU9iamVjdChvYmplY3QpO1xuICB2YXIgaSA9IDA7XG4gIHZhciByZXN1bHQgPSBbXTtcbiAgdmFyIGtleTtcbiAgZm9yIChrZXkgaW4gTykgaWYgKGtleSAhPSBJRV9QUk9UTykgaGFzKE8sIGtleSkgJiYgcmVzdWx0LnB1c2goa2V5KTtcbiAgLy8gRG9uJ3QgZW51bSBidWcgJiBoaWRkZW4ga2V5c1xuICB3aGlsZSAobmFtZXMubGVuZ3RoID4gaSkgaWYgKGhhcyhPLCBrZXkgPSBuYW1lc1tpKytdKSkge1xuICAgIH5hcnJheUluZGV4T2YocmVzdWx0LCBrZXkpIHx8IHJlc3VsdC5wdXNoKGtleSk7XG4gIH1cbiAgcmV0dXJuIHJlc3VsdDtcbn07XG4iLCIvLyAxOS4xLjIuMTQgLyAxNS4yLjMuMTQgT2JqZWN0LmtleXMoTylcbnZhciAka2V5cyA9IHJlcXVpcmUoJy4vX29iamVjdC1rZXlzLWludGVybmFsJyk7XG52YXIgZW51bUJ1Z0tleXMgPSByZXF1aXJlKCcuL19lbnVtLWJ1Zy1rZXlzJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gT2JqZWN0LmtleXMgfHwgZnVuY3Rpb24ga2V5cyhPKSB7XG4gIHJldHVybiAka2V5cyhPLCBlbnVtQnVnS2V5cyk7XG59O1xuIiwibW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoYml0bWFwLCB2YWx1ZSkge1xuICByZXR1cm4ge1xuICAgIGVudW1lcmFibGU6ICEoYml0bWFwICYgMSksXG4gICAgY29uZmlndXJhYmxlOiAhKGJpdG1hcCAmIDIpLFxuICAgIHdyaXRhYmxlOiAhKGJpdG1hcCAmIDQpLFxuICAgIHZhbHVlOiB2YWx1ZVxuICB9O1xufTtcbiIsIm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9faGlkZScpO1xuIiwidmFyIGRlZiA9IHJlcXVpcmUoJy4vX29iamVjdC1kcCcpLmY7XG52YXIgaGFzID0gcmVxdWlyZSgnLi9faGFzJyk7XG52YXIgVEFHID0gcmVxdWlyZSgnLi9fd2tzJykoJ3RvU3RyaW5nVGFnJyk7XG5cbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCB0YWcsIHN0YXQpIHtcbiAgaWYgKGl0ICYmICFoYXMoaXQgPSBzdGF0ID8gaXQgOiBpdC5wcm90b3R5cGUsIFRBRykpIGRlZihpdCwgVEFHLCB7IGNvbmZpZ3VyYWJsZTogdHJ1ZSwgdmFsdWU6IHRhZyB9KTtcbn07XG4iLCJ2YXIgc2hhcmVkID0gcmVxdWlyZSgnLi9fc2hhcmVkJykoJ2tleXMnKTtcbnZhciB1aWQgPSByZXF1aXJlKCcuL191aWQnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGtleSkge1xuICByZXR1cm4gc2hhcmVkW2tleV0gfHwgKHNoYXJlZFtrZXldID0gdWlkKGtleSkpO1xufTtcbiIsInZhciBjb3JlID0gcmVxdWlyZSgnLi9fY29yZScpO1xudmFyIGdsb2JhbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpO1xudmFyIFNIQVJFRCA9ICdfX2NvcmUtanNfc2hhcmVkX18nO1xudmFyIHN0b3JlID0gZ2xvYmFsW1NIQVJFRF0gfHwgKGdsb2JhbFtTSEFSRURdID0ge30pO1xuXG4obW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5LCB2YWx1ZSkge1xuICByZXR1cm4gc3RvcmVba2V5XSB8fCAoc3RvcmVba2V5XSA9IHZhbHVlICE9PSB1bmRlZmluZWQgPyB2YWx1ZSA6IHt9KTtcbn0pKCd2ZXJzaW9ucycsIFtdKS5wdXNoKHtcbiAgdmVyc2lvbjogY29yZS52ZXJzaW9uLFxuICBtb2RlOiByZXF1aXJlKCcuL19saWJyYXJ5JykgPyAncHVyZScgOiAnZ2xvYmFsJyxcbiAgY29weXJpZ2h0OiAnwqkgMjAxOSBEZW5pcyBQdXNoa2FyZXYgKHpsb2lyb2NrLnJ1KSdcbn0pO1xuIiwidmFyIHRvSW50ZWdlciA9IHJlcXVpcmUoJy4vX3RvLWludGVnZXInKTtcbnZhciBkZWZpbmVkID0gcmVxdWlyZSgnLi9fZGVmaW5lZCcpO1xuLy8gdHJ1ZSAgLT4gU3RyaW5nI2F0XG4vLyBmYWxzZSAtPiBTdHJpbmcjY29kZVBvaW50QXRcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKFRPX1NUUklORykge1xuICByZXR1cm4gZnVuY3Rpb24gKHRoYXQsIHBvcykge1xuICAgIHZhciBzID0gU3RyaW5nKGRlZmluZWQodGhhdCkpO1xuICAgIHZhciBpID0gdG9JbnRlZ2VyKHBvcyk7XG4gICAgdmFyIGwgPSBzLmxlbmd0aDtcbiAgICB2YXIgYSwgYjtcbiAgICBpZiAoaSA8IDAgfHwgaSA+PSBsKSByZXR1cm4gVE9fU1RSSU5HID8gJycgOiB1bmRlZmluZWQ7XG4gICAgYSA9IHMuY2hhckNvZGVBdChpKTtcbiAgICByZXR1cm4gYSA8IDB4ZDgwMCB8fCBhID4gMHhkYmZmIHx8IGkgKyAxID09PSBsIHx8IChiID0gcy5jaGFyQ29kZUF0KGkgKyAxKSkgPCAweGRjMDAgfHwgYiA+IDB4ZGZmZlxuICAgICAgPyBUT19TVFJJTkcgPyBzLmNoYXJBdChpKSA6IGFcbiAgICAgIDogVE9fU1RSSU5HID8gcy5zbGljZShpLCBpICsgMikgOiAoYSAtIDB4ZDgwMCA8PCAxMCkgKyAoYiAtIDB4ZGMwMCkgKyAweDEwMDAwO1xuICB9O1xufTtcbiIsInZhciB0b0ludGVnZXIgPSByZXF1aXJlKCcuL190by1pbnRlZ2VyJyk7XG52YXIgbWF4ID0gTWF0aC5tYXg7XG52YXIgbWluID0gTWF0aC5taW47XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpbmRleCwgbGVuZ3RoKSB7XG4gIGluZGV4ID0gdG9JbnRlZ2VyKGluZGV4KTtcbiAgcmV0dXJuIGluZGV4IDwgMCA/IG1heChpbmRleCArIGxlbmd0aCwgMCkgOiBtaW4oaW5kZXgsIGxlbmd0aCk7XG59O1xuIiwiLy8gNy4xLjQgVG9JbnRlZ2VyXG52YXIgY2VpbCA9IE1hdGguY2VpbDtcbnZhciBmbG9vciA9IE1hdGguZmxvb3I7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gaXNOYU4oaXQgPSAraXQpID8gMCA6IChpdCA+IDAgPyBmbG9vciA6IGNlaWwpKGl0KTtcbn07XG4iLCIvLyB0byBpbmRleGVkIG9iamVjdCwgdG9PYmplY3Qgd2l0aCBmYWxsYmFjayBmb3Igbm9uLWFycmF5LWxpa2UgRVMzIHN0cmluZ3NcbnZhciBJT2JqZWN0ID0gcmVxdWlyZSgnLi9faW9iamVjdCcpO1xudmFyIGRlZmluZWQgPSByZXF1aXJlKCcuL19kZWZpbmVkJyk7XG5tb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChpdCkge1xuICByZXR1cm4gSU9iamVjdChkZWZpbmVkKGl0KSk7XG59O1xuIiwiLy8gNy4xLjE1IFRvTGVuZ3RoXG52YXIgdG9JbnRlZ2VyID0gcmVxdWlyZSgnLi9fdG8taW50ZWdlcicpO1xudmFyIG1pbiA9IE1hdGgubWluO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoaXQpIHtcbiAgcmV0dXJuIGl0ID4gMCA/IG1pbih0b0ludGVnZXIoaXQpLCAweDFmZmZmZmZmZmZmZmZmKSA6IDA7IC8vIHBvdygyLCA1MykgLSAxID09IDkwMDcxOTkyNTQ3NDA5OTFcbn07XG4iLCIvLyA3LjEuMTMgVG9PYmplY3QoYXJndW1lbnQpXG52YXIgZGVmaW5lZCA9IHJlcXVpcmUoJy4vX2RlZmluZWQnKTtcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0KSB7XG4gIHJldHVybiBPYmplY3QoZGVmaW5lZChpdCkpO1xufTtcbiIsIi8vIDcuMS4xIFRvUHJpbWl0aXZlKGlucHV0IFssIFByZWZlcnJlZFR5cGVdKVxudmFyIGlzT2JqZWN0ID0gcmVxdWlyZSgnLi9faXMtb2JqZWN0Jyk7XG4vLyBpbnN0ZWFkIG9mIHRoZSBFUzYgc3BlYyB2ZXJzaW9uLCB3ZSBkaWRuJ3QgaW1wbGVtZW50IEBAdG9QcmltaXRpdmUgY2FzZVxuLy8gYW5kIHRoZSBzZWNvbmQgYXJndW1lbnQgLSBmbGFnIC0gcHJlZmVycmVkIHR5cGUgaXMgYSBzdHJpbmdcbm1vZHVsZS5leHBvcnRzID0gZnVuY3Rpb24gKGl0LCBTKSB7XG4gIGlmICghaXNPYmplY3QoaXQpKSByZXR1cm4gaXQ7XG4gIHZhciBmbiwgdmFsO1xuICBpZiAoUyAmJiB0eXBlb2YgKGZuID0gaXQudG9TdHJpbmcpID09ICdmdW5jdGlvbicgJiYgIWlzT2JqZWN0KHZhbCA9IGZuLmNhbGwoaXQpKSkgcmV0dXJuIHZhbDtcbiAgaWYgKHR5cGVvZiAoZm4gPSBpdC52YWx1ZU9mKSA9PSAnZnVuY3Rpb24nICYmICFpc09iamVjdCh2YWwgPSBmbi5jYWxsKGl0KSkpIHJldHVybiB2YWw7XG4gIGlmICghUyAmJiB0eXBlb2YgKGZuID0gaXQudG9TdHJpbmcpID09ICdmdW5jdGlvbicgJiYgIWlzT2JqZWN0KHZhbCA9IGZuLmNhbGwoaXQpKSkgcmV0dXJuIHZhbDtcbiAgdGhyb3cgVHlwZUVycm9yKFwiQ2FuJ3QgY29udmVydCBvYmplY3QgdG8gcHJpbWl0aXZlIHZhbHVlXCIpO1xufTtcbiIsInZhciBpZCA9IDA7XG52YXIgcHggPSBNYXRoLnJhbmRvbSgpO1xubW9kdWxlLmV4cG9ydHMgPSBmdW5jdGlvbiAoa2V5KSB7XG4gIHJldHVybiAnU3ltYm9sKCcuY29uY2F0KGtleSA9PT0gdW5kZWZpbmVkID8gJycgOiBrZXksICcpXycsICgrK2lkICsgcHgpLnRvU3RyaW5nKDM2KSk7XG59O1xuIiwidmFyIHN0b3JlID0gcmVxdWlyZSgnLi9fc2hhcmVkJykoJ3drcycpO1xudmFyIHVpZCA9IHJlcXVpcmUoJy4vX3VpZCcpO1xudmFyIFN5bWJvbCA9IHJlcXVpcmUoJy4vX2dsb2JhbCcpLlN5bWJvbDtcbnZhciBVU0VfU1lNQk9MID0gdHlwZW9mIFN5bWJvbCA9PSAnZnVuY3Rpb24nO1xuXG52YXIgJGV4cG9ydHMgPSBtb2R1bGUuZXhwb3J0cyA9IGZ1bmN0aW9uIChuYW1lKSB7XG4gIHJldHVybiBzdG9yZVtuYW1lXSB8fCAoc3RvcmVbbmFtZV0gPVxuICAgIFVTRV9TWU1CT0wgJiYgU3ltYm9sW25hbWVdIHx8IChVU0VfU1lNQk9MID8gU3ltYm9sIDogdWlkKSgnU3ltYm9sLicgKyBuYW1lKSk7XG59O1xuXG4kZXhwb3J0cy5zdG9yZSA9IHN0b3JlO1xuIiwidmFyIGNsYXNzb2YgPSByZXF1aXJlKCcuL19jbGFzc29mJyk7XG52YXIgSVRFUkFUT1IgPSByZXF1aXJlKCcuL193a3MnKSgnaXRlcmF0b3InKTtcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9fY29yZScpLmdldEl0ZXJhdG9yTWV0aG9kID0gZnVuY3Rpb24gKGl0KSB7XG4gIGlmIChpdCAhPSB1bmRlZmluZWQpIHJldHVybiBpdFtJVEVSQVRPUl1cbiAgICB8fCBpdFsnQEBpdGVyYXRvciddXG4gICAgfHwgSXRlcmF0b3JzW2NsYXNzb2YoaXQpXTtcbn07XG4iLCJ2YXIgYW5PYmplY3QgPSByZXF1aXJlKCcuL19hbi1vYmplY3QnKTtcbnZhciBnZXQgPSByZXF1aXJlKCcuL2NvcmUuZ2V0LWl0ZXJhdG9yLW1ldGhvZCcpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19jb3JlJykuZ2V0SXRlcmF0b3IgPSBmdW5jdGlvbiAoaXQpIHtcbiAgdmFyIGl0ZXJGbiA9IGdldChpdCk7XG4gIGlmICh0eXBlb2YgaXRlckZuICE9ICdmdW5jdGlvbicpIHRocm93IFR5cGVFcnJvcihpdCArICcgaXMgbm90IGl0ZXJhYmxlIScpO1xuICByZXR1cm4gYW5PYmplY3QoaXRlckZuLmNhbGwoaXQpKTtcbn07XG4iLCJ2YXIgY2xhc3NvZiA9IHJlcXVpcmUoJy4vX2NsYXNzb2YnKTtcbnZhciBJVEVSQVRPUiA9IHJlcXVpcmUoJy4vX3drcycpKCdpdGVyYXRvcicpO1xudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xubW9kdWxlLmV4cG9ydHMgPSByZXF1aXJlKCcuL19jb3JlJykuaXNJdGVyYWJsZSA9IGZ1bmN0aW9uIChpdCkge1xuICB2YXIgTyA9IE9iamVjdChpdCk7XG4gIHJldHVybiBPW0lURVJBVE9SXSAhPT0gdW5kZWZpbmVkXG4gICAgfHwgJ0BAaXRlcmF0b3InIGluIE9cbiAgICAvLyBlc2xpbnQtZGlzYWJsZS1uZXh0LWxpbmUgbm8tcHJvdG90eXBlLWJ1aWx0aW5zXG4gICAgfHwgSXRlcmF0b3JzLmhhc093blByb3BlcnR5KGNsYXNzb2YoTykpO1xufTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciBjdHggPSByZXF1aXJlKCcuL19jdHgnKTtcbnZhciAkZXhwb3J0ID0gcmVxdWlyZSgnLi9fZXhwb3J0Jyk7XG52YXIgdG9PYmplY3QgPSByZXF1aXJlKCcuL190by1vYmplY3QnKTtcbnZhciBjYWxsID0gcmVxdWlyZSgnLi9faXRlci1jYWxsJyk7XG52YXIgaXNBcnJheUl0ZXIgPSByZXF1aXJlKCcuL19pcy1hcnJheS1pdGVyJyk7XG52YXIgdG9MZW5ndGggPSByZXF1aXJlKCcuL190by1sZW5ndGgnKTtcbnZhciBjcmVhdGVQcm9wZXJ0eSA9IHJlcXVpcmUoJy4vX2NyZWF0ZS1wcm9wZXJ0eScpO1xudmFyIGdldEl0ZXJGbiA9IHJlcXVpcmUoJy4vY29yZS5nZXQtaXRlcmF0b3ItbWV0aG9kJyk7XG5cbiRleHBvcnQoJGV4cG9ydC5TICsgJGV4cG9ydC5GICogIXJlcXVpcmUoJy4vX2l0ZXItZGV0ZWN0JykoZnVuY3Rpb24gKGl0ZXIpIHsgQXJyYXkuZnJvbShpdGVyKTsgfSksICdBcnJheScsIHtcbiAgLy8gMjIuMS4yLjEgQXJyYXkuZnJvbShhcnJheUxpa2UsIG1hcGZuID0gdW5kZWZpbmVkLCB0aGlzQXJnID0gdW5kZWZpbmVkKVxuICBmcm9tOiBmdW5jdGlvbiBmcm9tKGFycmF5TGlrZSAvKiAsIG1hcGZuID0gdW5kZWZpbmVkLCB0aGlzQXJnID0gdW5kZWZpbmVkICovKSB7XG4gICAgdmFyIE8gPSB0b09iamVjdChhcnJheUxpa2UpO1xuICAgIHZhciBDID0gdHlwZW9mIHRoaXMgPT0gJ2Z1bmN0aW9uJyA/IHRoaXMgOiBBcnJheTtcbiAgICB2YXIgYUxlbiA9IGFyZ3VtZW50cy5sZW5ndGg7XG4gICAgdmFyIG1hcGZuID0gYUxlbiA+IDEgPyBhcmd1bWVudHNbMV0gOiB1bmRlZmluZWQ7XG4gICAgdmFyIG1hcHBpbmcgPSBtYXBmbiAhPT0gdW5kZWZpbmVkO1xuICAgIHZhciBpbmRleCA9IDA7XG4gICAgdmFyIGl0ZXJGbiA9IGdldEl0ZXJGbihPKTtcbiAgICB2YXIgbGVuZ3RoLCByZXN1bHQsIHN0ZXAsIGl0ZXJhdG9yO1xuICAgIGlmIChtYXBwaW5nKSBtYXBmbiA9IGN0eChtYXBmbiwgYUxlbiA+IDIgPyBhcmd1bWVudHNbMl0gOiB1bmRlZmluZWQsIDIpO1xuICAgIC8vIGlmIG9iamVjdCBpc24ndCBpdGVyYWJsZSBvciBpdCdzIGFycmF5IHdpdGggZGVmYXVsdCBpdGVyYXRvciAtIHVzZSBzaW1wbGUgY2FzZVxuICAgIGlmIChpdGVyRm4gIT0gdW5kZWZpbmVkICYmICEoQyA9PSBBcnJheSAmJiBpc0FycmF5SXRlcihpdGVyRm4pKSkge1xuICAgICAgZm9yIChpdGVyYXRvciA9IGl0ZXJGbi5jYWxsKE8pLCByZXN1bHQgPSBuZXcgQygpOyAhKHN0ZXAgPSBpdGVyYXRvci5uZXh0KCkpLmRvbmU7IGluZGV4KyspIHtcbiAgICAgICAgY3JlYXRlUHJvcGVydHkocmVzdWx0LCBpbmRleCwgbWFwcGluZyA/IGNhbGwoaXRlcmF0b3IsIG1hcGZuLCBbc3RlcC52YWx1ZSwgaW5kZXhdLCB0cnVlKSA6IHN0ZXAudmFsdWUpO1xuICAgICAgfVxuICAgIH0gZWxzZSB7XG4gICAgICBsZW5ndGggPSB0b0xlbmd0aChPLmxlbmd0aCk7XG4gICAgICBmb3IgKHJlc3VsdCA9IG5ldyBDKGxlbmd0aCk7IGxlbmd0aCA+IGluZGV4OyBpbmRleCsrKSB7XG4gICAgICAgIGNyZWF0ZVByb3BlcnR5KHJlc3VsdCwgaW5kZXgsIG1hcHBpbmcgPyBtYXBmbihPW2luZGV4XSwgaW5kZXgpIDogT1tpbmRleF0pO1xuICAgICAgfVxuICAgIH1cbiAgICByZXN1bHQubGVuZ3RoID0gaW5kZXg7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxufSk7XG4iLCIndXNlIHN0cmljdCc7XG52YXIgYWRkVG9VbnNjb3BhYmxlcyA9IHJlcXVpcmUoJy4vX2FkZC10by11bnNjb3BhYmxlcycpO1xudmFyIHN0ZXAgPSByZXF1aXJlKCcuL19pdGVyLXN0ZXAnKTtcbnZhciBJdGVyYXRvcnMgPSByZXF1aXJlKCcuL19pdGVyYXRvcnMnKTtcbnZhciB0b0lPYmplY3QgPSByZXF1aXJlKCcuL190by1pb2JqZWN0Jyk7XG5cbi8vIDIyLjEuMy40IEFycmF5LnByb3RvdHlwZS5lbnRyaWVzKClcbi8vIDIyLjEuMy4xMyBBcnJheS5wcm90b3R5cGUua2V5cygpXG4vLyAyMi4xLjMuMjkgQXJyYXkucHJvdG90eXBlLnZhbHVlcygpXG4vLyAyMi4xLjMuMzAgQXJyYXkucHJvdG90eXBlW0BAaXRlcmF0b3JdKClcbm1vZHVsZS5leHBvcnRzID0gcmVxdWlyZSgnLi9faXRlci1kZWZpbmUnKShBcnJheSwgJ0FycmF5JywgZnVuY3Rpb24gKGl0ZXJhdGVkLCBraW5kKSB7XG4gIHRoaXMuX3QgPSB0b0lPYmplY3QoaXRlcmF0ZWQpOyAvLyB0YXJnZXRcbiAgdGhpcy5faSA9IDA7ICAgICAgICAgICAgICAgICAgIC8vIG5leHQgaW5kZXhcbiAgdGhpcy5fayA9IGtpbmQ7ICAgICAgICAgICAgICAgIC8vIGtpbmRcbi8vIDIyLjEuNS4yLjEgJUFycmF5SXRlcmF0b3JQcm90b3R5cGUlLm5leHQoKVxufSwgZnVuY3Rpb24gKCkge1xuICB2YXIgTyA9IHRoaXMuX3Q7XG4gIHZhciBraW5kID0gdGhpcy5faztcbiAgdmFyIGluZGV4ID0gdGhpcy5faSsrO1xuICBpZiAoIU8gfHwgaW5kZXggPj0gTy5sZW5ndGgpIHtcbiAgICB0aGlzLl90ID0gdW5kZWZpbmVkO1xuICAgIHJldHVybiBzdGVwKDEpO1xuICB9XG4gIGlmIChraW5kID09ICdrZXlzJykgcmV0dXJuIHN0ZXAoMCwgaW5kZXgpO1xuICBpZiAoa2luZCA9PSAndmFsdWVzJykgcmV0dXJuIHN0ZXAoMCwgT1tpbmRleF0pO1xuICByZXR1cm4gc3RlcCgwLCBbaW5kZXgsIE9baW5kZXhdXSk7XG59LCAndmFsdWVzJyk7XG5cbi8vIGFyZ3VtZW50c0xpc3RbQEBpdGVyYXRvcl0gaXMgJUFycmF5UHJvdG9fdmFsdWVzJSAoOS40LjQuNiwgOS40LjQuNylcbkl0ZXJhdG9ycy5Bcmd1bWVudHMgPSBJdGVyYXRvcnMuQXJyYXk7XG5cbmFkZFRvVW5zY29wYWJsZXMoJ2tleXMnKTtcbmFkZFRvVW5zY29wYWJsZXMoJ3ZhbHVlcycpO1xuYWRkVG9VbnNjb3BhYmxlcygnZW50cmllcycpO1xuIiwidmFyICRleHBvcnQgPSByZXF1aXJlKCcuL19leHBvcnQnKTtcbi8vIDE5LjEuMi40IC8gMTUuMi4zLjYgT2JqZWN0LmRlZmluZVByb3BlcnR5KE8sIFAsIEF0dHJpYnV0ZXMpXG4kZXhwb3J0KCRleHBvcnQuUyArICRleHBvcnQuRiAqICFyZXF1aXJlKCcuL19kZXNjcmlwdG9ycycpLCAnT2JqZWN0JywgeyBkZWZpbmVQcm9wZXJ0eTogcmVxdWlyZSgnLi9fb2JqZWN0LWRwJykuZiB9KTtcbiIsIid1c2Ugc3RyaWN0JztcbnZhciAkYXQgPSByZXF1aXJlKCcuL19zdHJpbmctYXQnKSh0cnVlKTtcblxuLy8gMjEuMS4zLjI3IFN0cmluZy5wcm90b3R5cGVbQEBpdGVyYXRvcl0oKVxucmVxdWlyZSgnLi9faXRlci1kZWZpbmUnKShTdHJpbmcsICdTdHJpbmcnLCBmdW5jdGlvbiAoaXRlcmF0ZWQpIHtcbiAgdGhpcy5fdCA9IFN0cmluZyhpdGVyYXRlZCk7IC8vIHRhcmdldFxuICB0aGlzLl9pID0gMDsgICAgICAgICAgICAgICAgLy8gbmV4dCBpbmRleFxuLy8gMjEuMS41LjIuMSAlU3RyaW5nSXRlcmF0b3JQcm90b3R5cGUlLm5leHQoKVxufSwgZnVuY3Rpb24gKCkge1xuICB2YXIgTyA9IHRoaXMuX3Q7XG4gIHZhciBpbmRleCA9IHRoaXMuX2k7XG4gIHZhciBwb2ludDtcbiAgaWYgKGluZGV4ID49IE8ubGVuZ3RoKSByZXR1cm4geyB2YWx1ZTogdW5kZWZpbmVkLCBkb25lOiB0cnVlIH07XG4gIHBvaW50ID0gJGF0KE8sIGluZGV4KTtcbiAgdGhpcy5faSArPSBwb2ludC5sZW5ndGg7XG4gIHJldHVybiB7IHZhbHVlOiBwb2ludCwgZG9uZTogZmFsc2UgfTtcbn0pO1xuIiwicmVxdWlyZSgnLi9lczYuYXJyYXkuaXRlcmF0b3InKTtcbnZhciBnbG9iYWwgPSByZXF1aXJlKCcuL19nbG9iYWwnKTtcbnZhciBoaWRlID0gcmVxdWlyZSgnLi9faGlkZScpO1xudmFyIEl0ZXJhdG9ycyA9IHJlcXVpcmUoJy4vX2l0ZXJhdG9ycycpO1xudmFyIFRPX1NUUklOR19UQUcgPSByZXF1aXJlKCcuL193a3MnKSgndG9TdHJpbmdUYWcnKTtcblxudmFyIERPTUl0ZXJhYmxlcyA9ICgnQ1NTUnVsZUxpc3QsQ1NTU3R5bGVEZWNsYXJhdGlvbixDU1NWYWx1ZUxpc3QsQ2xpZW50UmVjdExpc3QsRE9NUmVjdExpc3QsRE9NU3RyaW5nTGlzdCwnICtcbiAgJ0RPTVRva2VuTGlzdCxEYXRhVHJhbnNmZXJJdGVtTGlzdCxGaWxlTGlzdCxIVE1MQWxsQ29sbGVjdGlvbixIVE1MQ29sbGVjdGlvbixIVE1MRm9ybUVsZW1lbnQsSFRNTFNlbGVjdEVsZW1lbnQsJyArXG4gICdNZWRpYUxpc3QsTWltZVR5cGVBcnJheSxOYW1lZE5vZGVNYXAsTm9kZUxpc3QsUGFpbnRSZXF1ZXN0TGlzdCxQbHVnaW4sUGx1Z2luQXJyYXksU1ZHTGVuZ3RoTGlzdCxTVkdOdW1iZXJMaXN0LCcgK1xuICAnU1ZHUGF0aFNlZ0xpc3QsU1ZHUG9pbnRMaXN0LFNWR1N0cmluZ0xpc3QsU1ZHVHJhbnNmb3JtTGlzdCxTb3VyY2VCdWZmZXJMaXN0LFN0eWxlU2hlZXRMaXN0LFRleHRUcmFja0N1ZUxpc3QsJyArXG4gICdUZXh0VHJhY2tMaXN0LFRvdWNoTGlzdCcpLnNwbGl0KCcsJyk7XG5cbmZvciAodmFyIGkgPSAwOyBpIDwgRE9NSXRlcmFibGVzLmxlbmd0aDsgaSsrKSB7XG4gIHZhciBOQU1FID0gRE9NSXRlcmFibGVzW2ldO1xuICB2YXIgQ29sbGVjdGlvbiA9IGdsb2JhbFtOQU1FXTtcbiAgdmFyIHByb3RvID0gQ29sbGVjdGlvbiAmJiBDb2xsZWN0aW9uLnByb3RvdHlwZTtcbiAgaWYgKHByb3RvICYmICFwcm90b1tUT19TVFJJTkdfVEFHXSkgaGlkZShwcm90bywgVE9fU1RSSU5HX1RBRywgTkFNRSk7XG4gIEl0ZXJhdG9yc1tOQU1FXSA9IEl0ZXJhdG9ycy5BcnJheTtcbn1cbiIsIi8qISBqcXVlcnkudGFibGVkbmQuanMgMzAtMTItMjAxNyAqL1xuIWZ1bmN0aW9uKGEsYixjLGQpe3ZhciBlPVwidG91Y2hzdGFydCBtb3VzZWRvd25cIixmPVwidG91Y2htb3ZlIG1vdXNlbW92ZVwiLGc9XCJ0b3VjaGVuZCBtb3VzZXVwXCI7YShjKS5yZWFkeShmdW5jdGlvbigpe2Z1bmN0aW9uIGIoYSl7Zm9yKHZhciBiPXt9LGM9YS5tYXRjaCgvKFteOzpdKykvZyl8fFtdO2MubGVuZ3RoOyliW2Muc2hpZnQoKV09Yy5zaGlmdCgpLnRyaW0oKTtyZXR1cm4gYn1hKFwidGFibGVcIikuZWFjaChmdW5jdGlvbigpe1wiZG5kXCI9PT1hKHRoaXMpLmRhdGEoXCJ0YWJsZVwiKSYmYSh0aGlzKS50YWJsZURuRCh7b25EcmFnU3R5bGU6YSh0aGlzKS5kYXRhKFwib25kcmFnc3R5bGVcIikmJmIoYSh0aGlzKS5kYXRhKFwib25kcmFnc3R5bGVcIikpfHxudWxsLG9uRHJvcFN0eWxlOmEodGhpcykuZGF0YShcIm9uZHJvcHN0eWxlXCIpJiZiKGEodGhpcykuZGF0YShcIm9uZHJvcHN0eWxlXCIpKXx8bnVsbCxvbkRyYWdDbGFzczphKHRoaXMpLmRhdGEoXCJvbmRyYWdjbGFzc1wiKT09PWQmJlwidERuRF93aGlsZURyYWdcInx8YSh0aGlzKS5kYXRhKFwib25kcmFnY2xhc3NcIiksb25Ecm9wOmEodGhpcykuZGF0YShcIm9uZHJvcFwiKSYmbmV3IEZ1bmN0aW9uKFwidGFibGVcIixcInJvd1wiLGEodGhpcykuZGF0YShcIm9uZHJvcFwiKSksb25EcmFnU3RhcnQ6YSh0aGlzKS5kYXRhKFwib25kcmFnc3RhcnRcIikmJm5ldyBGdW5jdGlvbihcInRhYmxlXCIsXCJyb3dcIixhKHRoaXMpLmRhdGEoXCJvbmRyYWdzdGFydFwiKSksb25EcmFnU3RvcDphKHRoaXMpLmRhdGEoXCJvbmRyYWdzdG9wXCIpJiZuZXcgRnVuY3Rpb24oXCJ0YWJsZVwiLFwicm93XCIsYSh0aGlzKS5kYXRhKFwib25kcmFnc3RvcFwiKSksc2Nyb2xsQW1vdW50OmEodGhpcykuZGF0YShcInNjcm9sbGFtb3VudFwiKXx8NSxzZW5zaXRpdml0eTphKHRoaXMpLmRhdGEoXCJzZW5zaXRpdml0eVwiKXx8MTAsaGllcmFyY2h5TGV2ZWw6YSh0aGlzKS5kYXRhKFwiaGllcmFyY2h5bGV2ZWxcIil8fDAsaW5kZW50QXJ0aWZhY3Q6YSh0aGlzKS5kYXRhKFwiaW5kZW50YXJ0aWZhY3RcIil8fCc8ZGl2IGNsYXNzPVwiaW5kZW50XCI+Jm5ic3A7PC9kaXY+JyxhdXRvV2lkdGhBZGp1c3Q6YSh0aGlzKS5kYXRhKFwiYXV0b3dpZHRoYWRqdXN0XCIpfHwhMCxhdXRvQ2xlYW5SZWxhdGlvbnM6YSh0aGlzKS5kYXRhKFwiYXV0b2NsZWFucmVsYXRpb25zXCIpfHwhMCxqc29uUHJldGlmeVNlcGFyYXRvcjphKHRoaXMpLmRhdGEoXCJqc29ucHJldGlmeXNlcGFyYXRvclwiKXx8XCJcXHRcIixzZXJpYWxpemVSZWdleHA6YSh0aGlzKS5kYXRhKFwic2VyaWFsaXplcmVnZXhwXCIpJiZuZXcgUmVnRXhwKGEodGhpcykuZGF0YShcInNlcmlhbGl6ZXJlZ2V4cFwiKSl8fC9bXlxcLV0qJC8sc2VyaWFsaXplUGFyYW1OYW1lOmEodGhpcykuZGF0YShcInNlcmlhbGl6ZXBhcmFtbmFtZVwiKXx8ITEsZHJhZ0hhbmRsZTphKHRoaXMpLmRhdGEoXCJkcmFnaGFuZGxlXCIpfHxudWxsfSl9KX0pLGpRdWVyeS50YWJsZURuRD17Y3VycmVudFRhYmxlOm51bGwsZHJhZ09iamVjdDpudWxsLG1vdXNlT2Zmc2V0Om51bGwsb2xkWDowLG9sZFk6MCxidWlsZDpmdW5jdGlvbihiKXtyZXR1cm4gdGhpcy5lYWNoKGZ1bmN0aW9uKCl7dGhpcy50YWJsZURuRENvbmZpZz1hLmV4dGVuZCh7b25EcmFnU3R5bGU6bnVsbCxvbkRyb3BTdHlsZTpudWxsLG9uRHJhZ0NsYXNzOlwidERuRF93aGlsZURyYWdcIixvbkRyb3A6bnVsbCxvbkRyYWdTdGFydDpudWxsLG9uRHJhZ1N0b3A6bnVsbCxzY3JvbGxBbW91bnQ6NSxzZW5zaXRpdml0eToxMCxoaWVyYXJjaHlMZXZlbDowLGluZGVudEFydGlmYWN0Oic8ZGl2IGNsYXNzPVwiaW5kZW50XCI+Jm5ic3A7PC9kaXY+JyxhdXRvV2lkdGhBZGp1c3Q6ITAsYXV0b0NsZWFuUmVsYXRpb25zOiEwLGpzb25QcmV0aWZ5U2VwYXJhdG9yOlwiXFx0XCIsc2VyaWFsaXplUmVnZXhwOi9bXlxcLV0qJC8sc2VyaWFsaXplUGFyYW1OYW1lOiExLGRyYWdIYW5kbGU6bnVsbH0sYnx8e30pLGEudGFibGVEbkQubWFrZURyYWdnYWJsZSh0aGlzKSx0aGlzLnRhYmxlRG5EQ29uZmlnLmhpZXJhcmNoeUxldmVsJiZhLnRhYmxlRG5ELm1ha2VJbmRlbnRlZCh0aGlzKX0pLHRoaXN9LG1ha2VJbmRlbnRlZDpmdW5jdGlvbihiKXt2YXIgYyxkLGU9Yi50YWJsZURuRENvbmZpZyxmPWIucm93cyxnPWEoZikuZmlyc3QoKS5maW5kKFwidGQ6Zmlyc3RcIilbMF0saD0wLGk9MDtpZihhKGIpLmhhc0NsYXNzKFwiaW5kdGRcIikpcmV0dXJuIG51bGw7ZD1hKGIpLmFkZENsYXNzKFwiaW5kdGRcIikuYXR0cihcInN0eWxlXCIpLGEoYikuY3NzKHt3aGl0ZVNwYWNlOlwibm93cmFwXCJ9KTtmb3IodmFyIGo9MDtqPGYubGVuZ3RoO2orKylpPGEoZltqXSkuZmluZChcInRkOmZpcnN0XCIpLnRleHQoKS5sZW5ndGgmJihpPWEoZltqXSkuZmluZChcInRkOmZpcnN0XCIpLnRleHQoKS5sZW5ndGgsYz1qKTtmb3IoYShnKS5jc3Moe3dpZHRoOlwiYXV0b1wifSksaj0wO2o8ZS5oaWVyYXJjaHlMZXZlbDtqKyspYShmW2NdKS5maW5kKFwidGQ6Zmlyc3RcIikucHJlcGVuZChlLmluZGVudEFydGlmYWN0KTtmb3IoZyYmYShnKS5jc3Moe3dpZHRoOmcub2Zmc2V0V2lkdGh9KSxkJiZhKGIpLmNzcyhkKSxqPTA7ajxlLmhpZXJhcmNoeUxldmVsO2orKylhKGZbY10pLmZpbmQoXCJ0ZDpmaXJzdFwiKS5jaGlsZHJlbihcIjpmaXJzdFwiKS5yZW1vdmUoKTtyZXR1cm4gZS5oaWVyYXJjaHlMZXZlbCYmYShmKS5lYWNoKGZ1bmN0aW9uKCl7KGg9YSh0aGlzKS5kYXRhKFwibGV2ZWxcIil8fDApPD1lLmhpZXJhcmNoeUxldmVsJiZhKHRoaXMpLmRhdGEoXCJsZXZlbFwiLGgpfHxhKHRoaXMpLmRhdGEoXCJsZXZlbFwiLDApO2Zvcih2YXIgYj0wO2I8YSh0aGlzKS5kYXRhKFwibGV2ZWxcIik7YisrKWEodGhpcykuZmluZChcInRkOmZpcnN0XCIpLnByZXBlbmQoZS5pbmRlbnRBcnRpZmFjdCl9KSx0aGlzfSxtYWtlRHJhZ2dhYmxlOmZ1bmN0aW9uKGIpe3ZhciBjPWIudGFibGVEbkRDb25maWc7Yy5kcmFnSGFuZGxlJiZhKGMuZHJhZ0hhbmRsZSxiKS5lYWNoKGZ1bmN0aW9uKCl7YSh0aGlzKS5iaW5kKGUsZnVuY3Rpb24oZCl7cmV0dXJuIGEudGFibGVEbkQuaW5pdGlhbGlzZURyYWcoYSh0aGlzKS5wYXJlbnRzKFwidHJcIilbMF0sYix0aGlzLGQsYyksITF9KX0pfHxhKGIucm93cykuZWFjaChmdW5jdGlvbigpe2EodGhpcykuaGFzQ2xhc3MoXCJub2RyYWdcIik/YSh0aGlzKS5jc3MoXCJjdXJzb3JcIixcIlwiKTphKHRoaXMpLmJpbmQoZSxmdW5jdGlvbihkKXtpZihcIlREXCI9PT1kLnRhcmdldC50YWdOYW1lKXJldHVybiBhLnRhYmxlRG5ELmluaXRpYWxpc2VEcmFnKHRoaXMsYix0aGlzLGQsYyksITF9KS5jc3MoXCJjdXJzb3JcIixcIm1vdmVcIil9KX0sY3VycmVudE9yZGVyOmZ1bmN0aW9uKCl7dmFyIGI9dGhpcy5jdXJyZW50VGFibGUucm93cztyZXR1cm4gYS5tYXAoYixmdW5jdGlvbihiKXtyZXR1cm4oYShiKS5kYXRhKFwibGV2ZWxcIikrYi5pZCkucmVwbGFjZSgvXFxzL2csXCJcIil9KS5qb2luKFwiXCIpfSxpbml0aWFsaXNlRHJhZzpmdW5jdGlvbihiLGQsZSxoLGkpe3RoaXMuZHJhZ09iamVjdD1iLHRoaXMuY3VycmVudFRhYmxlPWQsdGhpcy5tb3VzZU9mZnNldD10aGlzLmdldE1vdXNlT2Zmc2V0KGUsaCksdGhpcy5vcmlnaW5hbE9yZGVyPXRoaXMuY3VycmVudE9yZGVyKCksYShjKS5iaW5kKGYsdGhpcy5tb3VzZW1vdmUpLmJpbmQoZyx0aGlzLm1vdXNldXApLGkub25EcmFnU3RhcnQmJmkub25EcmFnU3RhcnQoZCxlKX0sdXBkYXRlVGFibGVzOmZ1bmN0aW9uKCl7dGhpcy5lYWNoKGZ1bmN0aW9uKCl7dGhpcy50YWJsZURuRENvbmZpZyYmYS50YWJsZURuRC5tYWtlRHJhZ2dhYmxlKHRoaXMpfSl9LG1vdXNlQ29vcmRzOmZ1bmN0aW9uKGEpe3JldHVybiBhLm9yaWdpbmFsRXZlbnQuY2hhbmdlZFRvdWNoZXM/e3g6YS5vcmlnaW5hbEV2ZW50LmNoYW5nZWRUb3VjaGVzWzBdLmNsaWVudFgseTphLm9yaWdpbmFsRXZlbnQuY2hhbmdlZFRvdWNoZXNbMF0uY2xpZW50WX06YS5wYWdlWHx8YS5wYWdlWT97eDphLnBhZ2VYLHk6YS5wYWdlWX06e3g6YS5jbGllbnRYK2MuYm9keS5zY3JvbGxMZWZ0LWMuYm9keS5jbGllbnRMZWZ0LHk6YS5jbGllbnRZK2MuYm9keS5zY3JvbGxUb3AtYy5ib2R5LmNsaWVudFRvcH19LGdldE1vdXNlT2Zmc2V0OmZ1bmN0aW9uKGEsYyl7dmFyIGQsZTtyZXR1cm4gYz1jfHxiLmV2ZW50LGU9dGhpcy5nZXRQb3NpdGlvbihhKSxkPXRoaXMubW91c2VDb29yZHMoYykse3g6ZC54LWUueCx5OmQueS1lLnl9fSxnZXRQb3NpdGlvbjpmdW5jdGlvbihhKXt2YXIgYj0wLGM9MDtmb3IoMD09PWEub2Zmc2V0SGVpZ2h0JiYoYT1hLmZpcnN0Q2hpbGQpO2Eub2Zmc2V0UGFyZW50OyliKz1hLm9mZnNldExlZnQsYys9YS5vZmZzZXRUb3AsYT1hLm9mZnNldFBhcmVudDtyZXR1cm4gYis9YS5vZmZzZXRMZWZ0LGMrPWEub2Zmc2V0VG9wLHt4OmIseTpjfX0sYXV0b1Njcm9sbDpmdW5jdGlvbihhKXt2YXIgZD10aGlzLmN1cnJlbnRUYWJsZS50YWJsZURuRENvbmZpZyxlPWIucGFnZVlPZmZzZXQsZj1iLmlubmVySGVpZ2h0P2IuaW5uZXJIZWlnaHQ6Yy5kb2N1bWVudEVsZW1lbnQuY2xpZW50SGVpZ2h0P2MuZG9jdW1lbnRFbGVtZW50LmNsaWVudEhlaWdodDpjLmJvZHkuY2xpZW50SGVpZ2h0O2MuYWxsJiYodm9pZCAwIT09Yy5jb21wYXRNb2RlJiZcIkJhY2tDb21wYXRcIiE9PWMuY29tcGF0TW9kZT9lPWMuZG9jdW1lbnRFbGVtZW50LnNjcm9sbFRvcDp2b2lkIDAhPT1jLmJvZHkmJihlPWMuYm9keS5zY3JvbGxUb3ApKSxhLnktZTxkLnNjcm9sbEFtb3VudCYmYi5zY3JvbGxCeSgwLC1kLnNjcm9sbEFtb3VudCl8fGYtKGEueS1lKTxkLnNjcm9sbEFtb3VudCYmYi5zY3JvbGxCeSgwLGQuc2Nyb2xsQW1vdW50KX0sbW92ZVZlcnRpY2xlOmZ1bmN0aW9uKGEsYil7MCE9PWEudmVydGljYWwmJmImJnRoaXMuZHJhZ09iamVjdCE9PWImJnRoaXMuZHJhZ09iamVjdC5wYXJlbnROb2RlPT09Yi5wYXJlbnROb2RlJiYoMD5hLnZlcnRpY2FsJiZ0aGlzLmRyYWdPYmplY3QucGFyZW50Tm9kZS5pbnNlcnRCZWZvcmUodGhpcy5kcmFnT2JqZWN0LGIubmV4dFNpYmxpbmcpfHwwPGEudmVydGljYWwmJnRoaXMuZHJhZ09iamVjdC5wYXJlbnROb2RlLmluc2VydEJlZm9yZSh0aGlzLmRyYWdPYmplY3QsYikpfSxtb3ZlSG9yaXpvbnRhbDpmdW5jdGlvbihiLGMpe3ZhciBkLGU9dGhpcy5jdXJyZW50VGFibGUudGFibGVEbkRDb25maWc7aWYoIWUuaGllcmFyY2h5TGV2ZWx8fDA9PT1iLmhvcml6b250YWx8fCFjfHx0aGlzLmRyYWdPYmplY3QhPT1jKXJldHVybiBudWxsO2Q9YShjKS5kYXRhKFwibGV2ZWxcIiksMDxiLmhvcml6b250YWwmJmQ+MCYmYShjKS5maW5kKFwidGQ6Zmlyc3RcIikuY2hpbGRyZW4oXCI6Zmlyc3RcIikucmVtb3ZlKCkmJmEoYykuZGF0YShcImxldmVsXCIsLS1kKSwwPmIuaG9yaXpvbnRhbCYmZDxlLmhpZXJhcmNoeUxldmVsJiZhKGMpLnByZXYoKS5kYXRhKFwibGV2ZWxcIik+PWQmJmEoYykuY2hpbGRyZW4oXCI6Zmlyc3RcIikucHJlcGVuZChlLmluZGVudEFydGlmYWN0KSYmYShjKS5kYXRhKFwibGV2ZWxcIiwrK2QpfSxtb3VzZW1vdmU6ZnVuY3Rpb24oYil7dmFyIGMsZCxlLGYsZyxoPWEoYS50YWJsZURuRC5kcmFnT2JqZWN0KSxpPWEudGFibGVEbkQuY3VycmVudFRhYmxlLnRhYmxlRG5EQ29uZmlnO3JldHVybiBiJiZiLnByZXZlbnREZWZhdWx0KCksISFhLnRhYmxlRG5ELmRyYWdPYmplY3QmJihcInRvdWNobW92ZVwiPT09Yi50eXBlJiZldmVudC5wcmV2ZW50RGVmYXVsdCgpLGkub25EcmFnQ2xhc3MmJmguYWRkQ2xhc3MoaS5vbkRyYWdDbGFzcyl8fGguY3NzKGkub25EcmFnU3R5bGUpLGQ9YS50YWJsZURuRC5tb3VzZUNvb3JkcyhiKSxmPWQueC1hLnRhYmxlRG5ELm1vdXNlT2Zmc2V0LngsZz1kLnktYS50YWJsZURuRC5tb3VzZU9mZnNldC55LGEudGFibGVEbkQuYXV0b1Njcm9sbChkKSxjPWEudGFibGVEbkQuZmluZERyb3BUYXJnZXRSb3coaCxnKSxlPWEudGFibGVEbkQuZmluZERyYWdEaXJlY3Rpb24oZixnKSxhLnRhYmxlRG5ELm1vdmVWZXJ0aWNsZShlLGMpLGEudGFibGVEbkQubW92ZUhvcml6b250YWwoZSxjKSwhMSl9LGZpbmREcmFnRGlyZWN0aW9uOmZ1bmN0aW9uKGEsYil7dmFyIGM9dGhpcy5jdXJyZW50VGFibGUudGFibGVEbkRDb25maWcuc2Vuc2l0aXZpdHksZD10aGlzLm9sZFgsZT10aGlzLm9sZFksZj1kLWMsZz1kK2MsaD1lLWMsaT1lK2Msaj17aG9yaXpvbnRhbDphPj1mJiZhPD1nPzA6YT5kPy0xOjEsdmVydGljYWw6Yj49aCYmYjw9aT8wOmI+ZT8tMToxfTtyZXR1cm4gMCE9PWouaG9yaXpvbnRhbCYmKHRoaXMub2xkWD1hKSwwIT09ai52ZXJ0aWNhbCYmKHRoaXMub2xkWT1iKSxqfSxmaW5kRHJvcFRhcmdldFJvdzpmdW5jdGlvbihiLGMpe2Zvcih2YXIgZD0wLGU9dGhpcy5jdXJyZW50VGFibGUucm93cyxmPXRoaXMuY3VycmVudFRhYmxlLnRhYmxlRG5EQ29uZmlnLGc9MCxoPW51bGwsaT0wO2k8ZS5sZW5ndGg7aSsrKWlmKGg9ZVtpXSxnPXRoaXMuZ2V0UG9zaXRpb24oaCkueSxkPXBhcnNlSW50KGgub2Zmc2V0SGVpZ2h0KS8yLDA9PT1oLm9mZnNldEhlaWdodCYmKGc9dGhpcy5nZXRQb3NpdGlvbihoLmZpcnN0Q2hpbGQpLnksZD1wYXJzZUludChoLmZpcnN0Q2hpbGQub2Zmc2V0SGVpZ2h0KS8yKSxjPmctZCYmYzxnK2QpcmV0dXJuIGIuaXMoaCl8fGYub25BbGxvd0Ryb3AmJiFmLm9uQWxsb3dEcm9wKGIsaCl8fGEoaCkuaGFzQ2xhc3MoXCJub2Ryb3BcIik/bnVsbDpoO3JldHVybiBudWxsfSxwcm9jZXNzTW91c2V1cDpmdW5jdGlvbigpe2lmKCF0aGlzLmN1cnJlbnRUYWJsZXx8IXRoaXMuZHJhZ09iamVjdClyZXR1cm4gbnVsbDt2YXIgYj10aGlzLmN1cnJlbnRUYWJsZS50YWJsZURuRENvbmZpZyxkPXRoaXMuZHJhZ09iamVjdCxlPTAsaD0wO2EoYykudW5iaW5kKGYsdGhpcy5tb3VzZW1vdmUpLnVuYmluZChnLHRoaXMubW91c2V1cCksYi5oaWVyYXJjaHlMZXZlbCYmYi5hdXRvQ2xlYW5SZWxhdGlvbnMmJmEodGhpcy5jdXJyZW50VGFibGUucm93cykuZmlyc3QoKS5maW5kKFwidGQ6Zmlyc3RcIikuY2hpbGRyZW4oKS5lYWNoKGZ1bmN0aW9uKCl7KGg9YSh0aGlzKS5wYXJlbnRzKFwidHI6Zmlyc3RcIikuZGF0YShcImxldmVsXCIpKSYmYSh0aGlzKS5wYXJlbnRzKFwidHI6Zmlyc3RcIikuZGF0YShcImxldmVsXCIsLS1oKSYmYSh0aGlzKS5yZW1vdmUoKX0pJiZiLmhpZXJhcmNoeUxldmVsPjEmJmEodGhpcy5jdXJyZW50VGFibGUucm93cykuZWFjaChmdW5jdGlvbigpe2lmKChoPWEodGhpcykuZGF0YShcImxldmVsXCIpKT4xKWZvcihlPWEodGhpcykucHJldigpLmRhdGEoXCJsZXZlbFwiKTtoPmUrMTspYSh0aGlzKS5maW5kKFwidGQ6Zmlyc3RcIikuY2hpbGRyZW4oXCI6Zmlyc3RcIikucmVtb3ZlKCksYSh0aGlzKS5kYXRhKFwibGV2ZWxcIiwtLWgpfSksYi5vbkRyYWdDbGFzcyYmYShkKS5yZW1vdmVDbGFzcyhiLm9uRHJhZ0NsYXNzKXx8YShkKS5jc3MoYi5vbkRyb3BTdHlsZSksdGhpcy5kcmFnT2JqZWN0PW51bGwsYi5vbkRyb3AmJnRoaXMub3JpZ2luYWxPcmRlciE9PXRoaXMuY3VycmVudE9yZGVyKCkmJmEoZCkuaGlkZSgpLmZhZGVJbihcImZhc3RcIikmJmIub25Ecm9wKHRoaXMuY3VycmVudFRhYmxlLGQpLGIub25EcmFnU3RvcCYmYi5vbkRyYWdTdG9wKHRoaXMuY3VycmVudFRhYmxlLGQpLHRoaXMuY3VycmVudFRhYmxlPW51bGx9LG1vdXNldXA6ZnVuY3Rpb24oYil7cmV0dXJuIGImJmIucHJldmVudERlZmF1bHQoKSxhLnRhYmxlRG5ELnByb2Nlc3NNb3VzZXVwKCksITF9LGpzb25pemU6ZnVuY3Rpb24oYSl7dmFyIGI9dGhpcy5jdXJyZW50VGFibGU7cmV0dXJuIGE/SlNPTi5zdHJpbmdpZnkodGhpcy50YWJsZURhdGEoYiksbnVsbCxiLnRhYmxlRG5EQ29uZmlnLmpzb25QcmV0aWZ5U2VwYXJhdG9yKTpKU09OLnN0cmluZ2lmeSh0aGlzLnRhYmxlRGF0YShiKSl9LHNlcmlhbGl6ZTpmdW5jdGlvbigpe3JldHVybiBhLnBhcmFtKHRoaXMudGFibGVEYXRhKHRoaXMuY3VycmVudFRhYmxlKSl9LHNlcmlhbGl6ZVRhYmxlOmZ1bmN0aW9uKGEpe2Zvcih2YXIgYj1cIlwiLGM9YS50YWJsZURuRENvbmZpZy5zZXJpYWxpemVQYXJhbU5hbWV8fGEuaWQsZD1hLnJvd3MsZT0wO2U8ZC5sZW5ndGg7ZSsrKXtiLmxlbmd0aD4wJiYoYis9XCImXCIpO3ZhciBmPWRbZV0uaWQ7ZiYmYS50YWJsZURuRENvbmZpZyYmYS50YWJsZURuRENvbmZpZy5zZXJpYWxpemVSZWdleHAmJihmPWYubWF0Y2goYS50YWJsZURuRENvbmZpZy5zZXJpYWxpemVSZWdleHApWzBdLGIrPWMrXCJbXT1cIitmKX1yZXR1cm4gYn0sc2VyaWFsaXplVGFibGVzOmZ1bmN0aW9uKCl7dmFyIGI9W107cmV0dXJuIGEoXCJ0YWJsZVwiKS5lYWNoKGZ1bmN0aW9uKCl7dGhpcy5pZCYmYi5wdXNoKGEucGFyYW0oYS50YWJsZURuRC50YWJsZURhdGEodGhpcykpKX0pLGIuam9pbihcIiZcIil9LHRhYmxlRGF0YTpmdW5jdGlvbihiKXt2YXIgYyxkLGUsZixnPWIudGFibGVEbkRDb25maWcsaD1bXSxpPTAsaj0wLGs9bnVsbCxsPXt9O2lmKGJ8fChiPXRoaXMuY3VycmVudFRhYmxlKSwhYnx8IWIucm93c3x8IWIucm93cy5sZW5ndGgpcmV0dXJue2Vycm9yOntjb2RlOjUwMCxtZXNzYWdlOlwiTm90IGEgdmFsaWQgdGFibGUuXCJ9fTtpZighYi5pZCYmIWcuc2VyaWFsaXplUGFyYW1OYW1lKXJldHVybntlcnJvcjp7Y29kZTo1MDAsbWVzc2FnZTpcIk5vIHNlcmlhbGl6YWJsZSB1bmlxdWUgaWQgcHJvdmlkZWQuXCJ9fTtmPWcuYXV0b0NsZWFuUmVsYXRpb25zJiZiLnJvd3N8fGEubWFrZUFycmF5KGIucm93cyksZD1nLnNlcmlhbGl6ZVBhcmFtTmFtZXx8Yi5pZCxlPWQsYz1mdW5jdGlvbihhKXtyZXR1cm4gYSYmZyYmZy5zZXJpYWxpemVSZWdleHA/YS5tYXRjaChnLnNlcmlhbGl6ZVJlZ2V4cClbMF06YX0sbFtlXT1bXSwhZy5hdXRvQ2xlYW5SZWxhdGlvbnMmJmEoZlswXSkuZGF0YShcImxldmVsXCIpJiZmLnVuc2hpZnQoe2lkOlwidW5kZWZpbmVkXCJ9KTtmb3IodmFyIG09MDttPGYubGVuZ3RoO20rKylpZihnLmhpZXJhcmNoeUxldmVsKXtpZigwPT09KGo9YShmW21dKS5kYXRhKFwibGV2ZWxcIil8fDApKWU9ZCxoPVtdO2Vsc2UgaWYoaj5pKWgucHVzaChbZSxpXSksZT1jKGZbbS0xXS5pZCk7ZWxzZSBpZihqPGkpZm9yKHZhciBuPTA7bjxoLmxlbmd0aDtuKyspaFtuXVsxXT09PWomJihlPWhbbl1bMF0pLGhbbl1bMV0+PWkmJihoW25dWzFdPTApO2k9aixhLmlzQXJyYXkobFtlXSl8fChsW2VdPVtdKSxrPWMoZlttXS5pZCksayYmbFtlXS5wdXNoKGspfWVsc2Uoaz1jKGZbbV0uaWQpKSYmbFtlXS5wdXNoKGspO3JldHVybiBsfX0salF1ZXJ5LmZuLmV4dGVuZCh7dGFibGVEbkQ6YS50YWJsZURuRC5idWlsZCx0YWJsZURuRFVwZGF0ZTphLnRhYmxlRG5ELnVwZGF0ZVRhYmxlcyx0YWJsZURuRFNlcmlhbGl6ZTphLnByb3h5KGEudGFibGVEbkQuc2VyaWFsaXplLGEudGFibGVEbkQpLHRhYmxlRG5EU2VyaWFsaXplQWxsOmEudGFibGVEbkQuc2VyaWFsaXplVGFibGVzLHRhYmxlRG5ERGF0YTphLnByb3h5KGEudGFibGVEbkQudGFibGVEYXRhLGEudGFibGVEbkQpfSl9KGpRdWVyeSx3aW5kb3csd2luZG93LmRvY3VtZW50KTsiLCJtb2R1bGUuZXhwb3J0cyA9IHdpbmRvd1tcImpRdWVyeVwiXTsiLCIvLyBUaGUgbW9kdWxlIGNhY2hlXG52YXIgX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fID0ge307XG5cbi8vIFRoZSByZXF1aXJlIGZ1bmN0aW9uXG5mdW5jdGlvbiBfX3dlYnBhY2tfcmVxdWlyZV9fKG1vZHVsZUlkKSB7XG5cdC8vIENoZWNrIGlmIG1vZHVsZSBpcyBpbiBjYWNoZVxuXHR2YXIgY2FjaGVkTW9kdWxlID0gX193ZWJwYWNrX21vZHVsZV9jYWNoZV9fW21vZHVsZUlkXTtcblx0aWYgKGNhY2hlZE1vZHVsZSAhPT0gdW5kZWZpbmVkKSB7XG5cdFx0cmV0dXJuIGNhY2hlZE1vZHVsZS5leHBvcnRzO1xuXHR9XG5cdC8vIENyZWF0ZSBhIG5ldyBtb2R1bGUgKGFuZCBwdXQgaXQgaW50byB0aGUgY2FjaGUpXG5cdHZhciBtb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdID0ge1xuXHRcdC8vIG5vIG1vZHVsZS5pZCBuZWVkZWRcblx0XHQvLyBubyBtb2R1bGUubG9hZGVkIG5lZWRlZFxuXHRcdGV4cG9ydHM6IHt9XG5cdH07XG5cblx0Ly8gRXhlY3V0ZSB0aGUgbW9kdWxlIGZ1bmN0aW9uXG5cdF9fd2VicGFja19tb2R1bGVzX19bbW9kdWxlSWRdKG1vZHVsZSwgbW9kdWxlLmV4cG9ydHMsIF9fd2VicGFja19yZXF1aXJlX18pO1xuXG5cdC8vIFJldHVybiB0aGUgZXhwb3J0cyBvZiB0aGUgbW9kdWxlXG5cdHJldHVybiBtb2R1bGUuZXhwb3J0cztcbn1cblxuIiwiLyoqXG4gKiBDb3B5cmlnaHQgc2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIFByZXN0YVNob3AgaXMgYW4gSW50ZXJuYXRpb25hbCBSZWdpc3RlcmVkIFRyYWRlbWFyayAmIFByb3BlcnR5IG9mIFByZXN0YVNob3AgU0FcbiAqXG4gKiBOT1RJQ0UgT0YgTElDRU5TRVxuICpcbiAqIFRoaXMgc291cmNlIGZpbGUgaXMgc3ViamVjdCB0byB0aGUgT3BlbiBTb2Z0d2FyZSBMaWNlbnNlIChPU0wgMy4wKVxuICogdGhhdCBpcyBidW5kbGVkIHdpdGggdGhpcyBwYWNrYWdlIGluIHRoZSBmaWxlIExJQ0VOU0UubWQuXG4gKiBJdCBpcyBhbHNvIGF2YWlsYWJsZSB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiBhdCB0aGlzIFVSTDpcbiAqIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMFxuICogSWYgeW91IGRpZCBub3QgcmVjZWl2ZSBhIGNvcHkgb2YgdGhlIGxpY2Vuc2UgYW5kIGFyZSB1bmFibGUgdG9cbiAqIG9idGFpbiBpdCB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiwgcGxlYXNlIHNlbmQgYW4gZW1haWxcbiAqIHRvIGxpY2Vuc2VAcHJlc3Rhc2hvcC5jb20gc28gd2UgY2FuIHNlbmQgeW91IGEgY29weSBpbW1lZGlhdGVseS5cbiAqXG4gKiBESVNDTEFJTUVSXG4gKlxuICogRG8gbm90IGVkaXQgb3IgYWRkIHRvIHRoaXMgZmlsZSBpZiB5b3Ugd2lzaCB0byB1cGdyYWRlIFByZXN0YVNob3AgdG8gbmV3ZXJcbiAqIHZlcnNpb25zIGluIHRoZSBmdXR1cmUuIElmIHlvdSB3aXNoIHRvIGN1c3RvbWl6ZSBQcmVzdGFTaG9wIGZvciB5b3VyXG4gKiBuZWVkcyBwbGVhc2UgcmVmZXIgdG8gaHR0cHM6Ly9kZXZkb2NzLnByZXN0YXNob3AuY29tLyBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAqXG4gKiBAYXV0aG9yICAgIFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9ycyA8Y29udGFjdEBwcmVzdGFzaG9wLmNvbT5cbiAqIEBjb3B5cmlnaHQgU2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIEBsaWNlbnNlICAgaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9PU0wtMy4wIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqL1xuXG5pbXBvcnQgR3JpZCBmcm9tICdAY29tcG9uZW50cy9ncmlkL2dyaWQnO1xuaW1wb3J0IFNvcnRpbmdFeHRlbnNpb24gZnJvbSAnQGNvbXBvbmVudHMvZ3JpZC9leHRlbnNpb24vc29ydGluZy1leHRlbnNpb24nO1xuaW1wb3J0IEZpbHRlcnNSZXNldEV4dGVuc2lvbiBmcm9tICdAY29tcG9uZW50cy9ncmlkL2V4dGVuc2lvbi9maWx0ZXJzLXJlc2V0LWV4dGVuc2lvbic7XG5pbXBvcnQgUmVsb2FkTGlzdEFjdGlvbkV4dGVuc2lvbiBmcm9tICdAY29tcG9uZW50cy9ncmlkL2V4dGVuc2lvbi9yZWxvYWQtbGlzdC1leHRlbnNpb24nO1xuaW1wb3J0IFN1Ym1pdFJvd0FjdGlvbkV4dGVuc2lvbiBmcm9tICdAY29tcG9uZW50cy9ncmlkL2V4dGVuc2lvbi9hY3Rpb24vcm93L3N1Ym1pdC1yb3ctYWN0aW9uLWV4dGVuc2lvbic7XG5pbXBvcnQgU3VibWl0QnVsa0V4dGVuc2lvbiBmcm9tICdAY29tcG9uZW50cy9ncmlkL2V4dGVuc2lvbi9zdWJtaXQtYnVsay1hY3Rpb24tZXh0ZW5zaW9uJztcbmltcG9ydCBCdWxrQWN0aW9uQ2hlY2tib3hFeHRlbnNpb24gZnJvbSAnQGNvbXBvbmVudHMvZ3JpZC9leHRlbnNpb24vYnVsay1hY3Rpb24tY2hlY2tib3gtZXh0ZW5zaW9uJztcbmltcG9ydCBFeHBvcnRUb1NxbE1hbmFnZXJFeHRlbnNpb24gZnJvbSAnQGNvbXBvbmVudHMvZ3JpZC9leHRlbnNpb24vZXhwb3J0LXRvLXNxbC1tYW5hZ2VyLWV4dGVuc2lvbic7XG5pbXBvcnQgRmlsdGVyc1N1Ym1pdEJ1dHRvbkVuYWJsZXJFeHRlbnNpb25cbiAgZnJvbSAnQGNvbXBvbmVudHMvZ3JpZC9leHRlbnNpb24vZmlsdGVycy1zdWJtaXQtYnV0dG9uLWVuYWJsZXItZXh0ZW5zaW9uJztcbmltcG9ydCBQb3NpdGlvbkV4dGVuc2lvbiBmcm9tICdAY29tcG9uZW50cy9ncmlkL2V4dGVuc2lvbi9wb3NpdGlvbi1leHRlbnNpb24nO1xuXG5jb25zdCB7JH0gPSB3aW5kb3c7XG5cbiQoKCkgPT4ge1xuICBjb25zdCBncmlkID0gbmV3IEdyaWQoJ2F0dHJpYnV0ZScpO1xuXG4gIGdyaWQuYWRkRXh0ZW5zaW9uKG5ldyBFeHBvcnRUb1NxbE1hbmFnZXJFeHRlbnNpb24oKSk7XG4gIGdyaWQuYWRkRXh0ZW5zaW9uKG5ldyBSZWxvYWRMaXN0QWN0aW9uRXh0ZW5zaW9uKCkpO1xuICBncmlkLmFkZEV4dGVuc2lvbihuZXcgU29ydGluZ0V4dGVuc2lvbigpKTtcbiAgZ3JpZC5hZGRFeHRlbnNpb24obmV3IEZpbHRlcnNSZXNldEV4dGVuc2lvbigpKTtcbiAgZ3JpZC5hZGRFeHRlbnNpb24obmV3IFN1Ym1pdFJvd0FjdGlvbkV4dGVuc2lvbigpKTtcbiAgZ3JpZC5hZGRFeHRlbnNpb24obmV3IFN1Ym1pdEJ1bGtFeHRlbnNpb24oKSk7XG4gIGdyaWQuYWRkRXh0ZW5zaW9uKG5ldyBCdWxrQWN0aW9uQ2hlY2tib3hFeHRlbnNpb24oKSk7XG4gIGdyaWQuYWRkRXh0ZW5zaW9uKG5ldyBGaWx0ZXJzU3VibWl0QnV0dG9uRW5hYmxlckV4dGVuc2lvbigpKTtcbiAgZ3JpZC5hZGRFeHRlbnNpb24obmV3IFBvc2l0aW9uRXh0ZW5zaW9uKCkpO1xufSk7XG4iXSwic291cmNlUm9vdCI6IiJ9