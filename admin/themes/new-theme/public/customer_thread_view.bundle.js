/*! For license information please see customer_thread_view.bundle.js.LICENSE.txt */
(()=>{"use strict";var e,r,o,a,t={23788:(e,r)=>{Object.defineProperty(r,"__esModule",{value:!0}),r.default={forwardCustomerThreadModal:"#forwardThreadModal",forwardSomeoneElseEmailInput:"#forward_customer_thread_someone_else_email",forwardEmployeeInput:"#forward_customer_thread_employee_id"}}},d={};r=function e(r){var o=d[r];if(void 0!==o)return o.exports;var a=d[r]={exports:{}};return t[r](a,a.exports,e),a.exports}(23788),o=(e=r)&&e.__esModule?e:{default:e},(a=window.$)((function(){a(o.default.forwardEmployeeInput).on("change",(function(e){var r=a(o.default.forwardSomeoneElseEmailInput).closest(".form-group"),t=a(e.currentTarget).val();0===parseInt(t,10)?r.removeClass("d-none"):r.addClass("d-none")}))})),window.customer_thread_view={}})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9bbmFtZV0vLi9qcy9wYWdlcy9jdXN0b21lci10aHJlYWQvdmlldy5qcyIsIndlYnBhY2s6Ly9bbmFtZV0vLi9qcy9wYWdlcy9jdXN0b21lci10aHJlYWQvY3VzdG9tZXItdGhyZWFkLXZpZXctcGFnZS1tYXAuanMiLCJ3ZWJwYWNrOi8vW25hbWVdL3dlYnBhY2svYm9vdHN0cmFwIl0sIm5hbWVzIjpbIiQiLCJmb3J3YXJkQ3VzdG9tZXJUaHJlYWRNb2RhbCIsImZvcndhcmRTb21lb25lRWxzZUVtYWlsSW5wdXQiLCJmb3J3YXJkRW1wbG95ZWVJbnB1dCIsIl9fd2VicGFja19tb2R1bGVfY2FjaGVfXyIsIl9fd2VicGFja19yZXF1aXJlX18iLCJtb2R1bGVJZCIsImNhY2hlZE1vZHVsZSIsInVuZGVmaW5lZCIsImV4cG9ydHMiLCJtb2R1bGUiLCJfX3dlYnBhY2tfbW9kdWxlc19fIiwid2luZG93IiwiQ3VzdG9tZXJUaHJlYWRWaWV3UGFnZU1hcCIsIm9uIiwiZXZlbnQiLCIkc29tZUVsc2VFbWFpbEZvcm1Hcm91cCIsImNsb3Nlc3QiLCJlbXBsb3llZUlkIiwiY3VycmVudFRhcmdldCIsInZhbCIsInBhcnNlSW50IiwicmVtb3ZlQ2xhc3MiLCJhZGRDbGFzcyJdLCJtYXBwaW5ncyI6Ijt5QkF5QkEsRSxFQUVPQSxFLDRFQ0ZRLENBQ2JDLDJCQUE0QixzQkFDNUJDLDZCQUE4Qiw4Q0FDOUJDLHFCQUFzQiwwQ0MzQnBCQyxFQUEyQixHRndCL0IsRUVyQkEsU0FBU0MsRUFBb0JDLEdBRTVCLElBQUlDLEVBQWVILEVBQXlCRSxHQUM1QyxRQUFxQkUsSUFBakJELEVBQ0gsT0FBT0EsRUFBYUUsUUFHckIsSUFBSUMsRUFBU04sRUFBeUJFLEdBQVksQ0FHakRHLFFBQVMsSUFPVixPQUhBRSxFQUFvQkwsR0FBVUksRUFBUUEsRUFBT0QsUUFBU0osR0FHL0NLLEVBQU9ELFFGSWYsUSxxQ0FFT1QsRUFBS1ksT0FBTFosSUFFTCxXQUNBQSxFQUFFYSxVQUEwQlYsc0JBQXNCVyxHQUFHLFVBQVUsU0FBQ0MsR0FDOUQsSUFDTUMsRUFEeUJoQixFQUFFYSxVQUEwQlgsOEJBQ0plLFFBQVEsZUFFekRDLEVBQWFsQixFQUFFZSxFQUFNSSxlQUFlQyxNQUVULElBQTdCQyxTQUFTSCxFQUFZLElBQ3ZCRixFQUF3Qk0sWUFBWSxVQUVwQ04sRUFBd0JPLFNBQVMsZ0IiLCJmaWxlIjoiY3VzdG9tZXJfdGhyZWFkX3ZpZXcuYnVuZGxlLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLyoqXG4gKiBDb3B5cmlnaHQgc2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIFByZXN0YVNob3AgaXMgYW4gSW50ZXJuYXRpb25hbCBSZWdpc3RlcmVkIFRyYWRlbWFyayAmIFByb3BlcnR5IG9mIFByZXN0YVNob3AgU0FcbiAqXG4gKiBOT1RJQ0UgT0YgTElDRU5TRVxuICpcbiAqIFRoaXMgc291cmNlIGZpbGUgaXMgc3ViamVjdCB0byB0aGUgT3BlbiBTb2Z0d2FyZSBMaWNlbnNlIChPU0wgMy4wKVxuICogdGhhdCBpcyBidW5kbGVkIHdpdGggdGhpcyBwYWNrYWdlIGluIHRoZSBmaWxlIExJQ0VOU0UubWQuXG4gKiBJdCBpcyBhbHNvIGF2YWlsYWJsZSB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiBhdCB0aGlzIFVSTDpcbiAqIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMFxuICogSWYgeW91IGRpZCBub3QgcmVjZWl2ZSBhIGNvcHkgb2YgdGhlIGxpY2Vuc2UgYW5kIGFyZSB1bmFibGUgdG9cbiAqIG9idGFpbiBpdCB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiwgcGxlYXNlIHNlbmQgYW4gZW1haWxcbiAqIHRvIGxpY2Vuc2VAcHJlc3Rhc2hvcC5jb20gc28gd2UgY2FuIHNlbmQgeW91IGEgY29weSBpbW1lZGlhdGVseS5cbiAqXG4gKiBESVNDTEFJTUVSXG4gKlxuICogRG8gbm90IGVkaXQgb3IgYWRkIHRvIHRoaXMgZmlsZSBpZiB5b3Ugd2lzaCB0byB1cGdyYWRlIFByZXN0YVNob3AgdG8gbmV3ZXJcbiAqIHZlcnNpb25zIGluIHRoZSBmdXR1cmUuIElmIHlvdSB3aXNoIHRvIGN1c3RvbWl6ZSBQcmVzdGFTaG9wIGZvciB5b3VyXG4gKiBuZWVkcyBwbGVhc2UgcmVmZXIgdG8gaHR0cHM6Ly9kZXZkb2NzLnByZXN0YXNob3AuY29tLyBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAqXG4gKiBAYXV0aG9yICAgIFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9ycyA8Y29udGFjdEBwcmVzdGFzaG9wLmNvbT5cbiAqIEBjb3B5cmlnaHQgU2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIEBsaWNlbnNlICAgaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9PU0wtMy4wIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqL1xuXG5pbXBvcnQgQ3VzdG9tZXJUaHJlYWRWaWV3UGFnZU1hcCBmcm9tICcuL2N1c3RvbWVyLXRocmVhZC12aWV3LXBhZ2UtbWFwJztcblxuY29uc3QgeyR9ID0gd2luZG93O1xuXG4kKCgpID0+IHtcbiAgJChDdXN0b21lclRocmVhZFZpZXdQYWdlTWFwLmZvcndhcmRFbXBsb3llZUlucHV0KS5vbignY2hhbmdlJywgKGV2ZW50KSA9PiB7XG4gICAgY29uc3QgJHNvbWVvbmVFbHNlRW1haWxJbnB1dCA9ICQoQ3VzdG9tZXJUaHJlYWRWaWV3UGFnZU1hcC5mb3J3YXJkU29tZW9uZUVsc2VFbWFpbElucHV0KTtcbiAgICBjb25zdCAkc29tZUVsc2VFbWFpbEZvcm1Hcm91cCA9ICRzb21lb25lRWxzZUVtYWlsSW5wdXQuY2xvc2VzdCgnLmZvcm0tZ3JvdXAnKTtcblxuICAgIGNvbnN0IGVtcGxveWVlSWQgPSAkKGV2ZW50LmN1cnJlbnRUYXJnZXQpLnZhbCgpO1xuXG4gICAgaWYgKHBhcnNlSW50KGVtcGxveWVlSWQsIDEwKSA9PT0gMCkge1xuICAgICAgJHNvbWVFbHNlRW1haWxGb3JtR3JvdXAucmVtb3ZlQ2xhc3MoJ2Qtbm9uZScpO1xuICAgIH0gZWxzZSB7XG4gICAgICAkc29tZUVsc2VFbWFpbEZvcm1Hcm91cC5hZGRDbGFzcygnZC1ub25lJyk7XG4gICAgfVxuICB9KTtcbn0pO1xuIiwiLyoqXG4gKiBDb3B5cmlnaHQgc2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIFByZXN0YVNob3AgaXMgYW4gSW50ZXJuYXRpb25hbCBSZWdpc3RlcmVkIFRyYWRlbWFyayAmIFByb3BlcnR5IG9mIFByZXN0YVNob3AgU0FcbiAqXG4gKiBOT1RJQ0UgT0YgTElDRU5TRVxuICpcbiAqIFRoaXMgc291cmNlIGZpbGUgaXMgc3ViamVjdCB0byB0aGUgT3BlbiBTb2Z0d2FyZSBMaWNlbnNlIChPU0wgMy4wKVxuICogdGhhdCBpcyBidW5kbGVkIHdpdGggdGhpcyBwYWNrYWdlIGluIHRoZSBmaWxlIExJQ0VOU0UubWQuXG4gKiBJdCBpcyBhbHNvIGF2YWlsYWJsZSB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiBhdCB0aGlzIFVSTDpcbiAqIGh0dHBzOi8vb3BlbnNvdXJjZS5vcmcvbGljZW5zZXMvT1NMLTMuMFxuICogSWYgeW91IGRpZCBub3QgcmVjZWl2ZSBhIGNvcHkgb2YgdGhlIGxpY2Vuc2UgYW5kIGFyZSB1bmFibGUgdG9cbiAqIG9idGFpbiBpdCB0aHJvdWdoIHRoZSB3b3JsZC13aWRlLXdlYiwgcGxlYXNlIHNlbmQgYW4gZW1haWxcbiAqIHRvIGxpY2Vuc2VAcHJlc3Rhc2hvcC5jb20gc28gd2UgY2FuIHNlbmQgeW91IGEgY29weSBpbW1lZGlhdGVseS5cbiAqXG4gKiBESVNDTEFJTUVSXG4gKlxuICogRG8gbm90IGVkaXQgb3IgYWRkIHRvIHRoaXMgZmlsZSBpZiB5b3Ugd2lzaCB0byB1cGdyYWRlIFByZXN0YVNob3AgdG8gbmV3ZXJcbiAqIHZlcnNpb25zIGluIHRoZSBmdXR1cmUuIElmIHlvdSB3aXNoIHRvIGN1c3RvbWl6ZSBQcmVzdGFTaG9wIGZvciB5b3VyXG4gKiBuZWVkcyBwbGVhc2UgcmVmZXIgdG8gaHR0cHM6Ly9kZXZkb2NzLnByZXN0YXNob3AuY29tLyBmb3IgbW9yZSBpbmZvcm1hdGlvbi5cbiAqXG4gKiBAYXV0aG9yICAgIFByZXN0YVNob3AgU0EgYW5kIENvbnRyaWJ1dG9ycyA8Y29udGFjdEBwcmVzdGFzaG9wLmNvbT5cbiAqIEBjb3B5cmlnaHQgU2luY2UgMjAwNyBQcmVzdGFTaG9wIFNBIGFuZCBDb250cmlidXRvcnNcbiAqIEBsaWNlbnNlICAgaHR0cHM6Ly9vcGVuc291cmNlLm9yZy9saWNlbnNlcy9PU0wtMy4wIE9wZW4gU29mdHdhcmUgTGljZW5zZSAoT1NMIDMuMClcbiAqL1xuXG5leHBvcnQgZGVmYXVsdCB7XG4gIGZvcndhcmRDdXN0b21lclRocmVhZE1vZGFsOiAnI2ZvcndhcmRUaHJlYWRNb2RhbCcsXG4gIGZvcndhcmRTb21lb25lRWxzZUVtYWlsSW5wdXQ6ICcjZm9yd2FyZF9jdXN0b21lcl90aHJlYWRfc29tZW9uZV9lbHNlX2VtYWlsJyxcbiAgZm9yd2FyZEVtcGxveWVlSW5wdXQ6ICcjZm9yd2FyZF9jdXN0b21lcl90aHJlYWRfZW1wbG95ZWVfaWQnLFxufTtcbiIsIi8vIFRoZSBtb2R1bGUgY2FjaGVcbnZhciBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX18gPSB7fTtcblxuLy8gVGhlIHJlcXVpcmUgZnVuY3Rpb25cbmZ1bmN0aW9uIF9fd2VicGFja19yZXF1aXJlX18obW9kdWxlSWQpIHtcblx0Ly8gQ2hlY2sgaWYgbW9kdWxlIGlzIGluIGNhY2hlXG5cdHZhciBjYWNoZWRNb2R1bGUgPSBfX3dlYnBhY2tfbW9kdWxlX2NhY2hlX19bbW9kdWxlSWRdO1xuXHRpZiAoY2FjaGVkTW9kdWxlICE9PSB1bmRlZmluZWQpIHtcblx0XHRyZXR1cm4gY2FjaGVkTW9kdWxlLmV4cG9ydHM7XG5cdH1cblx0Ly8gQ3JlYXRlIGEgbmV3IG1vZHVsZSAoYW5kIHB1dCBpdCBpbnRvIHRoZSBjYWNoZSlcblx0dmFyIG1vZHVsZSA9IF9fd2VicGFja19tb2R1bGVfY2FjaGVfX1ttb2R1bGVJZF0gPSB7XG5cdFx0Ly8gbm8gbW9kdWxlLmlkIG5lZWRlZFxuXHRcdC8vIG5vIG1vZHVsZS5sb2FkZWQgbmVlZGVkXG5cdFx0ZXhwb3J0czoge31cblx0fTtcblxuXHQvLyBFeGVjdXRlIHRoZSBtb2R1bGUgZnVuY3Rpb25cblx0X193ZWJwYWNrX21vZHVsZXNfX1ttb2R1bGVJZF0obW9kdWxlLCBtb2R1bGUuZXhwb3J0cywgX193ZWJwYWNrX3JlcXVpcmVfXyk7XG5cblx0Ly8gUmV0dXJuIHRoZSBleHBvcnRzIG9mIHRoZSBtb2R1bGVcblx0cmV0dXJuIG1vZHVsZS5leHBvcnRzO1xufVxuXG4iXSwic291cmNlUm9vdCI6IiJ9